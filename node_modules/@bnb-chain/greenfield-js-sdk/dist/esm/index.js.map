{"version":3,"file":"index.js","sources":["../../../../node_modules/.pnpm/tslib@2.8.1/node_modules/tslib/tslib.es6.mjs","../../../src/messages/utils.ts","../../../../node_modules/.pnpm/@noble+hashes@1.4.0/node_modules/@noble/hashes/esm/_assert.js","../../../../node_modules/.pnpm/@noble+hashes@1.4.0/node_modules/@noble/hashes/esm/crypto.js","../../../../node_modules/.pnpm/@noble+hashes@1.4.0/node_modules/@noble/hashes/esm/utils.js","../../../../node_modules/.pnpm/@noble+hashes@1.4.0/node_modules/@noble/hashes/esm/_md.js","../../../../node_modules/.pnpm/@noble+hashes@1.4.0/node_modules/@noble/hashes/esm/sha256.js","../../../../node_modules/.pnpm/@noble+curves@1.4.2/node_modules/@noble/curves/esm/abstract/utils.js","../../../../node_modules/.pnpm/@noble+curves@1.4.2/node_modules/@noble/curves/esm/abstract/modular.js","../../../../node_modules/.pnpm/@noble+hashes@1.4.0/node_modules/@noble/hashes/esm/hmac.js","../../../../node_modules/.pnpm/@noble+curves@1.4.2/node_modules/@noble/curves/esm/abstract/curve.js","../../../../node_modules/.pnpm/@noble+curves@1.4.2/node_modules/@noble/curves/esm/abstract/weierstrass.js","../../../../node_modules/.pnpm/@noble+curves@1.4.2/node_modules/@noble/curves/esm/_shortw_utils.js","../../../../node_modules/.pnpm/@noble+curves@1.4.2/node_modules/@noble/curves/esm/secp256k1.js","../../../../node_modules/.pnpm/ethereum-cryptography@2.2.1/node_modules/ethereum-cryptography/esm/utils.js","../../../../node_modules/.pnpm/ethereum-cryptography@2.2.1/node_modules/ethereum-cryptography/esm/secp256k1-compat.js","../../../src/keymanage/index.ts","../../../src/sign/pubKey.ts","../../../src/sign/signTx.ts","../../../src/utils/units.ts","../../../src/clients/queryclient.ts","../../../src/constants/typeUrl.ts","../../../src/constants/http.ts","../../../src/constants/index.ts","../../../src/clients/txClient.ts","../../../src/messages/bank/MsgMultiSend.ts","../../../src/messages/bank/MsgSend.ts","../../../src/messages/greenfield/payment/MsgCreatePaymentAccount.ts","../../../src/api/account.ts","../../../src/api/basic.ts","../../../src/messages/greenfield/bridge/MsgTransferOut.ts","../../../src/messages/greenfield/chanenge/MsgAttest.ts","../../../src/messages/greenfield/chanenge/MsgSubmit.ts","../../../src/messages/greenfield/payment/MsgDeposit.ts","../../../src/messages/greenfield/payment/MsgDisableRefund.ts","../../../src/messages/greenfield/payment/MsgWithdraw.ts","../../../src/messages/greenfield/storage/MsgCancelCreateObject.ts","../../../src/messages/greenfield/storage/MsgCreateBucket.ts","../../../src/messages/greenfield/storage/MsgCreateGroup.ts","../../../src/messages/greenfield/storage/MsgCreateObject.ts","../../../src/messages/greenfield/storage/MsgDeleteBucket.ts","../../../src/messages/greenfield/storage/MsgDeleteGroup.ts","../../../src/messages/greenfield/storage/MsgDeleteObject.ts","../../../src/messages/greenfield/storage/MsgDeletePolicy.ts","../../../src/messages/greenfield/storage/MsgLeaveGroup.ts","../../../src/messages/greenfield/storage/MsgMigrateBucket.ts","../../../src/messages/greenfield/storage/MsgMirrorBucket.ts","../../../src/messages/greenfield/storage/MsgMirrorGroup.ts","../../../src/messages/greenfield/storage/MsgMirrorObject.ts","../../../src/messages/greenfield/storage/MsgPutPolicy.ts","../../../src/messages/greenfield/storage/MsgSetTag.ts","../../../src/messages/greenfield/storage/MsgToggleSPAsDelegatedAgent.ts","../../../src/messages/greenfield/storage/MsgUpdateBucketInfo.ts","../../../src/messages/greenfield/storage/MsgUpdateGroupExtra.ts","../../../src/messages/greenfield/storage/MsgUpdateGroupMember.ts","../../../src/messages/greenfield/storage/MsgUpdateObjectInfo.ts","../../../src/messages/greenfield/storage/MsgSetBucketFlowRateLimit.ts","../../../src/utils/asserts/params.ts","../../../../node_modules/.pnpm/@noble+hashes@1.7.1/node_modules/@noble/hashes/esm/_assert.js","../../../../node_modules/.pnpm/@noble+hashes@1.7.1/node_modules/@noble/hashes/esm/crypto.js","../../../../node_modules/.pnpm/@noble+hashes@1.7.1/node_modules/@noble/hashes/esm/utils.js","../../../../node_modules/.pnpm/@noble+hashes@1.7.1/node_modules/@noble/hashes/esm/_md.js","../../../../node_modules/.pnpm/@noble+hashes@1.7.1/node_modules/@noble/hashes/esm/_u64.js","../../../../node_modules/.pnpm/@noble+hashes@1.7.1/node_modules/@noble/hashes/esm/sha512.js","../../../../node_modules/.pnpm/@noble+curves@1.8.1/node_modules/@noble/curves/esm/abstract/utils.js","../../../../node_modules/.pnpm/@noble+curves@1.8.1/node_modules/@noble/curves/esm/abstract/modular.js","../../../../node_modules/.pnpm/@noble+curves@1.8.1/node_modules/@noble/curves/esm/abstract/curve.js","../../../../node_modules/.pnpm/@noble+curves@1.8.1/node_modules/@noble/curves/esm/abstract/edwards.js","../../../../node_modules/.pnpm/@noble+curves@1.8.1/node_modules/@noble/curves/esm/abstract/montgomery.js","../../../../node_modules/.pnpm/@noble+curves@1.8.1/node_modules/@noble/curves/esm/ed25519.js","../../../../node_modules/.pnpm/@noble+hashes@1.4.0/node_modules/@noble/hashes/esm/_u64.js","../../../../node_modules/.pnpm/@noble+hashes@1.4.0/node_modules/@noble/hashes/esm/sha3.js","../../../../node_modules/.pnpm/ethereum-cryptography@2.2.1/node_modules/ethereum-cryptography/esm/keccak.js","../../../src/clients/spclient/auth.ts","../../../src/clients/spclient/spApis/approval.ts","../../../src/types/sp/Common.ts","../../../src/clients/spclient/spApis/getBucketMeta.ts","../../../src/clients/spclient/spApis/getUserBuckets.ts","../../../src/utils/allowance.ts","../../../src/utils/asserts/s3.ts","../../../src/utils/encoding.ts","../../../src/utils/grn.ts","../../../src/utils/time.ts","../../../src/clients/spclient/spApis/listBucketReadRecords.ts","../../../src/clients/spclient/spApis/listBucketsByIds.ts","../../../src/clients/spclient/spApis/listBucketsByPayment.ts","../../../src/clients/spclient/spApis/parseError.ts","../../../src/clients/spclient/spApis/queryBucketReadQuota.ts","../../../src/utils/http.ts","../../../src/clients/spclient/spApis/getObject.ts","../../../src/clients/spclient/spApis/putObject.ts","../../../src/clients/spclient/spClient.ts","../../../src/clients/spclient/spApis/listGroups.ts","../../../src/clients/spclient/spApis/listGroupsMembers.ts","../../../src/clients/spclient/spApis/listUserGroups.ts","../../../src/clients/spclient/spApis/listUserOwnedGroups.ts","../../../src/clients/spclient/spApis/verifyPermission.ts","../../../src/messages/greenfield/virtualgroup/MsgSettle.ts","../../../src/api/virtualGroup.ts","../../../src/api/sp.ts","../../../src/api/storage.ts","../../../src/messages/greenfield/storage/MsgCancelMigrateBucket.ts","../../../src/api/bucket.ts","../../../src/api/challenge.ts","../../../src/messages/cosmos/oracle/MsgClaim.ts","../../../src/api/crosschain.ts","../../../src/messages/cosmos/distribution/MsgFundCommunityPoolTypeUrl.ts","../../../src/messages/cosmos/distribution/MsgSetWithdrawAddress.ts","../../../src/messages/cosmos/distribution/MsgWithdrawDelegatorReward.ts","../../../src/messages/cosmos/distribution/MsgWithdrawValidatorCommission.ts","../../../src/api/distribution.ts","../../../src/messages/feegrant/MsgGrantAllowance.ts","../../../src/messages/feegrant/MsgRevokeAllowance.ts","../../../src/api/feegrant.ts","../../../src/api/gashub.ts","../../../src/api/group.ts","../../../src/clients/spclient/spApis/resumablePutObject.ts","../../../src/clients/spclient/spApis/delegatedCreateFolder.ts","../../../src/clients/spclient/spApis/getObjectMeta.ts","../../../src/clients/spclient/spApis/getObjectOffset.ts","../../../src/clients/spclient/spApis/getObjectStatus.ts","../../../src/clients/spclient/spApis/listObjectPolicies.ts","../../../src/clients/spclient/spApis/listObjectsByBucket.ts","../../../src/clients/spclient/spApis/listObjectsByIds.ts","../../../src/api/objects.ts","../../../src/clients/spclient/spApis/updateUserAccountKey.ts","../../../src/offchainauth/utils.ts","../../../src/api/offchainauth.ts","../../../src/clients/spclient/spApis/listUserPaymentAccounts.ts","../../../src/api/payment.ts","../../../src/messages/cosmos/gov/MsgSubmitProposal.ts","../../../src/messages/cosmos/gov/MsgVote.ts","../../../src/api/proposal.ts","../../../src/messages/cosmos/staking/MsgCreateValidator.ts","../../../src/messages/cosmos/staking/MsgEditValidator.ts","../../../src/api/validator.ts","../../../src/client.ts","../../../src/clients/spclient/spApis/metaInfos.ts"],"sourcesContent":["/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol, Iterator */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nexport var __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nexport function __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nexport function __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nexport function __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nexport function __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nexport function __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nexport function __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\n  return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nexport function __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nexport function __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nexport function __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = Object.create((typeof AsyncIterator === \"function\" ? AsyncIterator : Object).prototype), verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\n  function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nvar ownKeys = function(o) {\n  ownKeys = Object.getOwnPropertyNames || function (o) {\n    var ar = [];\n    for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n    return ar;\n  };\n  return ownKeys(o);\n};\n\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nexport function __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nexport function __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nexport function __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose, inner;\n    if (async) {\n      if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n      dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n      if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n      dispose = value[Symbol.dispose];\n      if (async) inner = dispose;\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    if (inner) dispose = function() { try { inner.call(this); } catch (e) { return Promise.reject(e); } };\n    env.stack.push({ value: value, dispose: dispose, async: async });\n  }\n  else if (async) {\n    env.stack.push({ async: true });\n  }\n  return value;\n}\n\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nexport function __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n    env.hasError = true;\n  }\n  var r, s = 0;\n  function next() {\n    while (r = env.stack.pop()) {\n      try {\n        if (!r.async && s === 1) return s = 0, env.stack.push(r), Promise.resolve().then(next);\n        if (r.dispose) {\n          var result = r.dispose.call(r.value);\n          if (r.async) return s |= 2, Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n        }\n        else s |= 1;\n      }\n      catch (e) {\n        fail(e);\n      }\n    }\n    if (s === 1) return env.hasError ? Promise.reject(env.error) : Promise.resolve();\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n\nexport function __rewriteRelativeImportExtension(path, preserveJsx) {\n  if (typeof path === \"string\" && /^\\.\\.?\\//.test(path)) {\n      return path.replace(/\\.(tsx)$|((?:\\.d)?)((?:\\.[^./]+?)?)\\.([cm]?)ts$/i, function (m, tsx, d, ext, cm) {\n          return tsx ? preserveJsx ? \".jsx\" : \".js\" : d && (!ext || !cm) ? m : (d + ext + \".\" + cm.toLowerCase() + \"js\");\n      });\n  }\n  return path;\n}\n\nexport default {\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __esDecorate,\n  __runInitializers,\n  __propKey,\n  __setFunctionName,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources,\n  __rewriteRelativeImportExtension,\n};\n","import { Any } from '@bnb-chain/greenfield-cosmos-types/google/protobuf/any';\nimport * as base64 from '@ethersproject/base64';\nimport { hexlify } from '@ethersproject/bytes';\nimport { toUtf8String } from '@ethersproject/strings';\nimport cloneDeep from 'lodash.clonedeep';\nimport get from 'lodash.get';\nimport mapValues from 'lodash.mapvalues';\nimport set from 'lodash.set';\nimport sortBy from 'lodash.sortby';\nimport { MetaTxInfo } from '..';\n\nexport type EIP712Msg = Record<string, Array<{ type: string; name: string }>>;\n\nexport const typeWrapper = (type: string, msg: object) => {\n  return {\n    ...msg,\n    type,\n  };\n};\n\nexport const generateMsg = (typeUrl: string, msgBytes: Uint8Array) => {\n  return Any.fromPartial({\n    typeUrl,\n    value: msgBytes,\n  });\n};\n\nexport const createEIP712 = (types: object, chainId: string, message: object) => {\n  return {\n    types,\n    primaryType: 'Tx',\n    domain: {\n      name: 'Greenfield Tx',\n      version: '1.0.0',\n      chainId,\n      verifyingContract: '0x71e835aff094655dEF897fbc85534186DbeaB75d',\n      salt: '0',\n    },\n    message,\n  } as const;\n};\n\nexport const generateMessage = (\n  accountNumber: string,\n  sequence: string,\n  chainCosmosId: string,\n  memo: string,\n  fee: object,\n  msg: object,\n  timeoutHeight: string,\n) => {\n  let res: Record<string, any> = {\n    account_number: accountNumber,\n    chain_id: chainCosmosId,\n    sequence,\n    memo,\n    fee,\n    timeout_height: timeoutHeight,\n  };\n\n  if (Object.keys(msg).length == 0) {\n    return res;\n  }\n\n  if (msg.hasOwnProperty('msg1')) {\n    res = {\n      ...res,\n      ...msg,\n    };\n  } else {\n    res.msg1 = msg;\n  }\n\n  return res;\n};\n\nexport const generateTypes = (newTypes: object) => {\n  const types = {\n    Coin: [\n      { name: 'denom', type: 'string' },\n      { name: 'amount', type: 'uint256' },\n    ],\n    EIP712Domain: [\n      { name: 'name', type: 'string' },\n      { name: 'version', type: 'string' },\n      { name: 'chainId', type: 'uint256' },\n      { name: 'verifyingContract', type: 'string' },\n      { name: 'salt', type: 'string' },\n    ],\n    Fee: [\n      { name: 'amount', type: 'Coin[]' },\n      { name: 'gas_limit', type: 'uint256' },\n      { name: 'payer', type: 'string' },\n      { name: 'granter', type: 'string' },\n    ],\n    Tx: [\n      {\n        name: 'account_number',\n        type: 'uint256',\n      },\n      {\n        name: 'chain_id',\n        type: 'uint256',\n      },\n      {\n        name: 'fee',\n        type: 'Fee',\n      },\n      {\n        name: 'memo',\n        type: 'string',\n      },\n      {\n        name: 'sequence',\n        type: 'uint256',\n      },\n      {\n        name: 'timeout_height',\n        type: 'uint256',\n      },\n    ],\n  };\n\n  if (Array.isArray(newTypes)) {\n    for (let i = 0; i < newTypes.length; i++) {\n      types.Tx.push({\n        name: `msg${i + 1}`,\n        type: `Msg${i + 1}`,\n      });\n    }\n    Object.assign(types, ...newTypes);\n  } else if (typeof newTypes === 'object') {\n    const msgLen = Object.keys(newTypes).filter((k) => k.startsWith('Msg')).length;\n\n    for (let i = 0; i < msgLen; i++) {\n      types.Tx.push({\n        name: `msg${i + 1}`,\n        type: `Msg${i + 1}`,\n      });\n    }\n\n    Object.assign(types, newTypes);\n  } else {\n    types.Tx.push({\n      name: 'msg1',\n      type: 'Msg1',\n    });\n    Object.assign(types, newTypes);\n  }\n\n  return mapValues(types, (o) => {\n    return sortBy(o, ['name']);\n  });\n};\n\nexport const generateFee = (\n  amount: string,\n  denom: string,\n  gas_limit: string,\n  payer: string,\n  granter: string,\n) => {\n  return {\n    amount: [\n      {\n        amount,\n        denom,\n      },\n    ],\n    gas_limit,\n    payer,\n    granter,\n  };\n};\n\nexport const mergeMultiEip712 = (\n  eip712s: MetaTxInfo['MsgSDKTypeEIP712'][],\n): MetaTxInfo['MsgSDKTypeEIP712'][] => {\n  const res: MetaTxInfo['MsgSDKTypeEIP712'][] = [];\n\n  eip712s.forEach((eip712, index) => {\n    if (index === 0) {\n      res.push(eip712);\n    } else {\n      const str = JSON.stringify(eip712);\n      const reStr = str.replaceAll('Msg1', `Msg${index + 1}`);\n      res.push(JSON.parse(reStr) as MetaTxInfo['MsgSDKTypeEIP712']);\n    }\n  });\n\n  return res;\n};\n\nexport const mergeMultiMessage = (txs: MetaTxInfo[]) => {\n  const msgs = txs.map((tx) => tx.MsgSDK);\n\n  const res: Record<string, MetaTxInfo['MsgSDK']> = {};\n  msgs.forEach((msg, index) => {\n    res[`msg${index + 1}`] = {\n      ...msg,\n      type: txs[index].typeUrl,\n    };\n  });\n\n  return res;\n};\n\nexport const findAnyType = (msgData: object): string[][] => {\n  const results: string[][] = [];\n\n  function findTypeAnyFields(obj: object, path: string[] = []) {\n    if (typeof obj === 'object' && obj !== null) {\n      for (const key in obj) {\n        const newPath: string[] = [...path, key];\n        // console.log(newPath.join('.'));\n        if (key === 'value') {\n          results.push(newPath);\n        }\n        findTypeAnyFields((obj as any)[key], newPath);\n      }\n    } else {\n      // console.log(obj);\n    }\n  }\n\n  findTypeAnyFields(msgData);\n  return results;\n};\n\nexport const convertAnyTypeData = (msgData: object, fields: string[][]) => {\n  const resData = cloneDeep(msgData);\n\n  fields.forEach((field) => {\n    const path = field.join('.');\n    const anyValue = get(resData, path);\n\n    // console.log('path', path, anyValue);\n    if (anyValue.startsWith('ZXl')) {\n      // TypeAny: need base64 decode\n      set(resData, path, toUtf8String(base64.decode(anyValue)));\n    } else if (anyValue.startsWith('eyJ')) {\n      // TypeAny[]: need base64 decode and encode hex\n      set(resData, path, hexlify(base64.decode(anyValue)));\n    } else {\n      // throw new Error('not support value' + anyValue);\n    }\n  });\n\n  return resData;\n};\n","function number(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error(`positive integer expected, not ${n}`);\n}\nfunction bool(b) {\n    if (typeof b !== 'boolean')\n        throw new Error(`boolean expected, not ${b}`);\n}\n// copied from utils\nexport function isBytes(a) {\n    return (a instanceof Uint8Array ||\n        (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array'));\n}\nfunction bytes(b, ...lengths) {\n    if (!isBytes(b))\n        throw new Error('Uint8Array expected');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new Error(`Uint8Array expected of length ${lengths}, not of length=${b.length}`);\n}\nfunction hash(h) {\n    if (typeof h !== 'function' || typeof h.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    number(h.outputLen);\n    number(h.blockLen);\n}\nfunction exists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\nfunction output(out, instance) {\n    bytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n    }\n}\nexport { number, bool, bytes, hash, exists, output };\nconst assert = { number, bool, bytes, hash, exists, output };\nexport default assert;\n//# sourceMappingURL=_assert.js.map","export const crypto = typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\n//# sourceMappingURL=crypto.js.map","/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated (2025-04-30), we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\nimport { bytes as abytes } from './_assert.js';\n// export { isBytes } from './_assert.js';\n// We can't reuse isBytes from _assert, because somehow this causes huge perf issues\nexport function isBytes(a) {\n    return (a instanceof Uint8Array ||\n        (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array'));\n}\n// Cast array to different type\nexport const u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n// Cast array to view\nexport const createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\n// The rotate left (circular left shift) operation for uint32\nexport const rotl = (word, shift) => (word << shift) | ((word >>> (32 - shift)) >>> 0);\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\n// The byte swap operation for uint32\nexport const byteSwap = (word) => ((word << 24) & 0xff000000) |\n    ((word << 8) & 0xff0000) |\n    ((word >>> 8) & 0xff00) |\n    ((word >>> 24) & 0xff);\n// Conditionally byte swap if on a big-endian platform\nexport const byteSwapIfBE = isLE ? (n) => n : (n) => byteSwap(n);\n// In place byte swap for Uint32Array\nexport function byteSwap32(arr) {\n    for (let i = 0; i < arr.length; i++) {\n        arr[i] = byteSwap(arr[i]);\n    }\n}\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes) {\n    abytes(bytes);\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, _A: 65, _F: 70, _a: 97, _f: 102 };\nfunction asciiToBase16(char) {\n    if (char >= asciis._0 && char <= asciis._9)\n        return char - asciis._0;\n    if (char >= asciis._A && char <= asciis._F)\n        return char - (asciis._A - 10);\n    if (char >= asciis._a && char <= asciis._f)\n        return char - (asciis._a - 10);\n    return;\n}\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    const hl = hex.length;\n    const al = hl / 2;\n    if (hl % 2)\n        throw new Error('padded hex string expected, got unpadded hex of length ' + hl);\n    const array = new Uint8Array(al);\n    for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n        const n1 = asciiToBase16(hex.charCodeAt(hi));\n        const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n        if (n1 === undefined || n2 === undefined) {\n            const char = hex[hi] + hex[hi + 1];\n            throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n        }\n        array[ai] = n1 * 16 + n2;\n    }\n    return array;\n}\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => { };\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await nextTick();\n        ts += diff;\n    }\n}\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    abytes(data);\n    return data;\n}\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays) {\n    let sum = 0;\n    for (let i = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        abytes(a);\n        sum += a.length;\n    }\n    const res = new Uint8Array(sum);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        res.set(a, pad);\n        pad += a.length;\n    }\n    return res;\n}\n// For runtime check if class implements interface\nexport class Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\nconst toStr = {}.toString;\nexport function checkOpts(defaults, opts) {\n    if (opts !== undefined && toStr.call(opts) !== '[object Object]')\n        throw new Error('Options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\nexport function wrapConstructor(hashCons) {\n    const hashC = (msg) => hashCons().update(toBytes(msg)).digest();\n    const tmp = hashCons();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashCons();\n    return hashC;\n}\nexport function wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nexport function wrapXOFConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\n/**\n * Secure PRNG. Uses `crypto.getRandomValues`, which defers to OS.\n */\nexport function randomBytes(bytesLength = 32) {\n    if (crypto && typeof crypto.getRandomValues === 'function') {\n        return crypto.getRandomValues(new Uint8Array(bytesLength));\n    }\n    throw new Error('crypto.getRandomValues must be defined');\n}\n//# sourceMappingURL=utils.js.map","import { exists, output } from './_assert.js';\nimport { Hash, createView, toBytes } from './utils.js';\n// Polyfill for Safari 14\nfunction setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n// Choice: a ? b : c\nexport const Chi = (a, b, c) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nexport const Maj = (a, b, c) => (a & b) ^ (a & c) ^ (b & c);\n/**\n * Merkle-Damgard hash construction base class.\n * Could be used to create MD5, RIPEMD, SHA1, SHA2.\n */\nexport class HashMD extends Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = createView(this.buffer);\n    }\n    update(data) {\n        exists(this);\n        const { view, buffer, blockLen } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = createView(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        exists(this);\n        output(out, this);\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        this.buffer.subarray(pos).fill(0);\n        // we have less than padOffset left in buffer, so we cannot put length in\n        // current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64 bits of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = createView(out);\n        const len = this.outputLen;\n        // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n        if (len % 4)\n            throw new Error('_sha2: outputLen should be aligned to 32bit');\n        const outLen = len / 4;\n        const state = this.get();\n        if (outLen > state.length)\n            throw new Error('_sha2: outputLen bigger than state');\n        for (let i = 0; i < outLen; i++)\n            oview.setUint32(4 * i, state[i], isLE);\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.length = length;\n        to.pos = pos;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n}\n//# sourceMappingURL=_md.js.map","import { HashMD, Chi, Maj } from './_md.js';\nimport { rotr, wrapConstructor } from './utils.js';\n// SHA2-256 need to try 2^128 hashes to execute birthday attack.\n// BTC network is doing 2^67 hashes/sec as per early 2023.\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = /* @__PURE__ */ new Uint32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n// Initial state:\n// first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19\n// prettier-ignore\nconst SHA256_IV = /* @__PURE__ */ new Uint32Array([\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = /* @__PURE__ */ new Uint32Array(64);\nclass SHA256 extends HashMD {\n    constructor() {\n        super(64, 32, 8, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        this.A = SHA256_IV[0] | 0;\n        this.B = SHA256_IV[1] | 0;\n        this.C = SHA256_IV[2] | 0;\n        this.D = SHA256_IV[3] | 0;\n        this.E = SHA256_IV[4] | 0;\n        this.F = SHA256_IV[5] | 0;\n        this.G = SHA256_IV[6] | 0;\n        this.H = SHA256_IV[7] | 0;\n    }\n    get() {\n        const { A, B, C, D, E, F, G, H } = this;\n        return [A, B, C, D, E, F, G, H];\n    }\n    // prettier-ignore\n    set(A, B, C, D, E, F, G, H) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n        this.F = F | 0;\n        this.G = G | 0;\n        this.H = H | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA256_W[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 64; i++) {\n            const W15 = SHA256_W[i - 15];\n            const W2 = SHA256_W[i - 2];\n            const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n            const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n        }\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D, E, F, G, H } = this;\n        for (let i = 0; i < 64; i++) {\n            const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n            const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n            const T2 = (sigma0 + Maj(A, B, C)) | 0;\n            H = G;\n            G = F;\n            F = E;\n            E = (D + T1) | 0;\n            D = C;\n            C = B;\n            B = A;\n            A = (T1 + T2) | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        F = (F + this.F) | 0;\n        G = (G + this.G) | 0;\n        H = (H + this.H) | 0;\n        this.set(A, B, C, D, E, F, G, H);\n    }\n    roundClean() {\n        SHA256_W.fill(0);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n        this.buffer.fill(0);\n    }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n    constructor() {\n        super();\n        this.A = 0xc1059ed8 | 0;\n        this.B = 0x367cd507 | 0;\n        this.C = 0x3070dd17 | 0;\n        this.D = 0xf70e5939 | 0;\n        this.E = 0xffc00b31 | 0;\n        this.F = 0x68581511 | 0;\n        this.G = 0x64f98fa7 | 0;\n        this.H = 0xbefa4fa4 | 0;\n        this.outputLen = 28;\n    }\n}\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexport const sha256 = /* @__PURE__ */ wrapConstructor(() => new SHA256());\nexport const sha224 = /* @__PURE__ */ wrapConstructor(() => new SHA224());\n//# sourceMappingURL=sha256.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// 100 lines of code in the file are duplicated from noble-hashes (utils).\n// This is OK: `abstract` directory does not use noble-hashes.\n// User may opt-in into using different hashing library. This way, noble-hashes\n// won't be included into their bundle.\nconst _0n = /* @__PURE__ */ BigInt(0);\nconst _1n = /* @__PURE__ */ BigInt(1);\nconst _2n = /* @__PURE__ */ BigInt(2);\nexport function isBytes(a) {\n    return (a instanceof Uint8Array ||\n        (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array'));\n}\nexport function abytes(item) {\n    if (!isBytes(item))\n        throw new Error('Uint8Array expected');\n}\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes) {\n    abytes(bytes);\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\nexport function numberToHexUnpadded(num) {\n    const hex = num.toString(16);\n    return hex.length & 1 ? `0${hex}` : hex;\n}\nexport function hexToNumber(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    // Big Endian\n    return BigInt(hex === '' ? '0' : `0x${hex}`);\n}\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, _A: 65, _F: 70, _a: 97, _f: 102 };\nfunction asciiToBase16(char) {\n    if (char >= asciis._0 && char <= asciis._9)\n        return char - asciis._0;\n    if (char >= asciis._A && char <= asciis._F)\n        return char - (asciis._A - 10);\n    if (char >= asciis._a && char <= asciis._f)\n        return char - (asciis._a - 10);\n    return;\n}\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    const hl = hex.length;\n    const al = hl / 2;\n    if (hl % 2)\n        throw new Error('padded hex string expected, got unpadded hex of length ' + hl);\n    const array = new Uint8Array(al);\n    for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n        const n1 = asciiToBase16(hex.charCodeAt(hi));\n        const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n        if (n1 === undefined || n2 === undefined) {\n            const char = hex[hi] + hex[hi + 1];\n            throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n        }\n        array[ai] = n1 * 16 + n2;\n    }\n    return array;\n}\n// BE: Big Endian, LE: Little Endian\nexport function bytesToNumberBE(bytes) {\n    return hexToNumber(bytesToHex(bytes));\n}\nexport function bytesToNumberLE(bytes) {\n    abytes(bytes);\n    return hexToNumber(bytesToHex(Uint8Array.from(bytes).reverse()));\n}\nexport function numberToBytesBE(n, len) {\n    return hexToBytes(n.toString(16).padStart(len * 2, '0'));\n}\nexport function numberToBytesLE(n, len) {\n    return numberToBytesBE(n, len).reverse();\n}\n// Unpadded, rarely used\nexport function numberToVarBytesBE(n) {\n    return hexToBytes(numberToHexUnpadded(n));\n}\n/**\n * Takes hex string or Uint8Array, converts to Uint8Array.\n * Validates output length.\n * Will throw error for other types.\n * @param title descriptive title for an error e.g. 'private key'\n * @param hex hex string or Uint8Array\n * @param expectedLength optional, will compare to result array's length\n * @returns\n */\nexport function ensureBytes(title, hex, expectedLength) {\n    let res;\n    if (typeof hex === 'string') {\n        try {\n            res = hexToBytes(hex);\n        }\n        catch (e) {\n            throw new Error(`${title} must be valid hex string, got \"${hex}\". Cause: ${e}`);\n        }\n    }\n    else if (isBytes(hex)) {\n        // Uint8Array.from() instead of hash.slice() because node.js Buffer\n        // is instance of Uint8Array, and its slice() creates **mutable** copy\n        res = Uint8Array.from(hex);\n    }\n    else {\n        throw new Error(`${title} must be hex string or Uint8Array`);\n    }\n    const len = res.length;\n    if (typeof expectedLength === 'number' && len !== expectedLength)\n        throw new Error(`${title} expected ${expectedLength} bytes, got ${len}`);\n    return res;\n}\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays) {\n    let sum = 0;\n    for (let i = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        abytes(a);\n        sum += a.length;\n    }\n    const res = new Uint8Array(sum);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        res.set(a, pad);\n        pad += a.length;\n    }\n    return res;\n}\n// Compares 2 u8a-s in kinda constant time\nexport function equalBytes(a, b) {\n    if (a.length !== b.length)\n        return false;\n    let diff = 0;\n    for (let i = 0; i < a.length; i++)\n        diff |= a[i] ^ b[i];\n    return diff === 0;\n}\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n// Bit operations\n/**\n * Calculates amount of bits in a bigint.\n * Same as `n.toString(2).length`\n */\nexport function bitLen(n) {\n    let len;\n    for (len = 0; n > _0n; n >>= _1n, len += 1)\n        ;\n    return len;\n}\n/**\n * Gets single bit at position.\n * NOTE: first bit position is 0 (same as arrays)\n * Same as `!!+Array.from(n.toString(2)).reverse()[pos]`\n */\nexport function bitGet(n, pos) {\n    return (n >> BigInt(pos)) & _1n;\n}\n/**\n * Sets single bit at position.\n */\nexport function bitSet(n, pos, value) {\n    return n | ((value ? _1n : _0n) << BigInt(pos));\n}\n/**\n * Calculate mask for N bits. Not using ** operator with bigints because of old engines.\n * Same as BigInt(`0b${Array(i).fill('1').join('')}`)\n */\nexport const bitMask = (n) => (_2n << BigInt(n - 1)) - _1n;\n// DRBG\nconst u8n = (data) => new Uint8Array(data); // creates Uint8Array\nconst u8fr = (arr) => Uint8Array.from(arr); // another shortcut\n/**\n * Minimal HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n * @returns function that will call DRBG until 2nd arg returns something meaningful\n * @example\n *   const drbg = createHmacDRBG<Key>(32, 32, hmac);\n *   drbg(seed, bytesToKey); // bytesToKey must return Key or undefined\n */\nexport function createHmacDrbg(hashLen, qByteLen, hmacFn) {\n    if (typeof hashLen !== 'number' || hashLen < 2)\n        throw new Error('hashLen must be a number');\n    if (typeof qByteLen !== 'number' || qByteLen < 2)\n        throw new Error('qByteLen must be a number');\n    if (typeof hmacFn !== 'function')\n        throw new Error('hmacFn must be a function');\n    // Step B, Step C: set hashLen to 8*ceil(hlen/8)\n    let v = u8n(hashLen); // Minimal non-full-spec HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n    let k = u8n(hashLen); // Steps B and C of RFC6979 3.2: set hashLen, in our case always same\n    let i = 0; // Iterations counter, will throw when over 1000\n    const reset = () => {\n        v.fill(1);\n        k.fill(0);\n        i = 0;\n    };\n    const h = (...b) => hmacFn(k, v, ...b); // hmac(k)(v, ...values)\n    const reseed = (seed = u8n()) => {\n        // HMAC-DRBG reseed() function. Steps D-G\n        k = h(u8fr([0x00]), seed); // k = hmac(k || v || 0x00 || seed)\n        v = h(); // v = hmac(k || v)\n        if (seed.length === 0)\n            return;\n        k = h(u8fr([0x01]), seed); // k = hmac(k || v || 0x01 || seed)\n        v = h(); // v = hmac(k || v)\n    };\n    const gen = () => {\n        // HMAC-DRBG generate() function\n        if (i++ >= 1000)\n            throw new Error('drbg: tried 1000 values');\n        let len = 0;\n        const out = [];\n        while (len < qByteLen) {\n            v = h();\n            const sl = v.slice();\n            out.push(sl);\n            len += v.length;\n        }\n        return concatBytes(...out);\n    };\n    const genUntil = (seed, pred) => {\n        reset();\n        reseed(seed); // Steps D-G\n        let res = undefined; // Step H: grind until k is in [1..n-1]\n        while (!(res = pred(gen())))\n            reseed();\n        reset();\n        return res;\n    };\n    return genUntil;\n}\n// Validating curves and fields\nconst validatorFns = {\n    bigint: (val) => typeof val === 'bigint',\n    function: (val) => typeof val === 'function',\n    boolean: (val) => typeof val === 'boolean',\n    string: (val) => typeof val === 'string',\n    stringOrUint8Array: (val) => typeof val === 'string' || isBytes(val),\n    isSafeInteger: (val) => Number.isSafeInteger(val),\n    array: (val) => Array.isArray(val),\n    field: (val, object) => object.Fp.isValid(val),\n    hash: (val) => typeof val === 'function' && Number.isSafeInteger(val.outputLen),\n};\n// type Record<K extends string | number | symbol, T> = { [P in K]: T; }\nexport function validateObject(object, validators, optValidators = {}) {\n    const checkField = (fieldName, type, isOptional) => {\n        const checkVal = validatorFns[type];\n        if (typeof checkVal !== 'function')\n            throw new Error(`Invalid validator \"${type}\", expected function`);\n        const val = object[fieldName];\n        if (isOptional && val === undefined)\n            return;\n        if (!checkVal(val, object)) {\n            throw new Error(`Invalid param ${String(fieldName)}=${val} (${typeof val}), expected ${type}`);\n        }\n    };\n    for (const [fieldName, type] of Object.entries(validators))\n        checkField(fieldName, type, false);\n    for (const [fieldName, type] of Object.entries(optValidators))\n        checkField(fieldName, type, true);\n    return object;\n}\n// validate type tests\n// const o: { a: number; b: number; c: number } = { a: 1, b: 5, c: 6 };\n// const z0 = validateObject(o, { a: 'isSafeInteger' }, { c: 'bigint' }); // Ok!\n// // Should fail type-check\n// const z1 = validateObject(o, { a: 'tmp' }, { c: 'zz' });\n// const z2 = validateObject(o, { a: 'isSafeInteger' }, { c: 'zz' });\n// const z3 = validateObject(o, { test: 'boolean', z: 'bug' });\n// const z4 = validateObject(o, { a: 'boolean', z: 'bug' });\n//# sourceMappingURL=utils.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Utilities for modular arithmetics and finite fields\nimport { bitMask, bytesToNumberBE, bytesToNumberLE, ensureBytes, numberToBytesBE, numberToBytesLE, validateObject, } from './utils.js';\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3);\n// prettier-ignore\nconst _4n = BigInt(4), _5n = BigInt(5), _8n = BigInt(8);\n// prettier-ignore\nconst _9n = BigInt(9), _16n = BigInt(16);\n// Calculates a modulo b\nexport function mod(a, b) {\n    const result = a % b;\n    return result >= _0n ? result : b + result;\n}\n/**\n * Efficiently raise num to power and do modular division.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n * @example\n * pow(2n, 6n, 11n) // 64n % 11n == 9n\n */\n// TODO: use field version && remove\nexport function pow(num, power, modulo) {\n    if (modulo <= _0n || power < _0n)\n        throw new Error('Expected power/modulo > 0');\n    if (modulo === _1n)\n        return _0n;\n    let res = _1n;\n    while (power > _0n) {\n        if (power & _1n)\n            res = (res * num) % modulo;\n        num = (num * num) % modulo;\n        power >>= _1n;\n    }\n    return res;\n}\n// Does x ^ (2 ^ power) mod p. pow2(30, 4) == 30 ^ (2 ^ 4)\nexport function pow2(x, power, modulo) {\n    let res = x;\n    while (power-- > _0n) {\n        res *= res;\n        res %= modulo;\n    }\n    return res;\n}\n// Inverses number over modulo\nexport function invert(number, modulo) {\n    if (number === _0n || modulo <= _0n) {\n        throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n    }\n    // Euclidean GCD https://brilliant.org/wiki/extended-euclidean-algorithm/\n    // Fermat's little theorem \"CT-like\" version inv(n) = n^(m-2) mod m is 30x slower.\n    let a = mod(number, modulo);\n    let b = modulo;\n    // prettier-ignore\n    let x = _0n, y = _1n, u = _1n, v = _0n;\n    while (a !== _0n) {\n        // JIT applies optimization if those two lines follow each other\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        // prettier-ignore\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    const gcd = b;\n    if (gcd !== _1n)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\n/**\n * Tonelli-Shanks square root search algorithm.\n * 1. https://eprint.iacr.org/2012/685.pdf (page 12)\n * 2. Square Roots from 1; 24, 51, 10 to Dan Shanks\n * Will start an infinite loop if field order P is not prime.\n * @param P field order\n * @returns function that takes field Fp (created from P) and number n\n */\nexport function tonelliShanks(P) {\n    // Legendre constant: used to calculate Legendre symbol (a | p),\n    // which denotes the value of a^((p-1)/2) (mod p).\n    // (a | p) ≡ 1    if a is a square (mod p)\n    // (a | p) ≡ -1   if a is not a square (mod p)\n    // (a | p) ≡ 0    if a ≡ 0 (mod p)\n    const legendreC = (P - _1n) / _2n;\n    let Q, S, Z;\n    // Step 1: By factoring out powers of 2 from p - 1,\n    // find q and s such that p - 1 = q*(2^s) with q odd\n    for (Q = P - _1n, S = 0; Q % _2n === _0n; Q /= _2n, S++)\n        ;\n    // Step 2: Select a non-square z such that (z | p) ≡ -1 and set c ≡ zq\n    for (Z = _2n; Z < P && pow(Z, legendreC, P) !== P - _1n; Z++)\n        ;\n    // Fast-path\n    if (S === 1) {\n        const p1div4 = (P + _1n) / _4n;\n        return function tonelliFast(Fp, n) {\n            const root = Fp.pow(n, p1div4);\n            if (!Fp.eql(Fp.sqr(root), n))\n                throw new Error('Cannot find square root');\n            return root;\n        };\n    }\n    // Slow-path\n    const Q1div2 = (Q + _1n) / _2n;\n    return function tonelliSlow(Fp, n) {\n        // Step 0: Check that n is indeed a square: (n | p) should not be ≡ -1\n        if (Fp.pow(n, legendreC) === Fp.neg(Fp.ONE))\n            throw new Error('Cannot find square root');\n        let r = S;\n        // TODO: will fail at Fp2/etc\n        let g = Fp.pow(Fp.mul(Fp.ONE, Z), Q); // will update both x and b\n        let x = Fp.pow(n, Q1div2); // first guess at the square root\n        let b = Fp.pow(n, Q); // first guess at the fudge factor\n        while (!Fp.eql(b, Fp.ONE)) {\n            if (Fp.eql(b, Fp.ZERO))\n                return Fp.ZERO; // https://en.wikipedia.org/wiki/Tonelli%E2%80%93Shanks_algorithm (4. If t = 0, return r = 0)\n            // Find m such b^(2^m)==1\n            let m = 1;\n            for (let t2 = Fp.sqr(b); m < r; m++) {\n                if (Fp.eql(t2, Fp.ONE))\n                    break;\n                t2 = Fp.sqr(t2); // t2 *= t2\n            }\n            // NOTE: r-m-1 can be bigger than 32, need to convert to bigint before shift, otherwise there will be overflow\n            const ge = Fp.pow(g, _1n << BigInt(r - m - 1)); // ge = 2^(r-m-1)\n            g = Fp.sqr(ge); // g = ge * ge\n            x = Fp.mul(x, ge); // x *= ge\n            b = Fp.mul(b, g); // b *= g\n            r = m;\n        }\n        return x;\n    };\n}\nexport function FpSqrt(P) {\n    // NOTE: different algorithms can give different roots, it is up to user to decide which one they want.\n    // For example there is FpSqrtOdd/FpSqrtEven to choice root based on oddness (used for hash-to-curve).\n    // P ≡ 3 (mod 4)\n    // √n = n^((P+1)/4)\n    if (P % _4n === _3n) {\n        // Not all roots possible!\n        // const ORDER =\n        //   0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaabn;\n        // const NUM = 72057594037927816n;\n        const p1div4 = (P + _1n) / _4n;\n        return function sqrt3mod4(Fp, n) {\n            const root = Fp.pow(n, p1div4);\n            // Throw if root**2 != n\n            if (!Fp.eql(Fp.sqr(root), n))\n                throw new Error('Cannot find square root');\n            return root;\n        };\n    }\n    // Atkin algorithm for q ≡ 5 (mod 8), https://eprint.iacr.org/2012/685.pdf (page 10)\n    if (P % _8n === _5n) {\n        const c1 = (P - _5n) / _8n;\n        return function sqrt5mod8(Fp, n) {\n            const n2 = Fp.mul(n, _2n);\n            const v = Fp.pow(n2, c1);\n            const nv = Fp.mul(n, v);\n            const i = Fp.mul(Fp.mul(nv, _2n), v);\n            const root = Fp.mul(nv, Fp.sub(i, Fp.ONE));\n            if (!Fp.eql(Fp.sqr(root), n))\n                throw new Error('Cannot find square root');\n            return root;\n        };\n    }\n    // P ≡ 9 (mod 16)\n    if (P % _16n === _9n) {\n        // NOTE: tonelli is too slow for bls-Fp2 calculations even on start\n        // Means we cannot use sqrt for constants at all!\n        //\n        // const c1 = Fp.sqrt(Fp.negate(Fp.ONE)); //  1. c1 = sqrt(-1) in F, i.e., (c1^2) == -1 in F\n        // const c2 = Fp.sqrt(c1);                //  2. c2 = sqrt(c1) in F, i.e., (c2^2) == c1 in F\n        // const c3 = Fp.sqrt(Fp.negate(c1));     //  3. c3 = sqrt(-c1) in F, i.e., (c3^2) == -c1 in F\n        // const c4 = (P + _7n) / _16n;           //  4. c4 = (q + 7) / 16        # Integer arithmetic\n        // sqrt = (x) => {\n        //   let tv1 = Fp.pow(x, c4);             //  1. tv1 = x^c4\n        //   let tv2 = Fp.mul(c1, tv1);           //  2. tv2 = c1 * tv1\n        //   const tv3 = Fp.mul(c2, tv1);         //  3. tv3 = c2 * tv1\n        //   let tv4 = Fp.mul(c3, tv1);           //  4. tv4 = c3 * tv1\n        //   const e1 = Fp.equals(Fp.square(tv2), x); //  5.  e1 = (tv2^2) == x\n        //   const e2 = Fp.equals(Fp.square(tv3), x); //  6.  e2 = (tv3^2) == x\n        //   tv1 = Fp.cmov(tv1, tv2, e1); //  7. tv1 = CMOV(tv1, tv2, e1)  # Select tv2 if (tv2^2) == x\n        //   tv2 = Fp.cmov(tv4, tv3, e2); //  8. tv2 = CMOV(tv4, tv3, e2)  # Select tv3 if (tv3^2) == x\n        //   const e3 = Fp.equals(Fp.square(tv2), x); //  9.  e3 = (tv2^2) == x\n        //   return Fp.cmov(tv1, tv2, e3); //  10.  z = CMOV(tv1, tv2, e3)  # Select the sqrt from tv1 and tv2\n        // }\n    }\n    // Other cases: Tonelli-Shanks algorithm\n    return tonelliShanks(P);\n}\n// Little-endian check for first LE bit (last BE bit);\nexport const isNegativeLE = (num, modulo) => (mod(num, modulo) & _1n) === _1n;\n// prettier-ignore\nconst FIELD_FIELDS = [\n    'create', 'isValid', 'is0', 'neg', 'inv', 'sqrt', 'sqr',\n    'eql', 'add', 'sub', 'mul', 'pow', 'div',\n    'addN', 'subN', 'mulN', 'sqrN'\n];\nexport function validateField(field) {\n    const initial = {\n        ORDER: 'bigint',\n        MASK: 'bigint',\n        BYTES: 'isSafeInteger',\n        BITS: 'isSafeInteger',\n    };\n    const opts = FIELD_FIELDS.reduce((map, val) => {\n        map[val] = 'function';\n        return map;\n    }, initial);\n    return validateObject(field, opts);\n}\n// Generic field functions\n/**\n * Same as `pow` but for Fp: non-constant-time.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n */\nexport function FpPow(f, num, power) {\n    // Should have same speed as pow for bigints\n    // TODO: benchmark!\n    if (power < _0n)\n        throw new Error('Expected power > 0');\n    if (power === _0n)\n        return f.ONE;\n    if (power === _1n)\n        return num;\n    let p = f.ONE;\n    let d = num;\n    while (power > _0n) {\n        if (power & _1n)\n            p = f.mul(p, d);\n        d = f.sqr(d);\n        power >>= _1n;\n    }\n    return p;\n}\n/**\n * Efficiently invert an array of Field elements.\n * `inv(0)` will return `undefined` here: make sure to throw an error.\n */\nexport function FpInvertBatch(f, nums) {\n    const tmp = new Array(nums.length);\n    // Walk from first to last, multiply them by each other MOD p\n    const lastMultiplied = nums.reduce((acc, num, i) => {\n        if (f.is0(num))\n            return acc;\n        tmp[i] = acc;\n        return f.mul(acc, num);\n    }, f.ONE);\n    // Invert last element\n    const inverted = f.inv(lastMultiplied);\n    // Walk from last to first, multiply them by inverted each other MOD p\n    nums.reduceRight((acc, num, i) => {\n        if (f.is0(num))\n            return acc;\n        tmp[i] = f.mul(acc, tmp[i]);\n        return f.mul(acc, num);\n    }, inverted);\n    return tmp;\n}\nexport function FpDiv(f, lhs, rhs) {\n    return f.mul(lhs, typeof rhs === 'bigint' ? invert(rhs, f.ORDER) : f.inv(rhs));\n}\n// This function returns True whenever the value x is a square in the field F.\nexport function FpIsSquare(f) {\n    const legendreConst = (f.ORDER - _1n) / _2n; // Integer arithmetic\n    return (x) => {\n        const p = f.pow(x, legendreConst);\n        return f.eql(p, f.ZERO) || f.eql(p, f.ONE);\n    };\n}\n// CURVE.n lengths\nexport function nLength(n, nBitLength) {\n    // Bit size, byte size of CURVE.n\n    const _nBitLength = nBitLength !== undefined ? nBitLength : n.toString(2).length;\n    const nByteLength = Math.ceil(_nBitLength / 8);\n    return { nBitLength: _nBitLength, nByteLength };\n}\n/**\n * Initializes a finite field over prime. **Non-primes are not supported.**\n * Do not init in loop: slow. Very fragile: always run a benchmark on a change.\n * Major performance optimizations:\n * * a) denormalized operations like mulN instead of mul\n * * b) same object shape: never add or remove keys\n * * c) Object.freeze\n * @param ORDER prime positive bigint\n * @param bitLen how many bits the field consumes\n * @param isLE (def: false) if encoding / decoding should be in little-endian\n * @param redef optional faster redefinitions of sqrt and other methods\n */\nexport function Field(ORDER, bitLen, isLE = false, redef = {}) {\n    if (ORDER <= _0n)\n        throw new Error(`Expected Field ORDER > 0, got ${ORDER}`);\n    const { nBitLength: BITS, nByteLength: BYTES } = nLength(ORDER, bitLen);\n    if (BYTES > 2048)\n        throw new Error('Field lengths over 2048 bytes are not supported');\n    const sqrtP = FpSqrt(ORDER);\n    const f = Object.freeze({\n        ORDER,\n        BITS,\n        BYTES,\n        MASK: bitMask(BITS),\n        ZERO: _0n,\n        ONE: _1n,\n        create: (num) => mod(num, ORDER),\n        isValid: (num) => {\n            if (typeof num !== 'bigint')\n                throw new Error(`Invalid field element: expected bigint, got ${typeof num}`);\n            return _0n <= num && num < ORDER; // 0 is valid element, but it's not invertible\n        },\n        is0: (num) => num === _0n,\n        isOdd: (num) => (num & _1n) === _1n,\n        neg: (num) => mod(-num, ORDER),\n        eql: (lhs, rhs) => lhs === rhs,\n        sqr: (num) => mod(num * num, ORDER),\n        add: (lhs, rhs) => mod(lhs + rhs, ORDER),\n        sub: (lhs, rhs) => mod(lhs - rhs, ORDER),\n        mul: (lhs, rhs) => mod(lhs * rhs, ORDER),\n        pow: (num, power) => FpPow(f, num, power),\n        div: (lhs, rhs) => mod(lhs * invert(rhs, ORDER), ORDER),\n        // Same as above, but doesn't normalize\n        sqrN: (num) => num * num,\n        addN: (lhs, rhs) => lhs + rhs,\n        subN: (lhs, rhs) => lhs - rhs,\n        mulN: (lhs, rhs) => lhs * rhs,\n        inv: (num) => invert(num, ORDER),\n        sqrt: redef.sqrt || ((n) => sqrtP(f, n)),\n        invertBatch: (lst) => FpInvertBatch(f, lst),\n        // TODO: do we really need constant cmov?\n        // We don't have const-time bigints anyway, so probably will be not very useful\n        cmov: (a, b, c) => (c ? b : a),\n        toBytes: (num) => (isLE ? numberToBytesLE(num, BYTES) : numberToBytesBE(num, BYTES)),\n        fromBytes: (bytes) => {\n            if (bytes.length !== BYTES)\n                throw new Error(`Fp.fromBytes: expected ${BYTES}, got ${bytes.length}`);\n            return isLE ? bytesToNumberLE(bytes) : bytesToNumberBE(bytes);\n        },\n    });\n    return Object.freeze(f);\n}\nexport function FpSqrtOdd(Fp, elm) {\n    if (!Fp.isOdd)\n        throw new Error(`Field doesn't have isOdd`);\n    const root = Fp.sqrt(elm);\n    return Fp.isOdd(root) ? root : Fp.neg(root);\n}\nexport function FpSqrtEven(Fp, elm) {\n    if (!Fp.isOdd)\n        throw new Error(`Field doesn't have isOdd`);\n    const root = Fp.sqrt(elm);\n    return Fp.isOdd(root) ? Fp.neg(root) : root;\n}\n/**\n * \"Constant-time\" private key generation utility.\n * Same as mapKeyToField, but accepts less bytes (40 instead of 48 for 32-byte field).\n * Which makes it slightly more biased, less secure.\n * @deprecated use mapKeyToField instead\n */\nexport function hashToPrivateScalar(hash, groupOrder, isLE = false) {\n    hash = ensureBytes('privateHash', hash);\n    const hashLen = hash.length;\n    const minLen = nLength(groupOrder).nByteLength + 8;\n    if (minLen < 24 || hashLen < minLen || hashLen > 1024)\n        throw new Error(`hashToPrivateScalar: expected ${minLen}-1024 bytes of input, got ${hashLen}`);\n    const num = isLE ? bytesToNumberLE(hash) : bytesToNumberBE(hash);\n    return mod(num, groupOrder - _1n) + _1n;\n}\n/**\n * Returns total number of bytes consumed by the field element.\n * For example, 32 bytes for usual 256-bit weierstrass curve.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of field\n */\nexport function getFieldBytesLength(fieldOrder) {\n    if (typeof fieldOrder !== 'bigint')\n        throw new Error('field order must be bigint');\n    const bitLength = fieldOrder.toString(2).length;\n    return Math.ceil(bitLength / 8);\n}\n/**\n * Returns minimal amount of bytes that can be safely reduced\n * by field order.\n * Should be 2^-128 for 128-bit curve such as P256.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of target hash\n */\nexport function getMinHashLength(fieldOrder) {\n    const length = getFieldBytesLength(fieldOrder);\n    return length + Math.ceil(length / 2);\n}\n/**\n * \"Constant-time\" private key generation utility.\n * Can take (n + n/2) or more bytes of uniform input e.g. from CSPRNG or KDF\n * and convert them into private scalar, with the modulo bias being negligible.\n * Needs at least 48 bytes of input for 32-byte private key.\n * https://research.kudelskisecurity.com/2020/07/28/the-definitive-guide-to-modulo-bias-and-how-to-avoid-it/\n * FIPS 186-5, A.2 https://csrc.nist.gov/publications/detail/fips/186/5/final\n * RFC 9380, https://www.rfc-editor.org/rfc/rfc9380#section-5\n * @param hash hash output from SHA3 or a similar function\n * @param groupOrder size of subgroup - (e.g. secp256k1.CURVE.n)\n * @param isLE interpret hash bytes as LE num\n * @returns valid private scalar\n */\nexport function mapHashToField(key, fieldOrder, isLE = false) {\n    const len = key.length;\n    const fieldLen = getFieldBytesLength(fieldOrder);\n    const minLen = getMinHashLength(fieldOrder);\n    // No small numbers: need to understand bias story. No huge numbers: easier to detect JS timings.\n    if (len < 16 || len < minLen || len > 1024)\n        throw new Error(`expected ${minLen}-1024 bytes of input, got ${len}`);\n    const num = isLE ? bytesToNumberBE(key) : bytesToNumberLE(key);\n    // `mod(x, 11)` can sometimes produce 0. `mod(x, 10) + 1` is the same, but no 0\n    const reduced = mod(num, fieldOrder - _1n) + _1n;\n    return isLE ? numberToBytesLE(reduced, fieldLen) : numberToBytesBE(reduced, fieldLen);\n}\n//# sourceMappingURL=modular.js.map","import { hash as assertHash, bytes as assertBytes, exists as assertExists } from './_assert.js';\nimport { Hash, toBytes } from './utils.js';\n// HMAC (RFC 2104)\nexport class HMAC extends Hash {\n    constructor(hash, _key) {\n        super();\n        this.finished = false;\n        this.destroyed = false;\n        assertHash(hash);\n        const key = toBytes(_key);\n        this.iHash = hash.create();\n        if (typeof this.iHash.update !== 'function')\n            throw new Error('Expected instance of class which extends utils.Hash');\n        this.blockLen = this.iHash.blockLen;\n        this.outputLen = this.iHash.outputLen;\n        const blockLen = this.blockLen;\n        const pad = new Uint8Array(blockLen);\n        // blockLen can be bigger than outputLen\n        pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36;\n        this.iHash.update(pad);\n        // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n        this.oHash = hash.create();\n        // Undo internal XOR && apply outer XOR\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36 ^ 0x5c;\n        this.oHash.update(pad);\n        pad.fill(0);\n    }\n    update(buf) {\n        assertExists(this);\n        this.iHash.update(buf);\n        return this;\n    }\n    digestInto(out) {\n        assertExists(this);\n        assertBytes(out, this.outputLen);\n        this.finished = true;\n        this.iHash.digestInto(out);\n        this.oHash.update(out);\n        this.oHash.digestInto(out);\n        this.destroy();\n    }\n    digest() {\n        const out = new Uint8Array(this.oHash.outputLen);\n        this.digestInto(out);\n        return out;\n    }\n    _cloneInto(to) {\n        // Create new instance without calling constructor since key already in state and we don't know it.\n        to || (to = Object.create(Object.getPrototypeOf(this), {}));\n        const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n        to = to;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        to.blockLen = blockLen;\n        to.outputLen = outputLen;\n        to.oHash = oHash._cloneInto(to.oHash);\n        to.iHash = iHash._cloneInto(to.iHash);\n        return to;\n    }\n    destroy() {\n        this.destroyed = true;\n        this.oHash.destroy();\n        this.iHash.destroy();\n    }\n}\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nexport const hmac = (hash, key, message) => new HMAC(hash, key).update(message).digest();\nhmac.create = (hash, key) => new HMAC(hash, key);\n//# sourceMappingURL=hmac.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Abelian group utilities\nimport { validateField, nLength } from './modular.js';\nimport { validateObject } from './utils.js';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\n// Elliptic curve multiplication of Point by scalar. Fragile.\n// Scalars should always be less than curve order: this should be checked inside of a curve itself.\n// Creates precomputation tables for fast multiplication:\n// - private scalar is split by fixed size windows of W bits\n// - every window point is collected from window's table & added to accumulator\n// - since windows are different, same point inside tables won't be accessed more than once per calc\n// - each multiplication is 'Math.ceil(CURVE_ORDER / 𝑊) + 1' point additions (fixed for any scalar)\n// - +1 window is neccessary for wNAF\n// - wNAF reduces table size: 2x less memory + 2x faster generation, but 10% slower multiplication\n// TODO: Research returning 2d JS array of windows, instead of a single window. This would allow\n// windows to be in different memory locations\nexport function wNAF(c, bits) {\n    const constTimeNegate = (condition, item) => {\n        const neg = item.negate();\n        return condition ? neg : item;\n    };\n    const opts = (W) => {\n        const windows = Math.ceil(bits / W) + 1; // +1, because\n        const windowSize = 2 ** (W - 1); // -1 because we skip zero\n        return { windows, windowSize };\n    };\n    return {\n        constTimeNegate,\n        // non-const time multiplication ladder\n        unsafeLadder(elm, n) {\n            let p = c.ZERO;\n            let d = elm;\n            while (n > _0n) {\n                if (n & _1n)\n                    p = p.add(d);\n                d = d.double();\n                n >>= _1n;\n            }\n            return p;\n        },\n        /**\n         * Creates a wNAF precomputation window. Used for caching.\n         * Default window size is set by `utils.precompute()` and is equal to 8.\n         * Number of precomputed points depends on the curve size:\n         * 2^(𝑊−1) * (Math.ceil(𝑛 / 𝑊) + 1), where:\n         * - 𝑊 is the window size\n         * - 𝑛 is the bitlength of the curve order.\n         * For a 256-bit curve and window size 8, the number of precomputed points is 128 * 33 = 4224.\n         * @returns precomputed point tables flattened to a single array\n         */\n        precomputeWindow(elm, W) {\n            const { windows, windowSize } = opts(W);\n            const points = [];\n            let p = elm;\n            let base = p;\n            for (let window = 0; window < windows; window++) {\n                base = p;\n                points.push(base);\n                // =1, because we skip zero\n                for (let i = 1; i < windowSize; i++) {\n                    base = base.add(p);\n                    points.push(base);\n                }\n                p = base.double();\n            }\n            return points;\n        },\n        /**\n         * Implements ec multiplication using precomputed tables and w-ary non-adjacent form.\n         * @param W window size\n         * @param precomputes precomputed tables\n         * @param n scalar (we don't check here, but should be less than curve order)\n         * @returns real and fake (for const-time) points\n         */\n        wNAF(W, precomputes, n) {\n            // TODO: maybe check that scalar is less than group order? wNAF behavious is undefined otherwise\n            // But need to carefully remove other checks before wNAF. ORDER == bits here\n            const { windows, windowSize } = opts(W);\n            let p = c.ZERO;\n            let f = c.BASE;\n            const mask = BigInt(2 ** W - 1); // Create mask with W ones: 0b1111 for W=4 etc.\n            const maxNumber = 2 ** W;\n            const shiftBy = BigInt(W);\n            for (let window = 0; window < windows; window++) {\n                const offset = window * windowSize;\n                // Extract W bits.\n                let wbits = Number(n & mask);\n                // Shift number by W bits.\n                n >>= shiftBy;\n                // If the bits are bigger than max size, we'll split those.\n                // +224 => 256 - 32\n                if (wbits > windowSize) {\n                    wbits -= maxNumber;\n                    n += _1n;\n                }\n                // This code was first written with assumption that 'f' and 'p' will never be infinity point:\n                // since each addition is multiplied by 2 ** W, it cannot cancel each other. However,\n                // there is negate now: it is possible that negated element from low value\n                // would be the same as high element, which will create carry into next window.\n                // It's not obvious how this can fail, but still worth investigating later.\n                // Check if we're onto Zero point.\n                // Add random point inside current window to f.\n                const offset1 = offset;\n                const offset2 = offset + Math.abs(wbits) - 1; // -1 because we skip zero\n                const cond1 = window % 2 !== 0;\n                const cond2 = wbits < 0;\n                if (wbits === 0) {\n                    // The most important part for const-time getPublicKey\n                    f = f.add(constTimeNegate(cond1, precomputes[offset1]));\n                }\n                else {\n                    p = p.add(constTimeNegate(cond2, precomputes[offset2]));\n                }\n            }\n            // JIT-compiler should not eliminate f here, since it will later be used in normalizeZ()\n            // Even if the variable is still unused, there are some checks which will\n            // throw an exception, so compiler needs to prove they won't happen, which is hard.\n            // At this point there is a way to F be infinity-point even if p is not,\n            // which makes it less const-time: around 1 bigint multiply.\n            return { p, f };\n        },\n        wNAFCached(P, precomputesMap, n, transform) {\n            // @ts-ignore\n            const W = P._WINDOW_SIZE || 1;\n            // Calculate precomputes on a first run, reuse them after\n            let comp = precomputesMap.get(P);\n            if (!comp) {\n                comp = this.precomputeWindow(P, W);\n                if (W !== 1) {\n                    precomputesMap.set(P, transform(comp));\n                }\n            }\n            return this.wNAF(W, comp, n);\n        },\n    };\n}\nexport function validateBasic(curve) {\n    validateField(curve.Fp);\n    validateObject(curve, {\n        n: 'bigint',\n        h: 'bigint',\n        Gx: 'field',\n        Gy: 'field',\n    }, {\n        nBitLength: 'isSafeInteger',\n        nByteLength: 'isSafeInteger',\n    });\n    // Set defaults\n    return Object.freeze({\n        ...nLength(curve.n, curve.nBitLength),\n        ...curve,\n        ...{ p: curve.Fp.ORDER },\n    });\n}\n//# sourceMappingURL=curve.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Short Weierstrass curve. The formula is: y² = x³ + ax + b\nimport { validateBasic, wNAF } from './curve.js';\nimport * as mod from './modular.js';\nimport * as ut from './utils.js';\nimport { ensureBytes } from './utils.js';\nfunction validatePointOpts(curve) {\n    const opts = validateBasic(curve);\n    ut.validateObject(opts, {\n        a: 'field',\n        b: 'field',\n    }, {\n        allowedPrivateKeyLengths: 'array',\n        wrapPrivateKey: 'boolean',\n        isTorsionFree: 'function',\n        clearCofactor: 'function',\n        allowInfinityPoint: 'boolean',\n        fromBytes: 'function',\n        toBytes: 'function',\n    });\n    const { endo, Fp, a } = opts;\n    if (endo) {\n        if (!Fp.eql(a, Fp.ZERO)) {\n            throw new Error('Endomorphism can only be defined for Koblitz curves that have a=0');\n        }\n        if (typeof endo !== 'object' ||\n            typeof endo.beta !== 'bigint' ||\n            typeof endo.splitScalar !== 'function') {\n            throw new Error('Expected endomorphism with beta: bigint and splitScalar: function');\n        }\n    }\n    return Object.freeze({ ...opts });\n}\n// ASN.1 DER encoding utilities\nconst { bytesToNumberBE: b2n, hexToBytes: h2b } = ut;\nexport const DER = {\n    // asn.1 DER encoding utils\n    Err: class DERErr extends Error {\n        constructor(m = '') {\n            super(m);\n        }\n    },\n    _parseInt(data) {\n        const { Err: E } = DER;\n        if (data.length < 2 || data[0] !== 0x02)\n            throw new E('Invalid signature integer tag');\n        const len = data[1];\n        const res = data.subarray(2, len + 2);\n        if (!len || res.length !== len)\n            throw new E('Invalid signature integer: wrong length');\n        // https://crypto.stackexchange.com/a/57734 Leftmost bit of first byte is 'negative' flag,\n        // since we always use positive integers here. It must always be empty:\n        // - add zero byte if exists\n        // - if next byte doesn't have a flag, leading zero is not allowed (minimal encoding)\n        if (res[0] & 0b10000000)\n            throw new E('Invalid signature integer: negative');\n        if (res[0] === 0x00 && !(res[1] & 0b10000000))\n            throw new E('Invalid signature integer: unnecessary leading zero');\n        return { d: b2n(res), l: data.subarray(len + 2) }; // d is data, l is left\n    },\n    toSig(hex) {\n        // parse DER signature\n        const { Err: E } = DER;\n        const data = typeof hex === 'string' ? h2b(hex) : hex;\n        ut.abytes(data);\n        let l = data.length;\n        if (l < 2 || data[0] != 0x30)\n            throw new E('Invalid signature tag');\n        if (data[1] !== l - 2)\n            throw new E('Invalid signature: incorrect length');\n        const { d: r, l: sBytes } = DER._parseInt(data.subarray(2));\n        const { d: s, l: rBytesLeft } = DER._parseInt(sBytes);\n        if (rBytesLeft.length)\n            throw new E('Invalid signature: left bytes after parsing');\n        return { r, s };\n    },\n    hexFromSig(sig) {\n        // Add leading zero if first byte has negative bit enabled. More details in '_parseInt'\n        const slice = (s) => (Number.parseInt(s[0], 16) & 0b1000 ? '00' + s : s);\n        const h = (num) => {\n            const hex = num.toString(16);\n            return hex.length & 1 ? `0${hex}` : hex;\n        };\n        const s = slice(h(sig.s));\n        const r = slice(h(sig.r));\n        const shl = s.length / 2;\n        const rhl = r.length / 2;\n        const sl = h(shl);\n        const rl = h(rhl);\n        return `30${h(rhl + shl + 4)}02${rl}${r}02${sl}${s}`;\n    },\n};\n// Be friendly to bad ECMAScript parsers by not using bigint literals\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3), _4n = BigInt(4);\nexport function weierstrassPoints(opts) {\n    const CURVE = validatePointOpts(opts);\n    const { Fp } = CURVE; // All curves has same field / group length as for now, but they can differ\n    const toBytes = CURVE.toBytes ||\n        ((_c, point, _isCompressed) => {\n            const a = point.toAffine();\n            return ut.concatBytes(Uint8Array.from([0x04]), Fp.toBytes(a.x), Fp.toBytes(a.y));\n        });\n    const fromBytes = CURVE.fromBytes ||\n        ((bytes) => {\n            // const head = bytes[0];\n            const tail = bytes.subarray(1);\n            // if (head !== 0x04) throw new Error('Only non-compressed encoding is supported');\n            const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n            const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n            return { x, y };\n        });\n    /**\n     * y² = x³ + ax + b: Short weierstrass curve formula\n     * @returns y²\n     */\n    function weierstrassEquation(x) {\n        const { a, b } = CURVE;\n        const x2 = Fp.sqr(x); // x * x\n        const x3 = Fp.mul(x2, x); // x2 * x\n        return Fp.add(Fp.add(x3, Fp.mul(x, a)), b); // x3 + a * x + b\n    }\n    // Validate whether the passed curve params are valid.\n    // We check if curve equation works for generator point.\n    // `assertValidity()` won't work: `isTorsionFree()` is not available at this point in bls12-381.\n    // ProjectivePoint class has not been initialized yet.\n    if (!Fp.eql(Fp.sqr(CURVE.Gy), weierstrassEquation(CURVE.Gx)))\n        throw new Error('bad generator point: equation left != right');\n    // Valid group elements reside in range 1..n-1\n    function isWithinCurveOrder(num) {\n        return typeof num === 'bigint' && _0n < num && num < CURVE.n;\n    }\n    function assertGE(num) {\n        if (!isWithinCurveOrder(num))\n            throw new Error('Expected valid bigint: 0 < bigint < curve.n');\n    }\n    // Validates if priv key is valid and converts it to bigint.\n    // Supports options allowedPrivateKeyLengths and wrapPrivateKey.\n    function normPrivateKeyToScalar(key) {\n        const { allowedPrivateKeyLengths: lengths, nByteLength, wrapPrivateKey, n } = CURVE;\n        if (lengths && typeof key !== 'bigint') {\n            if (ut.isBytes(key))\n                key = ut.bytesToHex(key);\n            // Normalize to hex string, pad. E.g. P521 would norm 130-132 char hex to 132-char bytes\n            if (typeof key !== 'string' || !lengths.includes(key.length))\n                throw new Error('Invalid key');\n            key = key.padStart(nByteLength * 2, '0');\n        }\n        let num;\n        try {\n            num =\n                typeof key === 'bigint'\n                    ? key\n                    : ut.bytesToNumberBE(ensureBytes('private key', key, nByteLength));\n        }\n        catch (error) {\n            throw new Error(`private key must be ${nByteLength} bytes, hex or bigint, not ${typeof key}`);\n        }\n        if (wrapPrivateKey)\n            num = mod.mod(num, n); // disabled by default, enabled for BLS\n        assertGE(num); // num in range [1..N-1]\n        return num;\n    }\n    const pointPrecomputes = new Map();\n    function assertPrjPoint(other) {\n        if (!(other instanceof Point))\n            throw new Error('ProjectivePoint expected');\n    }\n    /**\n     * Projective Point works in 3d / projective (homogeneous) coordinates: (x, y, z) ∋ (x=x/z, y=y/z)\n     * Default Point works in 2d / affine coordinates: (x, y)\n     * We're doing calculations in projective, because its operations don't require costly inversion.\n     */\n    class Point {\n        constructor(px, py, pz) {\n            this.px = px;\n            this.py = py;\n            this.pz = pz;\n            if (px == null || !Fp.isValid(px))\n                throw new Error('x required');\n            if (py == null || !Fp.isValid(py))\n                throw new Error('y required');\n            if (pz == null || !Fp.isValid(pz))\n                throw new Error('z required');\n        }\n        // Does not validate if the point is on-curve.\n        // Use fromHex instead, or call assertValidity() later.\n        static fromAffine(p) {\n            const { x, y } = p || {};\n            if (!p || !Fp.isValid(x) || !Fp.isValid(y))\n                throw new Error('invalid affine point');\n            if (p instanceof Point)\n                throw new Error('projective point not allowed');\n            const is0 = (i) => Fp.eql(i, Fp.ZERO);\n            // fromAffine(x:0, y:0) would produce (x:0, y:0, z:1), but we need (x:0, y:1, z:0)\n            if (is0(x) && is0(y))\n                return Point.ZERO;\n            return new Point(x, y, Fp.ONE);\n        }\n        get x() {\n            return this.toAffine().x;\n        }\n        get y() {\n            return this.toAffine().y;\n        }\n        /**\n         * Takes a bunch of Projective Points but executes only one\n         * inversion on all of them. Inversion is very slow operation,\n         * so this improves performance massively.\n         * Optimization: converts a list of projective points to a list of identical points with Z=1.\n         */\n        static normalizeZ(points) {\n            const toInv = Fp.invertBatch(points.map((p) => p.pz));\n            return points.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n        }\n        /**\n         * Converts hash string or Uint8Array to Point.\n         * @param hex short/long ECDSA hex\n         */\n        static fromHex(hex) {\n            const P = Point.fromAffine(fromBytes(ensureBytes('pointHex', hex)));\n            P.assertValidity();\n            return P;\n        }\n        // Multiplies generator point by privateKey.\n        static fromPrivateKey(privateKey) {\n            return Point.BASE.multiply(normPrivateKeyToScalar(privateKey));\n        }\n        // \"Private method\", don't use it directly\n        _setWindowSize(windowSize) {\n            this._WINDOW_SIZE = windowSize;\n            pointPrecomputes.delete(this);\n        }\n        // A point on curve is valid if it conforms to equation.\n        assertValidity() {\n            if (this.is0()) {\n                // (0, 1, 0) aka ZERO is invalid in most contexts.\n                // In BLS, ZERO can be serialized, so we allow it.\n                // (0, 0, 0) is wrong representation of ZERO and is always invalid.\n                if (CURVE.allowInfinityPoint && !Fp.is0(this.py))\n                    return;\n                throw new Error('bad point: ZERO');\n            }\n            // Some 3rd-party test vectors require different wording between here & `fromCompressedHex`\n            const { x, y } = this.toAffine();\n            // Check if x, y are valid field elements\n            if (!Fp.isValid(x) || !Fp.isValid(y))\n                throw new Error('bad point: x or y not FE');\n            const left = Fp.sqr(y); // y²\n            const right = weierstrassEquation(x); // x³ + ax + b\n            if (!Fp.eql(left, right))\n                throw new Error('bad point: equation left != right');\n            if (!this.isTorsionFree())\n                throw new Error('bad point: not in prime-order subgroup');\n        }\n        hasEvenY() {\n            const { y } = this.toAffine();\n            if (Fp.isOdd)\n                return !Fp.isOdd(y);\n            throw new Error(\"Field doesn't support isOdd\");\n        }\n        /**\n         * Compare one point to another.\n         */\n        equals(other) {\n            assertPrjPoint(other);\n            const { px: X1, py: Y1, pz: Z1 } = this;\n            const { px: X2, py: Y2, pz: Z2 } = other;\n            const U1 = Fp.eql(Fp.mul(X1, Z2), Fp.mul(X2, Z1));\n            const U2 = Fp.eql(Fp.mul(Y1, Z2), Fp.mul(Y2, Z1));\n            return U1 && U2;\n        }\n        /**\n         * Flips point to one corresponding to (x, -y) in Affine coordinates.\n         */\n        negate() {\n            return new Point(this.px, Fp.neg(this.py), this.pz);\n        }\n        // Renes-Costello-Batina exception-free doubling formula.\n        // There is 30% faster Jacobian formula, but it is not complete.\n        // https://eprint.iacr.org/2015/1060, algorithm 3\n        // Cost: 8M + 3S + 3*a + 2*b3 + 15add.\n        double() {\n            const { a, b } = CURVE;\n            const b3 = Fp.mul(b, _3n);\n            const { px: X1, py: Y1, pz: Z1 } = this;\n            let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n            let t0 = Fp.mul(X1, X1); // step 1\n            let t1 = Fp.mul(Y1, Y1);\n            let t2 = Fp.mul(Z1, Z1);\n            let t3 = Fp.mul(X1, Y1);\n            t3 = Fp.add(t3, t3); // step 5\n            Z3 = Fp.mul(X1, Z1);\n            Z3 = Fp.add(Z3, Z3);\n            X3 = Fp.mul(a, Z3);\n            Y3 = Fp.mul(b3, t2);\n            Y3 = Fp.add(X3, Y3); // step 10\n            X3 = Fp.sub(t1, Y3);\n            Y3 = Fp.add(t1, Y3);\n            Y3 = Fp.mul(X3, Y3);\n            X3 = Fp.mul(t3, X3);\n            Z3 = Fp.mul(b3, Z3); // step 15\n            t2 = Fp.mul(a, t2);\n            t3 = Fp.sub(t0, t2);\n            t3 = Fp.mul(a, t3);\n            t3 = Fp.add(t3, Z3);\n            Z3 = Fp.add(t0, t0); // step 20\n            t0 = Fp.add(Z3, t0);\n            t0 = Fp.add(t0, t2);\n            t0 = Fp.mul(t0, t3);\n            Y3 = Fp.add(Y3, t0);\n            t2 = Fp.mul(Y1, Z1); // step 25\n            t2 = Fp.add(t2, t2);\n            t0 = Fp.mul(t2, t3);\n            X3 = Fp.sub(X3, t0);\n            Z3 = Fp.mul(t2, t1);\n            Z3 = Fp.add(Z3, Z3); // step 30\n            Z3 = Fp.add(Z3, Z3);\n            return new Point(X3, Y3, Z3);\n        }\n        // Renes-Costello-Batina exception-free addition formula.\n        // There is 30% faster Jacobian formula, but it is not complete.\n        // https://eprint.iacr.org/2015/1060, algorithm 1\n        // Cost: 12M + 0S + 3*a + 3*b3 + 23add.\n        add(other) {\n            assertPrjPoint(other);\n            const { px: X1, py: Y1, pz: Z1 } = this;\n            const { px: X2, py: Y2, pz: Z2 } = other;\n            let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n            const a = CURVE.a;\n            const b3 = Fp.mul(CURVE.b, _3n);\n            let t0 = Fp.mul(X1, X2); // step 1\n            let t1 = Fp.mul(Y1, Y2);\n            let t2 = Fp.mul(Z1, Z2);\n            let t3 = Fp.add(X1, Y1);\n            let t4 = Fp.add(X2, Y2); // step 5\n            t3 = Fp.mul(t3, t4);\n            t4 = Fp.add(t0, t1);\n            t3 = Fp.sub(t3, t4);\n            t4 = Fp.add(X1, Z1);\n            let t5 = Fp.add(X2, Z2); // step 10\n            t4 = Fp.mul(t4, t5);\n            t5 = Fp.add(t0, t2);\n            t4 = Fp.sub(t4, t5);\n            t5 = Fp.add(Y1, Z1);\n            X3 = Fp.add(Y2, Z2); // step 15\n            t5 = Fp.mul(t5, X3);\n            X3 = Fp.add(t1, t2);\n            t5 = Fp.sub(t5, X3);\n            Z3 = Fp.mul(a, t4);\n            X3 = Fp.mul(b3, t2); // step 20\n            Z3 = Fp.add(X3, Z3);\n            X3 = Fp.sub(t1, Z3);\n            Z3 = Fp.add(t1, Z3);\n            Y3 = Fp.mul(X3, Z3);\n            t1 = Fp.add(t0, t0); // step 25\n            t1 = Fp.add(t1, t0);\n            t2 = Fp.mul(a, t2);\n            t4 = Fp.mul(b3, t4);\n            t1 = Fp.add(t1, t2);\n            t2 = Fp.sub(t0, t2); // step 30\n            t2 = Fp.mul(a, t2);\n            t4 = Fp.add(t4, t2);\n            t0 = Fp.mul(t1, t4);\n            Y3 = Fp.add(Y3, t0);\n            t0 = Fp.mul(t5, t4); // step 35\n            X3 = Fp.mul(t3, X3);\n            X3 = Fp.sub(X3, t0);\n            t0 = Fp.mul(t3, t1);\n            Z3 = Fp.mul(t5, Z3);\n            Z3 = Fp.add(Z3, t0); // step 40\n            return new Point(X3, Y3, Z3);\n        }\n        subtract(other) {\n            return this.add(other.negate());\n        }\n        is0() {\n            return this.equals(Point.ZERO);\n        }\n        wNAF(n) {\n            return wnaf.wNAFCached(this, pointPrecomputes, n, (comp) => {\n                const toInv = Fp.invertBatch(comp.map((p) => p.pz));\n                return comp.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n            });\n        }\n        /**\n         * Non-constant-time multiplication. Uses double-and-add algorithm.\n         * It's faster, but should only be used when you don't care about\n         * an exposed private key e.g. sig verification, which works over *public* keys.\n         */\n        multiplyUnsafe(n) {\n            const I = Point.ZERO;\n            if (n === _0n)\n                return I;\n            assertGE(n); // Will throw on 0\n            if (n === _1n)\n                return this;\n            const { endo } = CURVE;\n            if (!endo)\n                return wnaf.unsafeLadder(this, n);\n            // Apply endomorphism\n            let { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n            let k1p = I;\n            let k2p = I;\n            let d = this;\n            while (k1 > _0n || k2 > _0n) {\n                if (k1 & _1n)\n                    k1p = k1p.add(d);\n                if (k2 & _1n)\n                    k2p = k2p.add(d);\n                d = d.double();\n                k1 >>= _1n;\n                k2 >>= _1n;\n            }\n            if (k1neg)\n                k1p = k1p.negate();\n            if (k2neg)\n                k2p = k2p.negate();\n            k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n            return k1p.add(k2p);\n        }\n        /**\n         * Constant time multiplication.\n         * Uses wNAF method. Windowed method may be 10% faster,\n         * but takes 2x longer to generate and consumes 2x memory.\n         * Uses precomputes when available.\n         * Uses endomorphism for Koblitz curves.\n         * @param scalar by which the point would be multiplied\n         * @returns New point\n         */\n        multiply(scalar) {\n            assertGE(scalar);\n            let n = scalar;\n            let point, fake; // Fake point is used to const-time mult\n            const { endo } = CURVE;\n            if (endo) {\n                const { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n                let { p: k1p, f: f1p } = this.wNAF(k1);\n                let { p: k2p, f: f2p } = this.wNAF(k2);\n                k1p = wnaf.constTimeNegate(k1neg, k1p);\n                k2p = wnaf.constTimeNegate(k2neg, k2p);\n                k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n                point = k1p.add(k2p);\n                fake = f1p.add(f2p);\n            }\n            else {\n                const { p, f } = this.wNAF(n);\n                point = p;\n                fake = f;\n            }\n            // Normalize `z` for both points, but return only real one\n            return Point.normalizeZ([point, fake])[0];\n        }\n        /**\n         * Efficiently calculate `aP + bQ`. Unsafe, can expose private key, if used incorrectly.\n         * Not using Strauss-Shamir trick: precomputation tables are faster.\n         * The trick could be useful if both P and Q are not G (not in our case).\n         * @returns non-zero affine point\n         */\n        multiplyAndAddUnsafe(Q, a, b) {\n            const G = Point.BASE; // No Strauss-Shamir trick: we have 10% faster G precomputes\n            const mul = (P, a // Select faster multiply() method\n            ) => (a === _0n || a === _1n || !P.equals(G) ? P.multiplyUnsafe(a) : P.multiply(a));\n            const sum = mul(this, a).add(mul(Q, b));\n            return sum.is0() ? undefined : sum;\n        }\n        // Converts Projective point to affine (x, y) coordinates.\n        // Can accept precomputed Z^-1 - for example, from invertBatch.\n        // (x, y, z) ∋ (x=x/z, y=y/z)\n        toAffine(iz) {\n            const { px: x, py: y, pz: z } = this;\n            const is0 = this.is0();\n            // If invZ was 0, we return zero point. However we still want to execute\n            // all operations, so we replace invZ with a random number, 1.\n            if (iz == null)\n                iz = is0 ? Fp.ONE : Fp.inv(z);\n            const ax = Fp.mul(x, iz);\n            const ay = Fp.mul(y, iz);\n            const zz = Fp.mul(z, iz);\n            if (is0)\n                return { x: Fp.ZERO, y: Fp.ZERO };\n            if (!Fp.eql(zz, Fp.ONE))\n                throw new Error('invZ was invalid');\n            return { x: ax, y: ay };\n        }\n        isTorsionFree() {\n            const { h: cofactor, isTorsionFree } = CURVE;\n            if (cofactor === _1n)\n                return true; // No subgroups, always torsion-free\n            if (isTorsionFree)\n                return isTorsionFree(Point, this);\n            throw new Error('isTorsionFree() has not been declared for the elliptic curve');\n        }\n        clearCofactor() {\n            const { h: cofactor, clearCofactor } = CURVE;\n            if (cofactor === _1n)\n                return this; // Fast-path\n            if (clearCofactor)\n                return clearCofactor(Point, this);\n            return this.multiplyUnsafe(CURVE.h);\n        }\n        toRawBytes(isCompressed = true) {\n            this.assertValidity();\n            return toBytes(Point, this, isCompressed);\n        }\n        toHex(isCompressed = true) {\n            return ut.bytesToHex(this.toRawBytes(isCompressed));\n        }\n    }\n    Point.BASE = new Point(CURVE.Gx, CURVE.Gy, Fp.ONE);\n    Point.ZERO = new Point(Fp.ZERO, Fp.ONE, Fp.ZERO);\n    const _bits = CURVE.nBitLength;\n    const wnaf = wNAF(Point, CURVE.endo ? Math.ceil(_bits / 2) : _bits);\n    // Validate if generator point is on curve\n    return {\n        CURVE,\n        ProjectivePoint: Point,\n        normPrivateKeyToScalar,\n        weierstrassEquation,\n        isWithinCurveOrder,\n    };\n}\nfunction validateOpts(curve) {\n    const opts = validateBasic(curve);\n    ut.validateObject(opts, {\n        hash: 'hash',\n        hmac: 'function',\n        randomBytes: 'function',\n    }, {\n        bits2int: 'function',\n        bits2int_modN: 'function',\n        lowS: 'boolean',\n    });\n    return Object.freeze({ lowS: true, ...opts });\n}\nexport function weierstrass(curveDef) {\n    const CURVE = validateOpts(curveDef);\n    const { Fp, n: CURVE_ORDER } = CURVE;\n    const compressedLen = Fp.BYTES + 1; // e.g. 33 for 32\n    const uncompressedLen = 2 * Fp.BYTES + 1; // e.g. 65 for 32\n    function isValidFieldElement(num) {\n        return _0n < num && num < Fp.ORDER; // 0 is banned since it's not invertible FE\n    }\n    function modN(a) {\n        return mod.mod(a, CURVE_ORDER);\n    }\n    function invN(a) {\n        return mod.invert(a, CURVE_ORDER);\n    }\n    const { ProjectivePoint: Point, normPrivateKeyToScalar, weierstrassEquation, isWithinCurveOrder, } = weierstrassPoints({\n        ...CURVE,\n        toBytes(_c, point, isCompressed) {\n            const a = point.toAffine();\n            const x = Fp.toBytes(a.x);\n            const cat = ut.concatBytes;\n            if (isCompressed) {\n                return cat(Uint8Array.from([point.hasEvenY() ? 0x02 : 0x03]), x);\n            }\n            else {\n                return cat(Uint8Array.from([0x04]), x, Fp.toBytes(a.y));\n            }\n        },\n        fromBytes(bytes) {\n            const len = bytes.length;\n            const head = bytes[0];\n            const tail = bytes.subarray(1);\n            // this.assertValidity() is done inside of fromHex\n            if (len === compressedLen && (head === 0x02 || head === 0x03)) {\n                const x = ut.bytesToNumberBE(tail);\n                if (!isValidFieldElement(x))\n                    throw new Error('Point is not on curve');\n                const y2 = weierstrassEquation(x); // y² = x³ + ax + b\n                let y;\n                try {\n                    y = Fp.sqrt(y2); // y = y² ^ (p+1)/4\n                }\n                catch (sqrtError) {\n                    const suffix = sqrtError instanceof Error ? ': ' + sqrtError.message : '';\n                    throw new Error('Point is not on curve' + suffix);\n                }\n                const isYOdd = (y & _1n) === _1n;\n                // ECDSA\n                const isHeadOdd = (head & 1) === 1;\n                if (isHeadOdd !== isYOdd)\n                    y = Fp.neg(y);\n                return { x, y };\n            }\n            else if (len === uncompressedLen && head === 0x04) {\n                const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n                const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n                return { x, y };\n            }\n            else {\n                throw new Error(`Point of length ${len} was invalid. Expected ${compressedLen} compressed bytes or ${uncompressedLen} uncompressed bytes`);\n            }\n        },\n    });\n    const numToNByteStr = (num) => ut.bytesToHex(ut.numberToBytesBE(num, CURVE.nByteLength));\n    function isBiggerThanHalfOrder(number) {\n        const HALF = CURVE_ORDER >> _1n;\n        return number > HALF;\n    }\n    function normalizeS(s) {\n        return isBiggerThanHalfOrder(s) ? modN(-s) : s;\n    }\n    // slice bytes num\n    const slcNum = (b, from, to) => ut.bytesToNumberBE(b.slice(from, to));\n    /**\n     * ECDSA signature with its (r, s) properties. Supports DER & compact representations.\n     */\n    class Signature {\n        constructor(r, s, recovery) {\n            this.r = r;\n            this.s = s;\n            this.recovery = recovery;\n            this.assertValidity();\n        }\n        // pair (bytes of r, bytes of s)\n        static fromCompact(hex) {\n            const l = CURVE.nByteLength;\n            hex = ensureBytes('compactSignature', hex, l * 2);\n            return new Signature(slcNum(hex, 0, l), slcNum(hex, l, 2 * l));\n        }\n        // DER encoded ECDSA signature\n        // https://bitcoin.stackexchange.com/questions/57644/what-are-the-parts-of-a-bitcoin-transaction-input-script\n        static fromDER(hex) {\n            const { r, s } = DER.toSig(ensureBytes('DER', hex));\n            return new Signature(r, s);\n        }\n        assertValidity() {\n            // can use assertGE here\n            if (!isWithinCurveOrder(this.r))\n                throw new Error('r must be 0 < r < CURVE.n');\n            if (!isWithinCurveOrder(this.s))\n                throw new Error('s must be 0 < s < CURVE.n');\n        }\n        addRecoveryBit(recovery) {\n            return new Signature(this.r, this.s, recovery);\n        }\n        recoverPublicKey(msgHash) {\n            const { r, s, recovery: rec } = this;\n            const h = bits2int_modN(ensureBytes('msgHash', msgHash)); // Truncate hash\n            if (rec == null || ![0, 1, 2, 3].includes(rec))\n                throw new Error('recovery id invalid');\n            const radj = rec === 2 || rec === 3 ? r + CURVE.n : r;\n            if (radj >= Fp.ORDER)\n                throw new Error('recovery id 2 or 3 invalid');\n            const prefix = (rec & 1) === 0 ? '02' : '03';\n            const R = Point.fromHex(prefix + numToNByteStr(radj));\n            const ir = invN(radj); // r^-1\n            const u1 = modN(-h * ir); // -hr^-1\n            const u2 = modN(s * ir); // sr^-1\n            const Q = Point.BASE.multiplyAndAddUnsafe(R, u1, u2); // (sr^-1)R-(hr^-1)G = -(hr^-1)G + (sr^-1)\n            if (!Q)\n                throw new Error('point at infinify'); // unsafe is fine: no priv data leaked\n            Q.assertValidity();\n            return Q;\n        }\n        // Signatures should be low-s, to prevent malleability.\n        hasHighS() {\n            return isBiggerThanHalfOrder(this.s);\n        }\n        normalizeS() {\n            return this.hasHighS() ? new Signature(this.r, modN(-this.s), this.recovery) : this;\n        }\n        // DER-encoded\n        toDERRawBytes() {\n            return ut.hexToBytes(this.toDERHex());\n        }\n        toDERHex() {\n            return DER.hexFromSig({ r: this.r, s: this.s });\n        }\n        // padded bytes of r, then padded bytes of s\n        toCompactRawBytes() {\n            return ut.hexToBytes(this.toCompactHex());\n        }\n        toCompactHex() {\n            return numToNByteStr(this.r) + numToNByteStr(this.s);\n        }\n    }\n    const utils = {\n        isValidPrivateKey(privateKey) {\n            try {\n                normPrivateKeyToScalar(privateKey);\n                return true;\n            }\n            catch (error) {\n                return false;\n            }\n        },\n        normPrivateKeyToScalar: normPrivateKeyToScalar,\n        /**\n         * Produces cryptographically secure private key from random of size\n         * (groupLen + ceil(groupLen / 2)) with modulo bias being negligible.\n         */\n        randomPrivateKey: () => {\n            const length = mod.getMinHashLength(CURVE.n);\n            return mod.mapHashToField(CURVE.randomBytes(length), CURVE.n);\n        },\n        /**\n         * Creates precompute table for an arbitrary EC point. Makes point \"cached\".\n         * Allows to massively speed-up `point.multiply(scalar)`.\n         * @returns cached point\n         * @example\n         * const fast = utils.precompute(8, ProjectivePoint.fromHex(someonesPubKey));\n         * fast.multiply(privKey); // much faster ECDH now\n         */\n        precompute(windowSize = 8, point = Point.BASE) {\n            point._setWindowSize(windowSize);\n            point.multiply(BigInt(3)); // 3 is arbitrary, just need any number here\n            return point;\n        },\n    };\n    /**\n     * Computes public key for a private key. Checks for validity of the private key.\n     * @param privateKey private key\n     * @param isCompressed whether to return compact (default), or full key\n     * @returns Public key, full when isCompressed=false; short when isCompressed=true\n     */\n    function getPublicKey(privateKey, isCompressed = true) {\n        return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed);\n    }\n    /**\n     * Quick and dirty check for item being public key. Does not validate hex, or being on-curve.\n     */\n    function isProbPub(item) {\n        const arr = ut.isBytes(item);\n        const str = typeof item === 'string';\n        const len = (arr || str) && item.length;\n        if (arr)\n            return len === compressedLen || len === uncompressedLen;\n        if (str)\n            return len === 2 * compressedLen || len === 2 * uncompressedLen;\n        if (item instanceof Point)\n            return true;\n        return false;\n    }\n    /**\n     * ECDH (Elliptic Curve Diffie Hellman).\n     * Computes shared public key from private key and public key.\n     * Checks: 1) private key validity 2) shared key is on-curve.\n     * Does NOT hash the result.\n     * @param privateA private key\n     * @param publicB different public key\n     * @param isCompressed whether to return compact (default), or full key\n     * @returns shared public key\n     */\n    function getSharedSecret(privateA, publicB, isCompressed = true) {\n        if (isProbPub(privateA))\n            throw new Error('first arg must be private key');\n        if (!isProbPub(publicB))\n            throw new Error('second arg must be public key');\n        const b = Point.fromHex(publicB); // check for being on-curve\n        return b.multiply(normPrivateKeyToScalar(privateA)).toRawBytes(isCompressed);\n    }\n    // RFC6979: ensure ECDSA msg is X bytes and < N. RFC suggests optional truncating via bits2octets.\n    // FIPS 186-4 4.6 suggests the leftmost min(nBitLen, outLen) bits, which matches bits2int.\n    // bits2int can produce res>N, we can do mod(res, N) since the bitLen is the same.\n    // int2octets can't be used; pads small msgs with 0: unacceptatble for trunc as per RFC vectors\n    const bits2int = CURVE.bits2int ||\n        function (bytes) {\n            // For curves with nBitLength % 8 !== 0: bits2octets(bits2octets(m)) !== bits2octets(m)\n            // for some cases, since bytes.length * 8 is not actual bitLength.\n            const num = ut.bytesToNumberBE(bytes); // check for == u8 done here\n            const delta = bytes.length * 8 - CURVE.nBitLength; // truncate to nBitLength leftmost bits\n            return delta > 0 ? num >> BigInt(delta) : num;\n        };\n    const bits2int_modN = CURVE.bits2int_modN ||\n        function (bytes) {\n            return modN(bits2int(bytes)); // can't use bytesToNumberBE here\n        };\n    // NOTE: pads output with zero as per spec\n    const ORDER_MASK = ut.bitMask(CURVE.nBitLength);\n    /**\n     * Converts to bytes. Checks if num in `[0..ORDER_MASK-1]` e.g.: `[0..2^256-1]`.\n     */\n    function int2octets(num) {\n        if (typeof num !== 'bigint')\n            throw new Error('bigint expected');\n        if (!(_0n <= num && num < ORDER_MASK))\n            throw new Error(`bigint expected < 2^${CURVE.nBitLength}`);\n        // works with order, can have different size than numToField!\n        return ut.numberToBytesBE(num, CURVE.nByteLength);\n    }\n    // Steps A, D of RFC6979 3.2\n    // Creates RFC6979 seed; converts msg/privKey to numbers.\n    // Used only in sign, not in verify.\n    // NOTE: we cannot assume here that msgHash has same amount of bytes as curve order, this will be wrong at least for P521.\n    // Also it can be bigger for P224 + SHA256\n    function prepSig(msgHash, privateKey, opts = defaultSigOpts) {\n        if (['recovered', 'canonical'].some((k) => k in opts))\n            throw new Error('sign() legacy options not supported');\n        const { hash, randomBytes } = CURVE;\n        let { lowS, prehash, extraEntropy: ent } = opts; // generates low-s sigs by default\n        if (lowS == null)\n            lowS = true; // RFC6979 3.2: we skip step A, because we already provide hash\n        msgHash = ensureBytes('msgHash', msgHash);\n        if (prehash)\n            msgHash = ensureBytes('prehashed msgHash', hash(msgHash));\n        // We can't later call bits2octets, since nested bits2int is broken for curves\n        // with nBitLength % 8 !== 0. Because of that, we unwrap it here as int2octets call.\n        // const bits2octets = (bits) => int2octets(bits2int_modN(bits))\n        const h1int = bits2int_modN(msgHash);\n        const d = normPrivateKeyToScalar(privateKey); // validate private key, convert to bigint\n        const seedArgs = [int2octets(d), int2octets(h1int)];\n        // extraEntropy. RFC6979 3.6: additional k' (optional).\n        if (ent != null && ent !== false) {\n            // K = HMAC_K(V || 0x00 || int2octets(x) || bits2octets(h1) || k')\n            const e = ent === true ? randomBytes(Fp.BYTES) : ent; // generate random bytes OR pass as-is\n            seedArgs.push(ensureBytes('extraEntropy', e)); // check for being bytes\n        }\n        const seed = ut.concatBytes(...seedArgs); // Step D of RFC6979 3.2\n        const m = h1int; // NOTE: no need to call bits2int second time here, it is inside truncateHash!\n        // Converts signature params into point w r/s, checks result for validity.\n        function k2sig(kBytes) {\n            // RFC 6979 Section 3.2, step 3: k = bits2int(T)\n            const k = bits2int(kBytes); // Cannot use fields methods, since it is group element\n            if (!isWithinCurveOrder(k))\n                return; // Important: all mod() calls here must be done over N\n            const ik = invN(k); // k^-1 mod n\n            const q = Point.BASE.multiply(k).toAffine(); // q = Gk\n            const r = modN(q.x); // r = q.x mod n\n            if (r === _0n)\n                return;\n            // Can use scalar blinding b^-1(bm + bdr) where b ∈ [1,q−1] according to\n            // https://tches.iacr.org/index.php/TCHES/article/view/7337/6509. We've decided against it:\n            // a) dependency on CSPRNG b) 15% slowdown c) doesn't really help since bigints are not CT\n            const s = modN(ik * modN(m + r * d)); // Not using blinding here\n            if (s === _0n)\n                return;\n            let recovery = (q.x === r ? 0 : 2) | Number(q.y & _1n); // recovery bit (2 or 3, when q.x > n)\n            let normS = s;\n            if (lowS && isBiggerThanHalfOrder(s)) {\n                normS = normalizeS(s); // if lowS was passed, ensure s is always\n                recovery ^= 1; // // in the bottom half of N\n            }\n            return new Signature(r, normS, recovery); // use normS, not s\n        }\n        return { seed, k2sig };\n    }\n    const defaultSigOpts = { lowS: CURVE.lowS, prehash: false };\n    const defaultVerOpts = { lowS: CURVE.lowS, prehash: false };\n    /**\n     * Signs message hash with a private key.\n     * ```\n     * sign(m, d, k) where\n     *   (x, y) = G × k\n     *   r = x mod n\n     *   s = (m + dr)/k mod n\n     * ```\n     * @param msgHash NOT message. msg needs to be hashed to `msgHash`, or use `prehash`.\n     * @param privKey private key\n     * @param opts lowS for non-malleable sigs. extraEntropy for mixing randomness into k. prehash will hash first arg.\n     * @returns signature with recovery param\n     */\n    function sign(msgHash, privKey, opts = defaultSigOpts) {\n        const { seed, k2sig } = prepSig(msgHash, privKey, opts); // Steps A, D of RFC6979 3.2.\n        const C = CURVE;\n        const drbg = ut.createHmacDrbg(C.hash.outputLen, C.nByteLength, C.hmac);\n        return drbg(seed, k2sig); // Steps B, C, D, E, F, G\n    }\n    // Enable precomputes. Slows down first publicKey computation by 20ms.\n    Point.BASE._setWindowSize(8);\n    // utils.precompute(8, ProjectivePoint.BASE)\n    /**\n     * Verifies a signature against message hash and public key.\n     * Rejects lowS signatures by default: to override,\n     * specify option `{lowS: false}`. Implements section 4.1.4 from https://www.secg.org/sec1-v2.pdf:\n     *\n     * ```\n     * verify(r, s, h, P) where\n     *   U1 = hs^-1 mod n\n     *   U2 = rs^-1 mod n\n     *   R = U1⋅G - U2⋅P\n     *   mod(R.x, n) == r\n     * ```\n     */\n    function verify(signature, msgHash, publicKey, opts = defaultVerOpts) {\n        const sg = signature;\n        msgHash = ensureBytes('msgHash', msgHash);\n        publicKey = ensureBytes('publicKey', publicKey);\n        if ('strict' in opts)\n            throw new Error('options.strict was renamed to lowS');\n        const { lowS, prehash } = opts;\n        let _sig = undefined;\n        let P;\n        try {\n            if (typeof sg === 'string' || ut.isBytes(sg)) {\n                // Signature can be represented in 2 ways: compact (2*nByteLength) & DER (variable-length).\n                // Since DER can also be 2*nByteLength bytes, we check for it first.\n                try {\n                    _sig = Signature.fromDER(sg);\n                }\n                catch (derError) {\n                    if (!(derError instanceof DER.Err))\n                        throw derError;\n                    _sig = Signature.fromCompact(sg);\n                }\n            }\n            else if (typeof sg === 'object' && typeof sg.r === 'bigint' && typeof sg.s === 'bigint') {\n                const { r, s } = sg;\n                _sig = new Signature(r, s);\n            }\n            else {\n                throw new Error('PARSE');\n            }\n            P = Point.fromHex(publicKey);\n        }\n        catch (error) {\n            if (error.message === 'PARSE')\n                throw new Error(`signature must be Signature instance, Uint8Array or hex string`);\n            return false;\n        }\n        if (lowS && _sig.hasHighS())\n            return false;\n        if (prehash)\n            msgHash = CURVE.hash(msgHash);\n        const { r, s } = _sig;\n        const h = bits2int_modN(msgHash); // Cannot use fields methods, since it is group element\n        const is = invN(s); // s^-1\n        const u1 = modN(h * is); // u1 = hs^-1 mod n\n        const u2 = modN(r * is); // u2 = rs^-1 mod n\n        const R = Point.BASE.multiplyAndAddUnsafe(P, u1, u2)?.toAffine(); // R = u1⋅G + u2⋅P\n        if (!R)\n            return false;\n        const v = modN(R.x);\n        return v === r;\n    }\n    return {\n        CURVE,\n        getPublicKey,\n        getSharedSecret,\n        sign,\n        verify,\n        ProjectivePoint: Point,\n        Signature,\n        utils,\n    };\n}\n/**\n * Implementation of the Shallue and van de Woestijne method for any weierstrass curve.\n * TODO: check if there is a way to merge this with uvRatio in Edwards; move to modular.\n * b = True and y = sqrt(u / v) if (u / v) is square in F, and\n * b = False and y = sqrt(Z * (u / v)) otherwise.\n * @param Fp\n * @param Z\n * @returns\n */\nexport function SWUFpSqrtRatio(Fp, Z) {\n    // Generic implementation\n    const q = Fp.ORDER;\n    let l = _0n;\n    for (let o = q - _1n; o % _2n === _0n; o /= _2n)\n        l += _1n;\n    const c1 = l; // 1. c1, the largest integer such that 2^c1 divides q - 1.\n    // We need 2n ** c1 and 2n ** (c1-1). We can't use **; but we can use <<.\n    // 2n ** c1 == 2n << (c1-1)\n    const _2n_pow_c1_1 = _2n << (c1 - _1n - _1n);\n    const _2n_pow_c1 = _2n_pow_c1_1 * _2n;\n    const c2 = (q - _1n) / _2n_pow_c1; // 2. c2 = (q - 1) / (2^c1)  # Integer arithmetic\n    const c3 = (c2 - _1n) / _2n; // 3. c3 = (c2 - 1) / 2            # Integer arithmetic\n    const c4 = _2n_pow_c1 - _1n; // 4. c4 = 2^c1 - 1                # Integer arithmetic\n    const c5 = _2n_pow_c1_1; // 5. c5 = 2^(c1 - 1)                  # Integer arithmetic\n    const c6 = Fp.pow(Z, c2); // 6. c6 = Z^c2\n    const c7 = Fp.pow(Z, (c2 + _1n) / _2n); // 7. c7 = Z^((c2 + 1) / 2)\n    let sqrtRatio = (u, v) => {\n        let tv1 = c6; // 1. tv1 = c6\n        let tv2 = Fp.pow(v, c4); // 2. tv2 = v^c4\n        let tv3 = Fp.sqr(tv2); // 3. tv3 = tv2^2\n        tv3 = Fp.mul(tv3, v); // 4. tv3 = tv3 * v\n        let tv5 = Fp.mul(u, tv3); // 5. tv5 = u * tv3\n        tv5 = Fp.pow(tv5, c3); // 6. tv5 = tv5^c3\n        tv5 = Fp.mul(tv5, tv2); // 7. tv5 = tv5 * tv2\n        tv2 = Fp.mul(tv5, v); // 8. tv2 = tv5 * v\n        tv3 = Fp.mul(tv5, u); // 9. tv3 = tv5 * u\n        let tv4 = Fp.mul(tv3, tv2); // 10. tv4 = tv3 * tv2\n        tv5 = Fp.pow(tv4, c5); // 11. tv5 = tv4^c5\n        let isQR = Fp.eql(tv5, Fp.ONE); // 12. isQR = tv5 == 1\n        tv2 = Fp.mul(tv3, c7); // 13. tv2 = tv3 * c7\n        tv5 = Fp.mul(tv4, tv1); // 14. tv5 = tv4 * tv1\n        tv3 = Fp.cmov(tv2, tv3, isQR); // 15. tv3 = CMOV(tv2, tv3, isQR)\n        tv4 = Fp.cmov(tv5, tv4, isQR); // 16. tv4 = CMOV(tv5, tv4, isQR)\n        // 17. for i in (c1, c1 - 1, ..., 2):\n        for (let i = c1; i > _1n; i--) {\n            let tv5 = i - _2n; // 18.    tv5 = i - 2\n            tv5 = _2n << (tv5 - _1n); // 19.    tv5 = 2^tv5\n            let tvv5 = Fp.pow(tv4, tv5); // 20.    tv5 = tv4^tv5\n            const e1 = Fp.eql(tvv5, Fp.ONE); // 21.    e1 = tv5 == 1\n            tv2 = Fp.mul(tv3, tv1); // 22.    tv2 = tv3 * tv1\n            tv1 = Fp.mul(tv1, tv1); // 23.    tv1 = tv1 * tv1\n            tvv5 = Fp.mul(tv4, tv1); // 24.    tv5 = tv4 * tv1\n            tv3 = Fp.cmov(tv2, tv3, e1); // 25.    tv3 = CMOV(tv2, tv3, e1)\n            tv4 = Fp.cmov(tvv5, tv4, e1); // 26.    tv4 = CMOV(tv5, tv4, e1)\n        }\n        return { isValid: isQR, value: tv3 };\n    };\n    if (Fp.ORDER % _4n === _3n) {\n        // sqrt_ratio_3mod4(u, v)\n        const c1 = (Fp.ORDER - _3n) / _4n; // 1. c1 = (q - 3) / 4     # Integer arithmetic\n        const c2 = Fp.sqrt(Fp.neg(Z)); // 2. c2 = sqrt(-Z)\n        sqrtRatio = (u, v) => {\n            let tv1 = Fp.sqr(v); // 1. tv1 = v^2\n            const tv2 = Fp.mul(u, v); // 2. tv2 = u * v\n            tv1 = Fp.mul(tv1, tv2); // 3. tv1 = tv1 * tv2\n            let y1 = Fp.pow(tv1, c1); // 4. y1 = tv1^c1\n            y1 = Fp.mul(y1, tv2); // 5. y1 = y1 * tv2\n            const y2 = Fp.mul(y1, c2); // 6. y2 = y1 * c2\n            const tv3 = Fp.mul(Fp.sqr(y1), v); // 7. tv3 = y1^2; 8. tv3 = tv3 * v\n            const isQR = Fp.eql(tv3, u); // 9. isQR = tv3 == u\n            let y = Fp.cmov(y2, y1, isQR); // 10. y = CMOV(y2, y1, isQR)\n            return { isValid: isQR, value: y }; // 11. return (isQR, y) isQR ? y : y*c2\n        };\n    }\n    // No curves uses that\n    // if (Fp.ORDER % _8n === _5n) // sqrt_ratio_5mod8\n    return sqrtRatio;\n}\n/**\n * Simplified Shallue-van de Woestijne-Ulas Method\n * https://www.rfc-editor.org/rfc/rfc9380#section-6.6.2\n */\nexport function mapToCurveSimpleSWU(Fp, opts) {\n    mod.validateField(Fp);\n    if (!Fp.isValid(opts.A) || !Fp.isValid(opts.B) || !Fp.isValid(opts.Z))\n        throw new Error('mapToCurveSimpleSWU: invalid opts');\n    const sqrtRatio = SWUFpSqrtRatio(Fp, opts.Z);\n    if (!Fp.isOdd)\n        throw new Error('Fp.isOdd is not implemented!');\n    // Input: u, an element of F.\n    // Output: (x, y), a point on E.\n    return (u) => {\n        // prettier-ignore\n        let tv1, tv2, tv3, tv4, tv5, tv6, x, y;\n        tv1 = Fp.sqr(u); // 1.  tv1 = u^2\n        tv1 = Fp.mul(tv1, opts.Z); // 2.  tv1 = Z * tv1\n        tv2 = Fp.sqr(tv1); // 3.  tv2 = tv1^2\n        tv2 = Fp.add(tv2, tv1); // 4.  tv2 = tv2 + tv1\n        tv3 = Fp.add(tv2, Fp.ONE); // 5.  tv3 = tv2 + 1\n        tv3 = Fp.mul(tv3, opts.B); // 6.  tv3 = B * tv3\n        tv4 = Fp.cmov(opts.Z, Fp.neg(tv2), !Fp.eql(tv2, Fp.ZERO)); // 7.  tv4 = CMOV(Z, -tv2, tv2 != 0)\n        tv4 = Fp.mul(tv4, opts.A); // 8.  tv4 = A * tv4\n        tv2 = Fp.sqr(tv3); // 9.  tv2 = tv3^2\n        tv6 = Fp.sqr(tv4); // 10. tv6 = tv4^2\n        tv5 = Fp.mul(tv6, opts.A); // 11. tv5 = A * tv6\n        tv2 = Fp.add(tv2, tv5); // 12. tv2 = tv2 + tv5\n        tv2 = Fp.mul(tv2, tv3); // 13. tv2 = tv2 * tv3\n        tv6 = Fp.mul(tv6, tv4); // 14. tv6 = tv6 * tv4\n        tv5 = Fp.mul(tv6, opts.B); // 15. tv5 = B * tv6\n        tv2 = Fp.add(tv2, tv5); // 16. tv2 = tv2 + tv5\n        x = Fp.mul(tv1, tv3); // 17.   x = tv1 * tv3\n        const { isValid, value } = sqrtRatio(tv2, tv6); // 18. (is_gx1_square, y1) = sqrt_ratio(tv2, tv6)\n        y = Fp.mul(tv1, u); // 19.   y = tv1 * u  -> Z * u^3 * y1\n        y = Fp.mul(y, value); // 20.   y = y * y1\n        x = Fp.cmov(x, tv3, isValid); // 21.   x = CMOV(x, tv3, is_gx1_square)\n        y = Fp.cmov(y, value, isValid); // 22.   y = CMOV(y, y1, is_gx1_square)\n        const e1 = Fp.isOdd(u) === Fp.isOdd(y); // 23.  e1 = sgn0(u) == sgn0(y)\n        y = Fp.cmov(Fp.neg(y), y, e1); // 24.   y = CMOV(-y, y, e1)\n        x = Fp.div(x, tv4); // 25.   x = x / tv4\n        return { x, y };\n    };\n}\n//# sourceMappingURL=weierstrass.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { hmac } from '@noble/hashes/hmac';\nimport { concatBytes, randomBytes } from '@noble/hashes/utils';\nimport { weierstrass } from './abstract/weierstrass.js';\n// connects noble-curves to noble-hashes\nexport function getHash(hash) {\n    return {\n        hash,\n        hmac: (key, ...msgs) => hmac(hash, key, concatBytes(...msgs)),\n        randomBytes,\n    };\n}\nexport function createCurve(curveDef, defHash) {\n    const create = (hash) => weierstrass({ ...curveDef, ...getHash(hash) });\n    return Object.freeze({ ...create(defHash), create });\n}\n//# sourceMappingURL=_shortw_utils.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { sha256 } from '@noble/hashes/sha256';\nimport { randomBytes } from '@noble/hashes/utils';\nimport { createCurve } from './_shortw_utils.js';\nimport { createHasher, isogenyMap } from './abstract/hash-to-curve.js';\nimport { Field, mod, pow2 } from './abstract/modular.js';\nimport { bytesToNumberBE, concatBytes, ensureBytes, numberToBytesBE } from './abstract/utils.js';\nimport { mapToCurveSimpleSWU } from './abstract/weierstrass.js';\nconst secp256k1P = BigInt('0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f');\nconst secp256k1N = BigInt('0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141');\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst divNearest = (a, b) => (a + b / _2n) / b;\n/**\n * √n = n^((p+1)/4) for fields p = 3 mod 4. We unwrap the loop and multiply bit-by-bit.\n * (P+1n/4n).toString(2) would produce bits [223x 1, 0, 22x 1, 4x 0, 11, 00]\n */\nfunction sqrtMod(y) {\n    const P = secp256k1P;\n    // prettier-ignore\n    const _3n = BigInt(3), _6n = BigInt(6), _11n = BigInt(11), _22n = BigInt(22);\n    // prettier-ignore\n    const _23n = BigInt(23), _44n = BigInt(44), _88n = BigInt(88);\n    const b2 = (y * y * y) % P; // x^3, 11\n    const b3 = (b2 * b2 * y) % P; // x^7\n    const b6 = (pow2(b3, _3n, P) * b3) % P;\n    const b9 = (pow2(b6, _3n, P) * b3) % P;\n    const b11 = (pow2(b9, _2n, P) * b2) % P;\n    const b22 = (pow2(b11, _11n, P) * b11) % P;\n    const b44 = (pow2(b22, _22n, P) * b22) % P;\n    const b88 = (pow2(b44, _44n, P) * b44) % P;\n    const b176 = (pow2(b88, _88n, P) * b88) % P;\n    const b220 = (pow2(b176, _44n, P) * b44) % P;\n    const b223 = (pow2(b220, _3n, P) * b3) % P;\n    const t1 = (pow2(b223, _23n, P) * b22) % P;\n    const t2 = (pow2(t1, _6n, P) * b2) % P;\n    const root = pow2(t2, _2n, P);\n    if (!Fp.eql(Fp.sqr(root), y))\n        throw new Error('Cannot find square root');\n    return root;\n}\nconst Fp = Field(secp256k1P, undefined, undefined, { sqrt: sqrtMod });\nexport const secp256k1 = createCurve({\n    a: BigInt(0), // equation params: a, b\n    b: BigInt(7), // Seem to be rigid: bitcointalk.org/index.php?topic=289795.msg3183975#msg3183975\n    Fp, // Field's prime: 2n**256n - 2n**32n - 2n**9n - 2n**8n - 2n**7n - 2n**6n - 2n**4n - 1n\n    n: secp256k1N, // Curve order, total count of valid points in the field\n    // Base point (x, y) aka generator point\n    Gx: BigInt('55066263022277343669578718895168534326250603453777594175500187360389116729240'),\n    Gy: BigInt('32670510020758816978083085130507043184471273380659243275938904335757337482424'),\n    h: BigInt(1), // Cofactor\n    lowS: true, // Allow only low-S signatures by default in sign() and verify()\n    /**\n     * secp256k1 belongs to Koblitz curves: it has efficiently computable endomorphism.\n     * Endomorphism uses 2x less RAM, speeds up precomputation by 2x and ECDH / key recovery by 20%.\n     * For precomputed wNAF it trades off 1/2 init time & 1/3 ram for 20% perf hit.\n     * Explanation: https://gist.github.com/paulmillr/eb670806793e84df628a7c434a873066\n     */\n    endo: {\n        beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n        splitScalar: (k) => {\n            const n = secp256k1N;\n            const a1 = BigInt('0x3086d221a7d46bcde86c90e49284eb15');\n            const b1 = -_1n * BigInt('0xe4437ed6010e88286f547fa90abfe4c3');\n            const a2 = BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8');\n            const b2 = a1;\n            const POW_2_128 = BigInt('0x100000000000000000000000000000000'); // (2n**128n).toString(16)\n            const c1 = divNearest(b2 * k, n);\n            const c2 = divNearest(-b1 * k, n);\n            let k1 = mod(k - c1 * a1 - c2 * a2, n);\n            let k2 = mod(-c1 * b1 - c2 * b2, n);\n            const k1neg = k1 > POW_2_128;\n            const k2neg = k2 > POW_2_128;\n            if (k1neg)\n                k1 = n - k1;\n            if (k2neg)\n                k2 = n - k2;\n            if (k1 > POW_2_128 || k2 > POW_2_128) {\n                throw new Error('splitScalar: Endomorphism failed, k=' + k);\n            }\n            return { k1neg, k1, k2neg, k2 };\n        },\n    },\n}, sha256);\n// Schnorr signatures are superior to ECDSA from above. Below is Schnorr-specific BIP0340 code.\n// https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki\nconst _0n = BigInt(0);\nconst fe = (x) => typeof x === 'bigint' && _0n < x && x < secp256k1P;\nconst ge = (x) => typeof x === 'bigint' && _0n < x && x < secp256k1N;\n/** An object mapping tags to their tagged hash prefix of [SHA256(tag) | SHA256(tag)] */\nconst TAGGED_HASH_PREFIXES = {};\nfunction taggedHash(tag, ...messages) {\n    let tagP = TAGGED_HASH_PREFIXES[tag];\n    if (tagP === undefined) {\n        const tagH = sha256(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n        tagP = concatBytes(tagH, tagH);\n        TAGGED_HASH_PREFIXES[tag] = tagP;\n    }\n    return sha256(concatBytes(tagP, ...messages));\n}\n// ECDSA compact points are 33-byte. Schnorr is 32: we strip first byte 0x02 or 0x03\nconst pointToBytes = (point) => point.toRawBytes(true).slice(1);\nconst numTo32b = (n) => numberToBytesBE(n, 32);\nconst modP = (x) => mod(x, secp256k1P);\nconst modN = (x) => mod(x, secp256k1N);\nconst Point = secp256k1.ProjectivePoint;\nconst GmulAdd = (Q, a, b) => Point.BASE.multiplyAndAddUnsafe(Q, a, b);\n// Calculate point, scalar and bytes\nfunction schnorrGetExtPubKey(priv) {\n    let d_ = secp256k1.utils.normPrivateKeyToScalar(priv); // same method executed in fromPrivateKey\n    let p = Point.fromPrivateKey(d_); // P = d'⋅G; 0 < d' < n check is done inside\n    const scalar = p.hasEvenY() ? d_ : modN(-d_);\n    return { scalar: scalar, bytes: pointToBytes(p) };\n}\n/**\n * lift_x from BIP340. Convert 32-byte x coordinate to elliptic curve point.\n * @returns valid point checked for being on-curve\n */\nfunction lift_x(x) {\n    if (!fe(x))\n        throw new Error('bad x: need 0 < x < p'); // Fail if x ≥ p.\n    const xx = modP(x * x);\n    const c = modP(xx * x + BigInt(7)); // Let c = x³ + 7 mod p.\n    let y = sqrtMod(c); // Let y = c^(p+1)/4 mod p.\n    if (y % _2n !== _0n)\n        y = modP(-y); // Return the unique point P such that x(P) = x and\n    const p = new Point(x, y, _1n); // y(P) = y if y mod 2 = 0 or y(P) = p-y otherwise.\n    p.assertValidity();\n    return p;\n}\n/**\n * Create tagged hash, convert it to bigint, reduce modulo-n.\n */\nfunction challenge(...args) {\n    return modN(bytesToNumberBE(taggedHash('BIP0340/challenge', ...args)));\n}\n/**\n * Schnorr public key is just `x` coordinate of Point as per BIP340.\n */\nfunction schnorrGetPublicKey(privateKey) {\n    return schnorrGetExtPubKey(privateKey).bytes; // d'=int(sk). Fail if d'=0 or d'≥n. Ret bytes(d'⋅G)\n}\n/**\n * Creates Schnorr signature as per BIP340. Verifies itself before returning anything.\n * auxRand is optional and is not the sole source of k generation: bad CSPRNG won't be dangerous.\n */\nfunction schnorrSign(message, privateKey, auxRand = randomBytes(32)) {\n    const m = ensureBytes('message', message);\n    const { bytes: px, scalar: d } = schnorrGetExtPubKey(privateKey); // checks for isWithinCurveOrder\n    const a = ensureBytes('auxRand', auxRand, 32); // Auxiliary random data a: a 32-byte array\n    const t = numTo32b(d ^ bytesToNumberBE(taggedHash('BIP0340/aux', a))); // Let t be the byte-wise xor of bytes(d) and hash/aux(a)\n    const rand = taggedHash('BIP0340/nonce', t, px, m); // Let rand = hash/nonce(t || bytes(P) || m)\n    const k_ = modN(bytesToNumberBE(rand)); // Let k' = int(rand) mod n\n    if (k_ === _0n)\n        throw new Error('sign failed: k is zero'); // Fail if k' = 0.\n    const { bytes: rx, scalar: k } = schnorrGetExtPubKey(k_); // Let R = k'⋅G.\n    const e = challenge(rx, px, m); // Let e = int(hash/challenge(bytes(R) || bytes(P) || m)) mod n.\n    const sig = new Uint8Array(64); // Let sig = bytes(R) || bytes((k + ed) mod n).\n    sig.set(rx, 0);\n    sig.set(numTo32b(modN(k + e * d)), 32);\n    // If Verify(bytes(P), m, sig) (see below) returns failure, abort\n    if (!schnorrVerify(sig, m, px))\n        throw new Error('sign: Invalid signature produced');\n    return sig;\n}\n/**\n * Verifies Schnorr signature.\n * Will swallow errors & return false except for initial type validation of arguments.\n */\nfunction schnorrVerify(signature, message, publicKey) {\n    const sig = ensureBytes('signature', signature, 64);\n    const m = ensureBytes('message', message);\n    const pub = ensureBytes('publicKey', publicKey, 32);\n    try {\n        const P = lift_x(bytesToNumberBE(pub)); // P = lift_x(int(pk)); fail if that fails\n        const r = bytesToNumberBE(sig.subarray(0, 32)); // Let r = int(sig[0:32]); fail if r ≥ p.\n        if (!fe(r))\n            return false;\n        const s = bytesToNumberBE(sig.subarray(32, 64)); // Let s = int(sig[32:64]); fail if s ≥ n.\n        if (!ge(s))\n            return false;\n        const e = challenge(numTo32b(r), pointToBytes(P), m); // int(challenge(bytes(r)||bytes(P)||m))%n\n        const R = GmulAdd(P, s, modN(-e)); // R = s⋅G - e⋅P\n        if (!R || !R.hasEvenY() || R.toAffine().x !== r)\n            return false; // -eP == (n-e)P\n        return true; // Fail if is_infinite(R) / not has_even_y(R) / x(R) ≠ r.\n    }\n    catch (error) {\n        return false;\n    }\n}\nexport const schnorr = /* @__PURE__ */ (() => ({\n    getPublicKey: schnorrGetPublicKey,\n    sign: schnorrSign,\n    verify: schnorrVerify,\n    utils: {\n        randomPrivateKey: secp256k1.utils.randomPrivateKey,\n        lift_x,\n        pointToBytes,\n        numberToBytesBE,\n        bytesToNumberBE,\n        taggedHash,\n        mod,\n    },\n}))();\nconst isoMap = /* @__PURE__ */ (() => isogenyMap(Fp, [\n    // xNum\n    [\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa8c7',\n        '0x7d3d4c80bc321d5b9f315cea7fd44c5d595d2fc0bf63b92dfff1044f17c6581',\n        '0x534c328d23f234e6e2a413deca25caece4506144037c40314ecbd0b53d9dd262',\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa88c',\n    ],\n    // xDen\n    [\n        '0xd35771193d94918a9ca34ccbb7b640dd86cd409542f8487d9fe6b745781eb49b',\n        '0xedadc6f64383dc1df7c4b2d51b54225406d36b641f5e41bbc52a56612a8c6d14',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n    ],\n    // yNum\n    [\n        '0x4bda12f684bda12f684bda12f684bda12f684bda12f684bda12f684b8e38e23c',\n        '0xc75e0c32d5cb7c0fa9d0a54b12a0a6d5647ab046d686da6fdffc90fc201d71a3',\n        '0x29a6194691f91a73715209ef6512e576722830a201be2018a765e85a9ecee931',\n        '0x2f684bda12f684bda12f684bda12f684bda12f684bda12f684bda12f38e38d84',\n    ],\n    // yDen\n    [\n        '0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffff93b',\n        '0x7a06534bb8bdb49fd5e9e6632722c2989467c1bfc8e8d978dfb425d2685c2573',\n        '0x6484aa716545ca2cf3a70c3fa8fe337e0a3d21162f0d6299a7bf8192bfd2a76f',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n    ],\n].map((i) => i.map((j) => BigInt(j)))))();\nconst mapSWU = /* @__PURE__ */ (() => mapToCurveSimpleSWU(Fp, {\n    A: BigInt('0x3f8731abdd661adca08a5558f0f5d272e953d363cb6f0e5d405447c01a444533'),\n    B: BigInt('1771'),\n    Z: Fp.create(BigInt('-11')),\n}))();\nconst htf = /* @__PURE__ */ (() => createHasher(secp256k1.ProjectivePoint, (scalars) => {\n    const { x, y } = mapSWU(Fp.create(scalars[0]));\n    return isoMap(x, y);\n}, {\n    DST: 'secp256k1_XMD:SHA-256_SSWU_RO_',\n    encodeDST: 'secp256k1_XMD:SHA-256_SSWU_NU_',\n    p: Fp.ORDER,\n    m: 1,\n    k: 128,\n    expand: 'xmd',\n    hash: sha256,\n}))();\nexport const hashToCurve = /* @__PURE__ */ (() => htf.hashToCurve)();\nexport const encodeToCurve = /* @__PURE__ */ (() => htf.encodeToCurve)();\n//# sourceMappingURL=secp256k1.js.map","import assert from \"@noble/hashes/_assert\";\nimport { hexToBytes as _hexToBytes } from \"@noble/hashes/utils\";\nconst assertBool = assert.bool;\nconst assertBytes = assert.bytes;\nexport { assertBool, assertBytes };\nexport { bytesToHex, bytesToHex as toHex, concatBytes, createView, utf8ToBytes } from \"@noble/hashes/utils\";\n// buf.toString('utf8') -> bytesToUtf8(buf)\nexport function bytesToUtf8(data) {\n    if (!(data instanceof Uint8Array)) {\n        throw new TypeError(`bytesToUtf8 expected Uint8Array, got ${typeof data}`);\n    }\n    return new TextDecoder().decode(data);\n}\nexport function hexToBytes(data) {\n    const sliced = data.startsWith(\"0x\") ? data.substring(2) : data;\n    return _hexToBytes(sliced);\n}\n// buf.equals(buf2) -> equalsBytes(buf, buf2)\nexport function equalsBytes(a, b) {\n    if (a.length !== b.length) {\n        return false;\n    }\n    for (let i = 0; i < a.length; i++) {\n        if (a[i] !== b[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n// Internal utils\nexport function wrapHash(hash) {\n    return (msg) => {\n        assert.bytes(msg);\n        return hash(msg);\n    };\n}\n// TODO(v3): switch away from node crypto, remove this unnecessary variable.\nexport const crypto = (() => {\n    const webCrypto = typeof globalThis === \"object\" && \"crypto\" in globalThis ? globalThis.crypto : undefined;\n    const nodeRequire = typeof module !== \"undefined\" &&\n        typeof module.require === \"function\" &&\n        module.require.bind(module);\n    return {\n        node: nodeRequire && !webCrypto ? nodeRequire(\"crypto\") : undefined,\n        web: webCrypto\n    };\n})();\n","import { sha256 } from \"@noble/hashes/sha256\";\nimport { mod } from \"@noble/curves/abstract/modular\";\nimport { secp256k1 } from \"./secp256k1.js\";\nimport { assertBool, assertBytes, hexToBytes, toHex } from \"./utils.js\";\n// Use `secp256k1` module directly.\n// This is a legacy compatibility layer for the npm package `secp256k1` via noble-secp256k1\nconst Point = secp256k1.ProjectivePoint;\nfunction hexToNumber(hex) {\n    if (typeof hex !== \"string\") {\n        throw new TypeError(\"hexToNumber: expected string, got \" + typeof hex);\n    }\n    return BigInt(`0x${hex}`);\n}\n// Copy-paste from secp256k1, maybe export it?\nconst bytesToNumber = (bytes) => hexToNumber(toHex(bytes));\nconst numberToHex = (num) => num.toString(16).padStart(64, \"0\");\nconst numberToBytes = (num) => hexToBytes(numberToHex(num));\nconst ORDER = secp256k1.CURVE.n;\nfunction output(out = (len) => new Uint8Array(len), length, value) {\n    if (typeof out === \"function\") {\n        out = out(length);\n    }\n    assertBytes(out, length);\n    if (value) {\n        out.set(value);\n    }\n    return out;\n}\nfunction getSignature(signature) {\n    assertBytes(signature, 64);\n    return secp256k1.Signature.fromCompact(signature);\n}\nexport function createPrivateKeySync() {\n    return secp256k1.utils.randomPrivateKey();\n}\nexport async function createPrivateKey() {\n    return createPrivateKeySync();\n}\nexport function privateKeyVerify(privateKey) {\n    assertBytes(privateKey, 32);\n    return secp256k1.utils.isValidPrivateKey(privateKey);\n}\nexport function publicKeyCreate(privateKey, compressed = true, out) {\n    assertBytes(privateKey, 32);\n    assertBool(compressed);\n    const res = secp256k1.getPublicKey(privateKey, compressed);\n    return output(out, compressed ? 33 : 65, res);\n}\nexport function publicKeyVerify(publicKey) {\n    assertBytes(publicKey, 33, 65);\n    try {\n        Point.fromHex(publicKey);\n        return true;\n    }\n    catch (e) {\n        return false;\n    }\n}\nexport function publicKeyConvert(publicKey, compressed = true, out) {\n    assertBytes(publicKey, 33, 65);\n    assertBool(compressed);\n    const res = Point.fromHex(publicKey).toRawBytes(compressed);\n    return output(out, compressed ? 33 : 65, res);\n}\nexport function ecdsaSign(msgHash, privateKey, options = { noncefn: undefined, data: undefined }, out) {\n    assertBytes(msgHash, 32);\n    assertBytes(privateKey, 32);\n    if (typeof options !== \"object\" || options === null) {\n        throw new TypeError(\"secp256k1.ecdsaSign: options should be object\");\n    }\n    // noble-secp256k1 uses hmac instead of hmac-drbg here\n    if (options &&\n        (options.noncefn !== undefined || options.data !== undefined)) {\n        throw new Error(\"Secp256k1: noncefn && data is unsupported\");\n    }\n    const sig = secp256k1.sign(msgHash, privateKey);\n    const recid = sig.recovery;\n    return { signature: output(out, 64, sig.toCompactRawBytes()), recid };\n}\nexport function ecdsaRecover(signature, recid, msgHash, compressed = true, out) {\n    assertBytes(msgHash, 32);\n    assertBool(compressed);\n    const sign = getSignature(signature);\n    const point = sign.addRecoveryBit(recid).recoverPublicKey(msgHash);\n    return output(out, compressed ? 33 : 65, point.toRawBytes(compressed));\n}\nexport function ecdsaVerify(signature, msgHash, publicKey) {\n    assertBytes(signature, 64);\n    assertBytes(msgHash, 32);\n    assertBytes(publicKey, 33, 65);\n    assertBytes(signature, 64);\n    const r = bytesToNumber(signature.slice(0, 32));\n    const s = bytesToNumber(signature.slice(32, 64));\n    if (r >= ORDER || s >= ORDER) {\n        throw new Error(\"Cannot parse signature\");\n    }\n    const pub = Point.fromHex(publicKey); // can throw error\n    pub; // typescript\n    let sig;\n    try {\n        sig = getSignature(signature);\n    }\n    catch (error) {\n        return false;\n    }\n    return secp256k1.verify(sig, msgHash, publicKey);\n}\nexport function privateKeyTweakAdd(privateKey, tweak) {\n    assertBytes(privateKey, 32);\n    assertBytes(tweak, 32);\n    let t = bytesToNumber(tweak);\n    if (t === 0n) {\n        throw new Error(\"Tweak must not be zero\");\n    }\n    if (t >= ORDER) {\n        throw new Error(\"Tweak bigger than curve order\");\n    }\n    t += bytesToNumber(privateKey);\n    if (t >= ORDER) {\n        t -= ORDER;\n    }\n    if (t === 0n) {\n        throw new Error(\"The tweak was out of range or the resulted private key is invalid\");\n    }\n    privateKey.set(hexToBytes(numberToHex(t)));\n    return privateKey;\n}\nexport function privateKeyNegate(privateKey) {\n    assertBytes(privateKey, 32);\n    const bn = mod(-bytesToNumber(privateKey), ORDER);\n    privateKey.set(hexToBytes(numberToHex(bn)));\n    return privateKey;\n}\nexport function publicKeyNegate(publicKey, compressed = true, out) {\n    assertBytes(publicKey, 33, 65);\n    assertBool(compressed);\n    const point = Point.fromHex(publicKey).negate();\n    return output(out, compressed ? 33 : 65, point.toRawBytes(compressed));\n}\nexport function publicKeyCombine(publicKeys, compressed = true, out) {\n    if (!Array.isArray(publicKeys) || !publicKeys.length) {\n        throw new TypeError(`Expected array with one or more items, not ${publicKeys}`);\n    }\n    for (const publicKey of publicKeys) {\n        assertBytes(publicKey, 33, 65);\n    }\n    assertBool(compressed);\n    const combined = publicKeys\n        .map((pub) => Point.fromHex(pub))\n        .reduce((res, curr) => res.add(curr), Point.ZERO);\n    // Prohibit returning ZERO point\n    if (combined.equals(Point.ZERO)) {\n        throw new Error(\"Combined result must not be zero\");\n    }\n    return output(out, compressed ? 33 : 65, combined.toRawBytes(compressed));\n}\nexport function publicKeyTweakAdd(publicKey, tweak, compressed = true, out) {\n    assertBytes(publicKey, 33, 65);\n    assertBytes(tweak, 32);\n    assertBool(compressed);\n    const p1 = Point.fromHex(publicKey);\n    const p2 = Point.fromPrivateKey(tweak);\n    const point = p1.add(p2);\n    if (p2.equals(Point.ZERO) || point.equals(Point.ZERO)) {\n        throw new Error(\"Tweak must not be zero\");\n    }\n    return output(out, compressed ? 33 : 65, point.toRawBytes(compressed));\n}\nexport function publicKeyTweakMul(publicKey, tweak, compressed = true, out) {\n    assertBytes(publicKey, 33, 65);\n    assertBytes(tweak, 32);\n    assertBool(compressed);\n    const bn = bytesToNumber(tweak);\n    if (bn === 0n) {\n        throw new Error(\"Tweak must not be zero\");\n    }\n    if (bn <= 1 || bn >= ORDER) {\n        throw new Error(\"Tweak is zero or bigger than curve order\");\n    }\n    const point = Point.fromHex(publicKey).multiply(bn);\n    return output(out, compressed ? 33 : 65, point.toRawBytes(compressed));\n}\nexport function privateKeyTweakMul(privateKey, tweak) {\n    assertBytes(privateKey, 32);\n    assertBytes(tweak, 32);\n    const bn = bytesToNumber(tweak);\n    if (bn <= 1 || bn >= ORDER) {\n        throw new Error(\"Tweak is zero or bigger than curve order\");\n    }\n    const res = mod(bn * bytesToNumber(privateKey), ORDER);\n    if (res === 0n) {\n        throw new Error(\"The tweak was out of range or the resulted private key is invalid\");\n    }\n    privateKey.set(hexToBytes(numberToHex(res)));\n    return privateKey;\n}\n// internal -> DER\nexport function signatureExport(signature, out) {\n    const res = getSignature(signature).toDERRawBytes();\n    return output(out, 72, res.slice()).slice(0, res.length);\n}\n// DER -> internal\nexport function signatureImport(signature, out) {\n    assertBytes(signature);\n    const sig = secp256k1.Signature.fromDER(signature);\n    return output(out, 64, hexToBytes(sig.toCompactHex()));\n}\nexport function signatureNormalize(signature) {\n    const res = getSignature(signature);\n    if (res.s > ORDER / 2n) {\n        signature.set(numberToBytes(ORDER - res.s), 32);\n    }\n    return signature;\n}\nexport function ecdh(publicKey, privateKey, options = {}, out) {\n    assertBytes(publicKey, 33, 65);\n    assertBytes(privateKey, 32);\n    if (typeof options !== \"object\" || options === null) {\n        throw new TypeError(\"secp256k1.ecdh: options should be object\");\n    }\n    if (options.data !== undefined) {\n        assertBytes(options.data);\n    }\n    const point = Point.fromHex(secp256k1.getSharedSecret(privateKey, publicKey));\n    if (options.hashfn === undefined) {\n        return output(out, 32, sha256(point.toRawBytes(true)));\n    }\n    if (typeof options.hashfn !== \"function\") {\n        throw new TypeError(\"secp256k1.ecdh: options.hashfn should be function\");\n    }\n    if (options.xbuf !== undefined) {\n        assertBytes(options.xbuf, 32);\n    }\n    if (options.ybuf !== undefined) {\n        assertBytes(options.ybuf, 32);\n    }\n    assertBytes(out, 32);\n    const { x, y } = point.toAffine();\n    const xbuf = options.xbuf || new Uint8Array(32);\n    xbuf.set(numberToBytes(x));\n    const ybuf = options.ybuf || new Uint8Array(32);\n    ybuf.set(numberToBytes(y));\n    const hash = options.hashfn(xbuf, ybuf, options.data);\n    if (!(hash instanceof Uint8Array) || hash.length !== 32) {\n        throw new Error(\"secp256k1.ecdh: invalid options.hashfn output\");\n    }\n    return output(out, 32, hash);\n}\nexport function contextRandomize(seed) {\n    if (seed !== null) {\n        assertBytes(seed, 32);\n    }\n    // There is no context to randomize\n}\n","import { createEIP712, generateFee, generateMessage, generateTypes } from '@/messages';\nimport { typeWrapper } from '@/messages/utils';\nimport { arrayify, hexlify } from '@ethersproject/bytes';\nimport { signTypedData, SignTypedDataVersion } from '@metamask/eth-sig-util';\nimport { publicKeyCreate } from 'ethereum-cryptography/secp256k1-compat';\nimport { BroadcastOptions, makeCosmsPubKey } from '..';\n\n/**\n * @priKey 0x prefix\n */\nexport const getPubKeyByPriKey = (priKey: string) => {\n  const privateKeyBytes = arrayify(priKey);\n  const publicKeyBytes = publicKeyCreate(privateKeyBytes);\n  const pk = hexlify(arrayify(publicKeyBytes));\n  const pubKey = makeCosmsPubKey(pk);\n  return pubKey;\n};\n\nexport const createEIP712Data = (\n  chainId: string,\n  accountNumber: string,\n  sequence: string,\n  typeUrl: string,\n  MsgSDKTypeEIP712: object,\n  MsgSDK: object,\n  txOption: BroadcastOptions,\n) => {\n  const { gasLimit, gasPrice, denom, payer, granter } = txOption;\n  const fee = generateFee(\n    String(BigInt(gasLimit) * BigInt(gasPrice)),\n    denom,\n    String(gasLimit),\n    payer,\n    granter,\n  );\n  const wrapperTypes = generateTypes(MsgSDKTypeEIP712);\n  const wrapperMsg = typeWrapper(typeUrl, MsgSDK);\n  const messages = generateMessage(accountNumber, sequence, chainId, '', fee, wrapperMsg, '0');\n  return createEIP712(wrapperTypes, chainId, messages);\n};\n\nexport const signEIP712Data = (\n  chainId: string,\n  accountNumber: string,\n  sequence: string,\n  typeUrl: string,\n  MsgSDKTypeEIP712: object,\n  MsgSDK: object,\n  txOption: BroadcastOptions,\n) => {\n  const data = createEIP712Data(\n    chainId,\n    accountNumber,\n    sequence,\n    typeUrl,\n    MsgSDKTypeEIP712,\n    MsgSDK,\n    txOption,\n  );\n\n  if (!txOption.privateKey) {\n    throw new Error('private key is required');\n  }\n\n  return signTypedData({\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    data,\n    version: SignTypedDataVersion.V4,\n    privateKey: Buffer.from(arrayify(txOption.privateKey)),\n  });\n};\n","import { PubKey } from '@bnb-chain/greenfield-cosmos-types/cosmos/crypto/secp256k1/keys';\nimport { arrayify } from '@ethersproject/bytes';\nimport { computePublicKey, recoverPublicKey } from '@ethersproject/signing-key';\nimport { SignTypedDataVersion, TypedDataUtils } from '@metamask/eth-sig-util';\nimport { ISignature712 } from '.';\n\n/**\n * recover public key from signature\n *\n * @messageHash message hash\n * @signature message signature\n *\n * @returns uncompressed public key\n */\nexport const recoverPk = ({ messageHash, signature }: ISignature712) => {\n  const uncompressedPubKey = recoverPublicKey(messageHash, signature);\n  return computePublicKey(uncompressedPubKey, true);\n};\n\n/**\n * @pk compressed public key from signature\n * @return eg. { typeUrl: '/ethermint.crypto.v1.ethsecp256k1.PubKey', value: 'CiEC+hp2uVKio9T7x0goOPyHgwUYiRsZ8MeYUrfRX8MxrzM=' }\n */\nexport const makeCosmsPubKey = (pk: string) => {\n  const pubKey = PubKey.fromPartial({\n    key: arrayify(pk),\n  });\n\n  return {\n    typeUrl: '/cosmos.crypto.eth.ethsecp256k1.PubKey',\n    value: PubKey.encode(pubKey).finish(),\n  };\n};\n\nexport const eip712Hash = (message: string) => {\n  return TypedDataUtils.eip712Hash(JSON.parse(message), SignTypedDataVersion.V4);\n};\n","import { ISignature712 } from '.';\nimport { eip712Hash } from './pubKey';\n\n/**\n * @addr wallet address\n * @message sign typed v4 data\n */\nexport const sign712Tx = async (addr: string, message: string): Promise<ISignature712> => {\n  // TODO: eth-sig-utils\n  /* eslint-disable @typescript-eslint/no-explicit-any */\n  const signature = await (window as any).ethereum?.request({\n    method: 'eth_signTypedData_v4',\n    params: [addr, message],\n  });\n\n  const messageHash = eip712Hash(message);\n\n  return {\n    signature,\n    messageHash,\n  };\n};\n\nexport const defaultSignTypedData = async (addr: string, message: string) => {\n  const signature = await (window as any).ethereum?.request({\n    method: 'eth_signTypedData_v4',\n    params: [addr, message],\n  });\n  return signature;\n};\n","import { SimulateResponse } from '@bnb-chain/greenfield-cosmos-types/cosmos/tx/v1beta1/service';\nimport { formatEther } from '@ethersproject/units';\nimport { ISimulateGasFee } from '..';\n\nexport const getGasFeeBySimulate = (\n  simulateTxInfo: SimulateResponse,\n  denom = 'BNB',\n): ISimulateGasFee => {\n  if (!simulateTxInfo.gasInfo) throw new Error('gasInfo not found');\n\n  const gasLimit = BigInt(simulateTxInfo.gasInfo?.gasUsed.toNumber());\n  const gasPrice = simulateTxInfo.gasInfo?.minGasPrice.replace(denom, '');\n  const gasFee = gasLimit * BigInt(gasPrice);\n\n  return {\n    gasLimit,\n    gasPrice,\n    gasFee: formatEther(String(gasFee)),\n  };\n};\n","import { QueryClientImpl as AuthQueryClientImpl } from '@bnb-chain/greenfield-cosmos-types/cosmos/auth/v1beta1/query';\nimport { QueryClientImpl as BankQueryClientImpl } from '@bnb-chain/greenfield-cosmos-types/cosmos/bank/v1beta1/query';\nimport { QueryClientImpl as CrosschainQueryClientImpl } from '@bnb-chain/greenfield-cosmos-types/cosmos/crosschain/v1/query';\nimport { MsgClientImpl } from '@bnb-chain/greenfield-cosmos-types/cosmos/distribution/v1beta1/tx';\nimport { QueryClientImpl as FeeGrantQueryClientImpl } from '@bnb-chain/greenfield-cosmos-types/cosmos/feegrant/v1beta1/query';\nimport { QueryClientImpl as GashubClientImpl } from '@bnb-chain/greenfield-cosmos-types/cosmos/gashub/v1beta1/query';\nimport { QueryClientImpl as OracleQueryClientImpl } from '@bnb-chain/greenfield-cosmos-types/cosmos/oracle/v1/query';\nimport { QueryClientImpl as StakingQueryClientImpl } from '@bnb-chain/greenfield-cosmos-types/cosmos/staking/v1beta1/query';\nimport { QueryClientImpl as BridgeQueryClientImpl } from '@bnb-chain/greenfield-cosmos-types/greenfield/bridge/query';\nimport { QueryClientImpl as ChallengeQueryClientImpl } from '@bnb-chain/greenfield-cosmos-types/greenfield/challenge/query';\nimport { QueryClientImpl as PaymentQueryClientImpl } from '@bnb-chain/greenfield-cosmos-types/greenfield/payment/query';\nimport { QueryClientImpl as SpQueryClientImpl } from '@bnb-chain/greenfield-cosmos-types/greenfield/sp/query';\nimport { QueryClientImpl as StorageQueryClientImpl } from '@bnb-chain/greenfield-cosmos-types/greenfield/storage/query';\nimport { QueryClientImpl as VirtualGroupClientImpl } from '@bnb-chain/greenfield-cosmos-types/greenfield/virtualgroup/query';\nimport {\n  AuthExtension,\n  BankExtension,\n  createProtobufRpcClient,\n  ProtobufRpcClient,\n  QueryClient,\n  setupAuthExtension,\n  setupAuthzExtension,\n  setupBankExtension,\n  setupDistributionExtension,\n  setupFeegrantExtension,\n  setupGovExtension,\n  setupIbcExtension,\n  setupMintExtension,\n  setupSlashingExtension,\n  setupStakingExtension,\n  setupTxExtension,\n  TxExtension,\n} from '@cosmjs/stargate';\nimport { AuthzExtension } from '@cosmjs/stargate/build/modules/authz/queries';\nimport { Tendermint37Client } from '@cosmjs/tendermint-rpc';\nimport { inject, injectable } from 'tsyringe';\n\n@injectable()\nexport class RpcQueryClient {\n  constructor(@inject('RPC_URL') private rpcUrl: string) {\n    this.rpcUrl = rpcUrl;\n  }\n\n  private rpcClient: ProtobufRpcClient | null = null;\n  public async getRpcClient() {\n    if (!this.rpcClient) {\n      this.rpcClient = await makeRpcClient(this.rpcUrl);\n    }\n    return this.rpcClient;\n  }\n\n  private txQueryClient:\n    | (QueryClient & BankExtension & TxExtension & AuthExtension & AuthzExtension)\n    | null = null;\n  public async getQueryClient() {\n    if (!this.txQueryClient) {\n      const [client] = await makeClientWithExtension(this.rpcUrl);\n      this.txQueryClient = client;\n    }\n    return this.txQueryClient;\n  }\n\n  public async getAuthQueryClient() {\n    const rpcClient = await this.getRpcClient();\n    return new AuthQueryClientImpl(rpcClient);\n  }\n\n  public async getBankQueryClient() {\n    const rpcClient = await this.getRpcClient();\n    return new BankQueryClientImpl(rpcClient);\n  }\n\n  public async getPaymentQueryClient() {\n    const rpcClient = await this.getRpcClient();\n    return new PaymentQueryClientImpl(rpcClient);\n  }\n\n  public async getSpQueryClient() {\n    const rpcClient = await this.getRpcClient();\n    return new SpQueryClientImpl(rpcClient);\n  }\n\n  public async getChallengeQueryClient() {\n    const rpcClient = await this.getRpcClient();\n    return new ChallengeQueryClientImpl(rpcClient);\n  }\n\n  public async getCrosschainQueryClient() {\n    const rpcClient = await this.getRpcClient();\n    return new CrosschainQueryClientImpl(rpcClient);\n  }\n\n  public async getOracleQueryClient() {\n    const rpcClient = await this.getRpcClient();\n    return new OracleQueryClientImpl(rpcClient);\n  }\n\n  public async getBridgeQueryClient() {\n    const rpcClient = await this.getRpcClient();\n    return new BridgeQueryClientImpl(rpcClient);\n  }\n\n  public async getFeeGrantQueryClient() {\n    const rpcClient = await this.getRpcClient();\n    return new FeeGrantQueryClientImpl(rpcClient);\n  }\n\n  public async getStorageQueryClient() {\n    const rpcClient = await this.getRpcClient();\n    return new StorageQueryClientImpl(rpcClient);\n  }\n\n  public async getMsgClient() {\n    const rpcClient = await this.getRpcClient();\n    return new MsgClientImpl(rpcClient);\n  }\n\n  public async getGashubClient() {\n    const rpcClient = await this.getRpcClient();\n    return new GashubClientImpl(rpcClient);\n  }\n\n  public async getVirtualGroupClient() {\n    const rpcClient = await this.getRpcClient();\n    return new VirtualGroupClientImpl(rpcClient);\n  }\n\n  public async getStakingClient() {\n    const rpcClient = await this.getRpcClient();\n    return new StakingQueryClientImpl(rpcClient);\n  }\n}\n\nexport const makeClientWithExtension = async (\n  rpcUrl: string,\n): Promise<\n  [QueryClient & BankExtension & TxExtension & AuthExtension & AuthzExtension, Tendermint37Client]\n> => {\n  const tmClient = await Tendermint37Client.connect(rpcUrl);\n  return [\n    QueryClient.withExtensions(\n      tmClient,\n      setupAuthExtension,\n      setupAuthzExtension,\n      setupBankExtension,\n      setupDistributionExtension,\n      setupFeegrantExtension,\n      setupGovExtension,\n      setupIbcExtension,\n      setupMintExtension,\n      setupSlashingExtension,\n      setupStakingExtension,\n      setupTxExtension,\n    ),\n    tmClient,\n  ];\n};\n\nexport const makeRpcClient = async (rpcUrl: string) => {\n  const [, tmClient] = await makeClientWithExtension(rpcUrl);\n  const rpc = createProtobufRpcClient(new QueryClient(tmClient));\n  return rpc;\n};\n","export const MsgSendTypeUrl = '/cosmos.bank.v1beta1.MsgSend';\nexport const MsgMultiSendTypeUrl = '/cosmos.bank.v1beta1.MsgMultiSend';\nexport const MsgClaimTypeUrl = '/cosmos.oracle.v1.MsgClaim';\nexport const MsgGrantAllowanceTypeUrl = '/cosmos.feegrant.v1beta1.MsgGrantAllowance';\nexport const MsgRevokeAllowanceTypeUrl = '/cosmos.feegrant.v1beta1.MsgRevokeAllowance';\nexport const MsgTransferOutTypeUrl = '/greenfield.bridge.MsgTransferOut';\nexport const MsgAttestTypeUrl = '/greenfield.challenge.MsgAttest';\nexport const MsgSubmitTypeUrl = '/greenfield.challenge.MsgSubmit';\nexport const MsgCreatePaymentAccountTypeUrl = '/greenfield.payment.MsgCreatePaymentAccount';\nexport const MsgDepositTypeUrl = '/greenfield.payment.MsgDeposit';\nexport const MsgDisableRefundTypeUrl = '/greenfield.payment.MsgDisableRefund';\nexport const MsgWithdrawTypeUrl = '/greenfield.payment.MsgWithdraw';\nexport const MsgCancelCreateObjectTypeUrl = '/greenfield.storage.MsgCancelCreateObject';\nexport const MsgMigrateBucketTypeUrl = '/greenfield.storage.MsgMigrateBucket';\nexport const MsgCancelMigrateBucketTypeUrl = '/greenfield.storage.MsgCancelMigrateBucket';\nexport const MsgCreateBucketTypeUrl = '/greenfield.storage.MsgCreateBucket';\nexport const MsgCreateGroupTypeUrl = '/greenfield.storage.MsgCreateGroup';\nexport const MsgCreateObjectTypeUrl = '/greenfield.storage.MsgCreateObject';\nexport const MsgDeleteBucketTypeUrl = '/greenfield.storage.MsgDeleteBucket';\nexport const MsgDeleteGroupTypeUrl = '/greenfield.storage.MsgDeleteGroup';\nexport const MsgDeleteObjectTypeUrl = '/greenfield.storage.MsgDeleteObject';\nexport const MsgDeletePolicyTypeUrl = '/greenfield.storage.MsgDeletePolicy';\nexport const MsgSetTagTypeUrl = '/greenfield.storage.MsgSetTag';\nexport const MsgToggleSPAsDelegatedAgentTypeUrl = '/greenfield.storage.MsgToggleSPAsDelegatedAgent';\nexport const MsgLeaveGroupTypeUrl = '/greenfield.storage.MsgLeaveGroup';\nexport const MsgMirrorBucketTypeUrl = '/greenfield.storage.MsgMirrorBucket';\nexport const MsgMirrorGroupTypeUrl = '/greenfield.storage.MsgMirrorGroup';\nexport const MsgMirrorObjectTypeUrl = '/greenfield.storage.MsgMirrorObject';\nexport const MsgPutPolicyTypeUrl = '/greenfield.storage.MsgPutPolicy';\nexport const MsgUpdateBucketInfoTypeUrl = '/greenfield.storage.MsgUpdateBucketInfo';\nexport const MsgUpdateGroupExtraTypeUrl = '/greenfield.storage.MsgUpdateGroupExtra';\nexport const MsgUpdateGroupMemberTypeUrl = '/greenfield.storage.MsgUpdateGroupMember';\nexport const MsgUpdateObjectInfoTypeUrl = '/greenfield.storage.MsgUpdateObjectInfo';\nexport const BasicAllowanceTypeUrl = '/cosmos.feegrant.v1beta1.BasicAllowance';\nexport const AllowedMsgAllowanceTypeUrl = '/cosmos.feegrant.v1beta1.AllowedMsgAllowance';\nexport const MsgEditValidatorTypeUrl = '/cosmos.staking.v1beta1.MsgEditValidator';\nexport const MsgCreateValidatorTypeUrl = '/cosmos.staking.v1beta1.MsgCreateValidator';\nexport const MsgVoteTypeUrl = '/cosmos.gov.v1.MsgVote';\nexport const MsgSetBucketFlowRateLimitTypeUrl = '/greenfield.storage.MsgSetBucketFlowRateLimit';\nexport const MsgSubmitProposalTypeUrl = '/cosmos.gov.v1.MsgSubmitProposal';\nexport const MsgWithdrawDelegatorRewardTypeUrl =\n  '/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward';\nexport const MsgSetWithdrawAddressTypeUrl = '/cosmos.distribution.v1beta1.MsgSetWithdrawAddress';\nexport const MsgWithdrawValidatorCommissionTypeUrl =\n  '/cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission';\nexport const MsgFundCommunityPoolTypeUrl = '/cosmos.distribution.v1beta1.MsgFundCommunityPool';\nexport const MsgSettleTypeUrl = '/greenfield.virtualgroup.MsgSettle';\n","export const EMPTY_STRING_SHA256 =\n  'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855';\nexport const NORMAL_ERROR_CODE = 404;\nexport const METHOD_GET = 'GET';\nexport const METHOD_POST = 'POST';\nexport const METHOD_PUT = 'PUT';\n\n// SPECIAL ERROR CODE\nexport const SP_NOT_AVAILABLE_ERROR_CODE = 429;\n\n// SPECIAL ERROR MESSAGE\nexport const SP_NOT_AVAILABLE_ERROR_MSG = 'SP not available';\n","export * from './typeUrl';\nexport * from './http';\n\nexport const ZERO_PUBKEY = '0x000000000000000000000000000000000000000000000000000000000000000000';\nexport const DEFAULT_DENOM = 'BNB';\n\n// 32 MB\nexport const DEFAULT_PART_SIZE = 1024 * 1024 * 32;\n","import { Account } from '@/api/account';\nimport { getPubKeyByPriKey } from '@/keymanage';\nimport { defaultSignTypedData } from '@/sign/signTx';\nimport { getGasFeeBySimulate } from '@/utils/units';\nimport { BaseAccount } from '@bnb-chain/greenfield-cosmos-types/cosmos/auth/v1beta1/auth';\nimport { Coin } from '@bnb-chain/greenfield-cosmos-types/cosmos/base/v1beta1/coin';\nimport {\n  ServiceClientImpl,\n  SimulateRequest,\n} from '@bnb-chain/greenfield-cosmos-types/cosmos/tx/v1beta1/service';\nimport {\n  AuthInfo,\n  Tx,\n  TxBody,\n  TxRaw,\n} from '@bnb-chain/greenfield-cosmos-types/cosmos/tx/v1beta1/tx';\nimport { makeAuthInfoBytes } from '@cosmjs/proto-signing';\nimport { DeliverTxResponse, StargateClient } from '@cosmjs/stargate';\nimport { Tendermint37Client } from '@cosmjs/tendermint-rpc';\nimport { arrayify, hexlify } from '@ethersproject/bytes';\nimport { signTypedData, SignTypedDataVersion } from '@metamask/eth-sig-util';\nimport { container, inject, injectable } from 'tsyringe';\nimport {\n  assertPrivateKey,\n  BroadcastOptions,\n  CustomTx,\n  ISimulateGasFee,\n  MetaTxInfo,\n  SignOptions,\n  SimulateOptions,\n  TxResponse,\n} from '..';\nimport { RpcQueryClient } from './queryclient';\nimport { DEFAULT_DENOM, ZERO_PUBKEY } from '../constants';\nimport {\n  createEIP712,\n  generateFee,\n  generateMessage,\n  generateTypes,\n  mergeMultiEip712,\n  mergeMultiMessage,\n} from '../messages';\nimport { convertAnyTypeData, findAnyType, generateMsg } from '../messages/utils';\nimport { eip712Hash, makeCosmsPubKey, recoverPk } from '../sign';\n\nexport interface ITxClient {\n  /**\n   * simulates a transaction containing the provided messages on the chain.\n    The function returns a pointer to a ISimulateGasFee\n   */\n  simulateRawTx(\n    txBodyBytes: Uint8Array,\n    accountInfo: BaseAccount,\n    txOption: SimulateOptions,\n  ): Promise<ISimulateGasFee>;\n\n  /**\n   * broadcasts a transaction containing the provided messages to the chain.\n    The function returns a pointer to a BroadcastTxResponse and any error that occurred during the operation.\n   */\n  broadcastRawTx(txRawBytes: Uint8Array): Promise<DeliverTxResponse>;\n\n  tx(\n    typeUrl: MetaTxInfo['typeUrl'],\n    address: MetaTxInfo['address'],\n    MsgSDKTypeEIP712: MetaTxInfo['MsgSDKTypeEIP712'],\n    MsgSDK: MetaTxInfo['MsgSDK'],\n    msgBytes: MetaTxInfo['msgBytes'],\n  ): Promise<TxResponse>;\n\n  txRaw({\n    address,\n    txRawHex,\n    eip712MsgType,\n    msgData,\n  }: CustomTx): Promise<Omit<TxResponse, 'metaTxInfo'>>;\n\n  /**\n   *\n   */\n  multiTx(txResList: Pick<TxResponse, 'metaTxInfo'>[]): Promise<Omit<TxResponse, 'metaTxInfo'>>;\n}\n\n@injectable()\nexport class TxClient implements ITxClient {\n  public rpcUrl: string;\n  public chainId: string;\n  constructor(@inject('RPC_URL') rpcUrl: string, @inject('CHAIN_ID') chainId: string) {\n    this.rpcUrl = rpcUrl;\n    this.chainId = chainId;\n  }\n\n  private account: Account = container.resolve(Account);\n  private rpcQueryClient = container.resolve(RpcQueryClient);\n\n  public async tx(\n    typeUrl: MetaTxInfo['typeUrl'],\n    address: MetaTxInfo['address'],\n    MsgSDKTypeEIP712: MetaTxInfo['MsgSDKTypeEIP712'],\n    MsgSDK: MetaTxInfo['MsgSDK'],\n    msgBytes: MetaTxInfo['msgBytes'],\n  ) {\n    const txBodyBytes = this.getBodyBytes([\n      {\n        typeUrl,\n        msgBytes,\n      },\n    ]);\n\n    const tx = await this.multiTx([\n      {\n        metaTxInfo: {\n          typeUrl,\n          address,\n          MsgSDKTypeEIP712,\n          MsgSDK,\n          msgBytes,\n          bodyBytes: txBodyBytes,\n        },\n      },\n    ]);\n\n    return {\n      simulate: tx.simulate,\n      broadcast: tx.broadcast,\n      metaTxInfo: {\n        typeUrl,\n        address,\n        MsgSDKTypeEIP712,\n        MsgSDK,\n        msgBytes,\n        bodyBytes: txBodyBytes,\n      },\n    };\n  }\n\n  public async txRaw({\n    address,\n    txRawHex,\n    eip712MsgType,\n    msgData,\n  }: CustomTx): Promise<Omit<TxResponse, 'metaTxInfo'>> {\n    const accountInfo = await this.account.getAccount(address);\n    const txRawBytes = arrayify(txRawHex);\n    const txRawData = TxRaw.decode(txRawBytes);\n\n    return {\n      simulate: async (opts: SimulateOptions) => {\n        return await this.simulateRawTx(txRawData.bodyBytes, accountInfo, opts);\n      },\n      broadcast: async (opts: BroadcastOptions) => {\n        const {\n          denom,\n          gasLimit,\n          gasPrice,\n          payer,\n          granter,\n          privateKey,\n          signTypedDataCallback = defaultSignTypedData,\n        } = opts;\n\n        const fee = generateFee(\n          String(BigInt(gasLimit) * BigInt(gasPrice)),\n          denom,\n          String(gasLimit),\n          payer,\n          granter,\n        );\n        // console.log('eip712MsgType', eip712MsgType);\n        const wrapperTypes = generateTypes(eip712MsgType);\n\n        // find type any and convert\n        const anyFields = findAnyType(msgData);\n        // console.log('anyFields', anyFields);\n        const convertedMsg = convertAnyTypeData(msgData, anyFields);\n\n        const messages = generateMessage(\n          accountInfo.accountNumber.toString(),\n          accountInfo.sequence.toString(),\n          this.chainId,\n          '',\n          fee,\n          convertedMsg,\n          '0',\n        );\n\n        const eip712 = createEIP712(wrapperTypes, this.chainId, messages);\n        // console.log('eip712', eip712);\n        const { pubKey, signature } = privateKey\n          ? this.getSignByPriKey(eip712, privateKey)\n          : await this.getSignByWallet(eip712, accountInfo.address, signTypedDataCallback);\n\n        const authInfoBytes = this.getAuthInfoBytes({\n          denom,\n          sequence: accountInfo.sequence + '',\n          gasLimit,\n          gasPrice,\n          pubKey,\n          granter,\n          payer,\n        });\n\n        const txRaw = TxRaw.fromPartial({\n          bodyBytes: txRawData.bodyBytes,\n          authInfoBytes,\n          signatures: [arrayify(signature)],\n        });\n        const txBytes = TxRaw.encode(txRaw).finish();\n\n        // console.log('txBytes', hexlify(txBytes));\n        return await this.broadcastRawTx(txBytes);\n      },\n    };\n  }\n\n  private getBodyBytes(params: { typeUrl: string; msgBytes: Uint8Array }[]) {\n    const multiMsgBytes = params.map((tx) => {\n      return generateMsg(tx.typeUrl, tx.msgBytes);\n    });\n\n    const txBody = TxBody.fromPartial({\n      messages: multiMsgBytes,\n    });\n    const txBodyBytes = TxBody.encode(txBody).finish();\n    return txBodyBytes;\n  }\n\n  private getSignByPriKey(\n    eip712: ReturnType<typeof createEIP712>,\n    privateKey: SignOptions['privateKey'],\n  ) {\n    assertPrivateKey(privateKey);\n\n    const pubKey = getPubKeyByPriKey(privateKey);\n    const signature = signTypedData({\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      data: eip712,\n      version: SignTypedDataVersion.V4,\n      privateKey: Buffer.from(arrayify(privateKey)),\n    });\n\n    return {\n      pubKey,\n      signature,\n    };\n  }\n\n  private async getSignByWallet(\n    eip712: ReturnType<typeof createEIP712>,\n    address: string,\n    signTypedDataCallback: SignOptions['signTypedDataCallback'],\n  ) {\n    const signature = await signTypedDataCallback(address, JSON.stringify(eip712));\n    const messageHash = eip712Hash(JSON.stringify(eip712));\n    // console.log('eip712 hash', hexlify(messageHash));\n\n    const pk = recoverPk({\n      signature,\n      messageHash,\n    });\n    const pubKey = makeCosmsPubKey(pk);\n\n    return {\n      pubKey,\n      signature,\n    };\n  }\n\n  private getAuthInfoBytes(\n    params: Pick<BroadcastOptions, 'denom' | 'gasLimit' | 'gasPrice' | 'granter' | 'payer'> & {\n      pubKey: BaseAccount['pubKey'];\n      sequence: string;\n    },\n  ) {\n    const { pubKey, denom = DEFAULT_DENOM, sequence, gasLimit, gasPrice, granter, payer } = params;\n    if (!pubKey) throw new Error('pubKey is required');\n\n    const feeAmount: Coin[] = [\n      {\n        denom,\n        amount: String(BigInt(gasLimit) * BigInt(gasPrice)),\n      },\n    ];\n\n    const authInfoBytes = makeAuthInfoBytes(\n      [{ pubkey: pubKey, sequence: Number(sequence) }],\n      feeAmount,\n      gasLimit,\n      granter,\n      payer,\n      // @ts-ignore\n      712,\n    );\n\n    return authInfoBytes;\n  }\n\n  public async simulateRawTx(\n    txBodyBytes: Uint8Array,\n    accountInfo: BaseAccount,\n    options: SimulateOptions,\n  ) {\n    const rpcClient = await this.rpcQueryClient.getRpcClient();\n    const rpc = new ServiceClientImpl(rpcClient);\n\n    const { denom } = options;\n    const authInfoBytes = this.getAuthInfoBytes({\n      sequence: accountInfo.sequence + '',\n      denom,\n      gasLimit: 0,\n      gasPrice: '0',\n      pubKey: makeCosmsPubKey(ZERO_PUBKEY),\n      granter: '',\n      payer: '',\n    });\n    const tx = Tx.fromPartial({\n      authInfo: AuthInfo.decode(authInfoBytes),\n      body: TxBody.decode(txBodyBytes),\n      signatures: [Uint8Array.from([])],\n    });\n\n    const request = SimulateRequest.fromPartial({\n      txBytes: Tx.encode(tx).finish(),\n    });\n\n    const res = await rpc.Simulate(request);\n    return getGasFeeBySimulate(res, denom);\n  }\n\n  public async broadcastRawTx(txRawBytes: Uint8Array) {\n    const tmClient = await Tendermint37Client.connect(this.rpcUrl);\n\n    const client = await StargateClient.create(tmClient);\n    return await client.broadcastTx(txRawBytes);\n  }\n\n  public async multiTx(txResList: Pick<TxResponse, 'metaTxInfo'>[]) {\n    const txs = txResList.map((txRes) => txRes.metaTxInfo);\n    const accountInfo = await this.account.getAccount(txs[0].address);\n    const txBodyBytes = this.getBodyBytes(txs);\n\n    return {\n      simulate: async (opts: SimulateOptions) => {\n        return await this.simulateRawTx(txBodyBytes, accountInfo, opts);\n      },\n      broadcast: async (opts: BroadcastOptions) => {\n        const {\n          denom,\n          gasLimit,\n          gasPrice,\n          payer,\n          granter,\n          privateKey,\n          signTypedDataCallback = defaultSignTypedData,\n        } = opts;\n\n        const types = mergeMultiEip712(txs.map((tx) => tx.MsgSDKTypeEIP712));\n        const fee = generateFee(\n          String(BigInt(gasLimit) * BigInt(gasPrice)),\n          denom,\n          String(gasLimit),\n          payer,\n          granter,\n        );\n        const wrapperTypes = generateTypes(types);\n        const multiMessages = mergeMultiMessage(txs);\n        const messages = generateMessage(\n          accountInfo.accountNumber.toString(),\n          accountInfo.sequence.toString(),\n          this.chainId,\n          '',\n          fee,\n          multiMessages,\n          '0',\n        );\n\n        const eip712 = createEIP712(wrapperTypes, this.chainId, messages);\n        // console.log('eip712', eip712);\n\n        const { pubKey, signature } = privateKey\n          ? this.getSignByPriKey(eip712, privateKey)\n          : await this.getSignByWallet(eip712, accountInfo.address, signTypedDataCallback);\n\n        const authInfoBytes = this.getAuthInfoBytes({\n          denom,\n          sequence: accountInfo.sequence + '',\n          gasLimit,\n          gasPrice,\n          pubKey,\n          granter,\n          payer,\n        });\n\n        const txRaw = TxRaw.fromPartial({\n          bodyBytes: txBodyBytes,\n          authInfoBytes,\n          signatures: [arrayify(signature)],\n        });\n        const txBytes = TxRaw.encode(txRaw).finish();\n\n        // console.log('txBytes', hexlify(txBytes));\n        return await this.broadcastRawTx(txBytes);\n      },\n    };\n  }\n}\n","export const MsgMultiSendSDKTypeEIP712 = {\n  Msg1: [\n    {\n      name: 'type',\n      type: 'string',\n    },\n    {\n      name: 'inputs',\n      type: 'TypeMsg1Inputs[]',\n    },\n    {\n      name: 'outputs',\n      type: 'TypeMsg1Outputs[]',\n    },\n  ],\n  TypeMsg1Inputs: [\n    {\n      name: 'address',\n      type: 'string',\n    },\n    {\n      name: 'coins',\n      type: 'TypeMsg1InputsCoins[]',\n    },\n  ],\n  TypeMsg1InputsCoins: [\n    {\n      name: 'denom',\n      type: 'string',\n    },\n    {\n      name: 'amount',\n      type: 'string',\n    },\n  ],\n  TypeMsg1Outputs: [\n    {\n      name: 'address',\n      type: 'string',\n    },\n    {\n      name: 'coins',\n      type: 'TypeMsg1OutputsCoins[]',\n    },\n  ],\n  TypeMsg1OutputsCoins: [\n    {\n      name: 'denom',\n      type: 'string',\n    },\n    {\n      name: 'amount',\n      type: 'string',\n    },\n  ],\n};\n","export const MsgSendSDKTypeEIP712 = {\n  Msg1: [\n    {\n      name: 'type',\n      type: 'string',\n    },\n    {\n      name: 'from_address',\n      type: 'string',\n    },\n    {\n      name: 'to_address',\n      type: 'string',\n    },\n    {\n      name: 'amount',\n      type: 'TypeMsg1Amount[]',\n    },\n  ],\n  TypeMsg1Amount: [\n    {\n      name: 'denom',\n      type: 'string',\n    },\n    {\n      name: 'amount',\n      type: 'string',\n    },\n  ],\n};\n","export const MsgCreatePaymentAccountSDKTypeEIP712 = {\n  Msg1: [\n    {\n      name: 'type',\n      type: 'string',\n    },\n    {\n      name: 'creator',\n      type: 'string',\n    },\n  ],\n};\n","import { TxClient } from '../clients/txClient';\nimport { MsgMultiSendSDKTypeEIP712 } from '../messages/bank/MsgMultiSend';\nimport { MsgSendSDKTypeEIP712 } from '../messages/bank/MsgSend';\nimport { MsgCreatePaymentAccountSDKTypeEIP712 } from '../messages/greenfield/payment/MsgCreatePaymentAccount';\nimport { BaseAccount } from '@bnb-chain/greenfield-cosmos-types/cosmos/auth/v1beta1/auth';\nimport {\n  QueryModuleAccountByNameResponse,\n  QueryModuleAccountsResponse,\n} from '@bnb-chain/greenfield-cosmos-types/cosmos/auth/v1beta1/query';\nimport {\n  QueryBalanceRequest,\n  QueryBalanceResponse,\n} from '@bnb-chain/greenfield-cosmos-types/cosmos/bank/v1beta1/query';\nimport { MsgMultiSend, MsgSend } from '@bnb-chain/greenfield-cosmos-types/cosmos/bank/v1beta1/tx';\nimport { QueryPaymentAccountsByOwnerResponse } from '@bnb-chain/greenfield-cosmos-types/greenfield/payment/query';\nimport { MsgCreatePaymentAccount } from '@bnb-chain/greenfield-cosmos-types/greenfield/payment/tx';\nimport { container, delay, inject, injectable } from 'tsyringe';\nimport {\n  MsgCreatePaymentAccountTypeUrl,\n  MsgMultiSendTypeUrl,\n  MsgSendTypeUrl,\n  TxResponse,\n} from '..';\nimport { RpcQueryClient } from '../clients/queryclient';\n\nexport interface IAccount {\n  /**\n   * retrieves account information for a given address.\n   */\n  getAccount(address: string): Promise<BaseAccount>;\n\n  /**\n   * retrieves balance information of an account for a given address.\n   */\n  getAccountBalance(request: QueryBalanceRequest): Promise<QueryBalanceResponse>;\n\n  /**\n   * Get all module accounts.\n   */\n  getModuleAccounts(): Promise<QueryModuleAccountsResponse>;\n\n  /**\n   * Get module account by module name.\n   */\n  getModuleAccountByName(name: string): Promise<QueryModuleAccountByNameResponse>;\n\n  /**\n   * Get all payment accounts owned by the given owner address.\n   */\n  getPaymentAccountsByOwner(owner: string): Promise<QueryPaymentAccountsByOwnerResponse>;\n\n  /**\n   * Create a new payment account for the given address.\n   */\n  createPaymentAccount(msg: MsgCreatePaymentAccount): Promise<TxResponse>;\n\n  /**\n   * Transfer function\n   */\n  transfer(msg: MsgSend): Promise<TxResponse>;\n\n  /**\n   * makes transfers from an account to multiple accounts with respect amounts\n   */\n  multiTransfer(address: string, msg: MsgMultiSend): Promise<TxResponse>;\n}\n\n@injectable()\nexport class Account implements IAccount {\n  constructor(@inject(delay(() => TxClient)) private txClient: TxClient) {}\n\n  private queryClient = container.resolve(RpcQueryClient);\n\n  public async multiTransfer(address: string, msg: MsgMultiSend) {\n    return await this.txClient.tx(\n      MsgMultiSendTypeUrl,\n      address,\n      MsgMultiSendSDKTypeEIP712,\n      MsgMultiSend.toSDK(msg),\n      MsgMultiSend.encode(msg).finish(),\n    );\n  }\n\n  public async createPaymentAccount(msg: MsgCreatePaymentAccount) {\n    return await this.txClient.tx(\n      MsgCreatePaymentAccountTypeUrl,\n      msg.creator,\n      MsgCreatePaymentAccountSDKTypeEIP712,\n      MsgCreatePaymentAccount.toSDK(msg),\n      MsgCreatePaymentAccount.encode(msg).finish(),\n    );\n  }\n\n  public async getPaymentAccountsByOwner(owner: string) {\n    const rpc = await this.queryClient.getPaymentQueryClient();\n    return await rpc.PaymentAccountsByOwner({\n      owner,\n    });\n  }\n\n  public async getModuleAccountByName(name: string) {\n    const rpc = await this.queryClient.getAuthQueryClient();\n    return rpc.ModuleAccountByName({\n      name,\n    });\n  }\n\n  public async getModuleAccounts() {\n    const rpc = await this.queryClient.getAuthQueryClient();\n    return await rpc.ModuleAccounts();\n  }\n\n  public async getAccountBalance(request: QueryBalanceRequest): Promise<QueryBalanceResponse> {\n    const rpc = await this.queryClient.getBankQueryClient();\n    return await rpc.Balance(request);\n  }\n\n  public async getAccount(address: string): Promise<BaseAccount> {\n    const client = await this.queryClient.getQueryClient();\n    const account = await client.auth.account(address);\n    if (!account) return BaseAccount.fromJSON({});\n\n    return BaseAccount.toJSON(BaseAccount.decode(account.value)) as BaseAccount;\n  }\n\n  public async transfer(msg: MsgSend) {\n    return await this.txClient.tx(\n      MsgSendTypeUrl,\n      msg.fromAddress,\n      MsgSendSDKTypeEIP712,\n      MsgSend.toSDK(msg),\n      MsgSend.encode(msg).finish(),\n    );\n  }\n}\n","import {\n  GetBlockByHeightResponse,\n  GetLatestBlockResponse,\n  GetLatestValidatorSetRequest,\n  GetNodeInfoResponse,\n  ServiceClientImpl as tdServiceClientImpl,\n} from '@bnb-chain/greenfield-cosmos-types/cosmos/base/tendermint/v1beta1/query';\nimport Long from 'long';\nimport { container, injectable } from 'tsyringe';\nimport { RpcQueryClient } from '../clients/queryclient';\n\nexport interface IBasic {\n  /**\n   * returns the current node info of the greenfield that the client is connected to.\n   */\n  getNodeInfo(): Promise<GetNodeInfoResponse>;\n\n  /**\n   * retrieves the latest block from the chain.\n   */\n  getLatestBlock(): Promise<GetLatestBlockResponse>;\n\n  /**\n   * retrieves the height of the latest block from the chain.\n   * returns the block height and any error that occurred during the operation.\n   */\n  getLatestBlockHeight(): Promise<number>;\n\n  /**\n   * retrieves the syncing status of the node. If true, means the node is catching up the latest block.\n   * The function returns a boolean indicating whether the node is syncing and any error that occurred during the operation.\n   */\n  getSyncing(): Promise<boolean>;\n\n  /**\n   * GetBlockByHeight retrieves the block at the given height from the chain.\n   * The function returns a pointer to a Block object and any error that occurred during the operation.\n   */\n  getBlockByHeight(height: number): Promise<GetBlockByHeightResponse>;\n\n  /**\n   * retrieves the latest validator set from the chain.\n   * The function returns the block height of the validator set\n   */\n  GetLatestValidatorSet(request: GetLatestValidatorSetRequest): Promise<number>;\n}\n\n@injectable()\nexport class Basic implements IBasic {\n  private rpcQueryClient = container.resolve(RpcQueryClient);\n\n  public async getNodeInfo() {\n    const rpcClient = await this.rpcQueryClient.getRpcClient();\n    const rpc = new tdServiceClientImpl(rpcClient);\n    return await rpc.GetNodeInfo();\n  }\n\n  public async getLatestBlock(): Promise<GetLatestBlockResponse> {\n    const rpcClient = await this.rpcQueryClient.getRpcClient();\n    const rpc = new tdServiceClientImpl(rpcClient);\n    return await rpc.GetLatestBlock();\n  }\n\n  public async getLatestBlockHeight(): Promise<number> {\n    const latestBlock = await this.getLatestBlock();\n    const height = latestBlock.sdkBlock?.header?.height;\n    if (!height) return 0;\n    return height.toNumber();\n  }\n\n  public async getSyncing(): Promise<boolean> {\n    const rpcClient = await this.rpcQueryClient.getRpcClient();\n    const rpc = new tdServiceClientImpl(rpcClient);\n    const syncing = await rpc.GetSyncing();\n    return syncing.syncing;\n  }\n\n  public async getBlockByHeight(height: number): Promise<GetBlockByHeightResponse> {\n    const rpcClient = await this.rpcQueryClient.getRpcClient();\n    const rpc = new tdServiceClientImpl(rpcClient);\n    return await rpc.GetBlockByHeight({\n      height: Long.fromInt(height),\n    });\n  }\n\n  public async GetLatestValidatorSet(request: GetLatestValidatorSetRequest): Promise<number> {\n    const rpcClient = await this.rpcQueryClient.getRpcClient();\n    const rpc = new tdServiceClientImpl(rpcClient);\n    const validatorSet = await rpc.GetLatestValidatorSet(request);\n    return validatorSet.blockHeight.toNumber();\n  }\n}\n","export const MsgTransferOutSDKTypeEIP712 = {\n  Msg1: [\n    {\n      name: 'type',\n      type: 'string',\n    },\n    {\n      name: 'from',\n      type: 'string',\n    },\n    {\n      name: 'to',\n      type: 'string',\n    },\n    {\n      name: 'amount',\n      type: 'TypeMsg1Amount',\n    },\n  ],\n  TypeMsg1Amount: [\n    {\n      name: 'denom',\n      type: 'string',\n    },\n    {\n      name: 'amount',\n      type: 'string',\n    },\n  ],\n};\n","export const MsgAttestSDKTypeEIP712 = {\n  Msg1: [\n    {\n      name: 'type',\n      type: 'string',\n    },\n    {\n      name: 'submitter',\n      type: 'string',\n    },\n    {\n      name: 'challenge_id',\n      type: 'uint64',\n    },\n    {\n      name: 'object_id',\n      type: 'string',\n    },\n    {\n      name: 'sp_operator_address',\n      type: 'string',\n    },\n    {\n      name: 'vote_result',\n      type: 'string',\n    },\n    {\n      name: 'challenger_address',\n      type: 'string',\n    },\n  ],\n};\n","export const MsgSubmitSDKTypeEIP712 = {\n  Msg1: [\n    {\n      name: 'type',\n      type: 'string',\n    },\n    {\n      name: 'challenger',\n      type: 'string',\n    },\n    {\n      name: 'sp_operator_address',\n      type: 'string',\n    },\n    {\n      name: 'bucket_name',\n      type: 'string',\n    },\n    {\n      name: 'object_name',\n      type: 'string',\n    },\n    {\n      name: 'segment_index',\n      type: 'uint32',\n    },\n    {\n      name: 'random_index',\n      type: 'bool',\n    },\n  ],\n};\n","export const MsgDepositSDKTypeEIP712 = {\n  Msg1: [\n    {\n      name: 'type',\n      type: 'string',\n    },\n    {\n      name: 'creator',\n      type: 'string',\n    },\n    {\n      name: 'to',\n      type: 'string',\n    },\n    {\n      name: 'amount',\n      type: 'string',\n    },\n  ],\n};\n","export const MsgDisableRefundSDKTypeEIP712 = {\n  Msg1: [\n    {\n      name: 'type',\n      type: 'string',\n    },\n    {\n      name: 'owner',\n      type: 'string',\n    },\n    {\n      name: 'addr',\n      type: 'string',\n    },\n  ],\n};\n","export const MsgWithdrawSDKTypeEIP712 = {\n  Msg1: [\n    {\n      name: 'type',\n      type: 'string',\n    },\n    {\n      name: 'creator',\n      type: 'string',\n    },\n    {\n      name: 'from',\n      type: 'string',\n    },\n    {\n      name: 'amount',\n      type: 'string',\n    },\n  ],\n};\n","export const MsgCancelCreateObjectSDKTypeEIP712 = {\n  Msg1: [\n    {\n      name: 'type',\n      type: 'string',\n    },\n    {\n      name: 'operator',\n      type: 'string',\n    },\n    {\n      name: 'bucket_name',\n      type: 'string',\n    },\n    {\n      name: 'object_name',\n      type: 'string',\n    },\n  ],\n};\n","export const MsgCreateBucketSDKTypeEIP712 = {\n  Msg1: [\n    {\n      name: 'bucket_name',\n      type: 'string',\n    },\n    {\n      name: 'charged_read_quota',\n      type: 'uint64',\n    },\n    {\n      name: 'creator',\n      type: 'string',\n    },\n    {\n      name: 'payment_address',\n      type: 'string',\n    },\n    {\n      name: 'primary_sp_address',\n      type: 'string',\n    },\n    {\n      name: 'primary_sp_approval',\n      type: 'TypeMsg1PrimarySpApproval',\n    },\n    {\n      name: 'type',\n      type: 'string',\n    },\n    {\n      name: 'visibility',\n      type: 'string',\n    },\n  ],\n  TypeMsg1PrimarySpApproval: [\n    {\n      name: 'expired_height',\n      type: 'uint64',\n    },\n    {\n      name: 'global_virtual_group_family_id',\n      type: 'uint32',\n    },\n    // {\n    //   name: 'sig',\n    //   type: 'bytes',\n    // },\n  ],\n};\n","export const MsgCreateGroupSDKTypeEIP712 = {\n  Msg1: [\n    {\n      name: 'creator',\n      type: 'string',\n    },\n    {\n      name: 'extra',\n      type: 'string',\n    },\n    {\n      name: 'group_name',\n      type: 'string',\n    },\n    {\n      name: 'type',\n      type: 'string',\n    },\n  ],\n};\n","export const MsgCreateObjectSDKTypeEIP712 = {\n  Msg1: [\n    {\n      name: 'bucket_name',\n      type: 'string',\n    },\n    {\n      name: 'content_type',\n      type: 'string',\n    },\n    {\n      name: 'creator',\n      type: 'string',\n    },\n    {\n      name: 'expect_checksums',\n      type: 'bytes[]',\n    },\n    {\n      name: 'object_name',\n      type: 'string',\n    },\n    {\n      name: 'payload_size',\n      type: 'uint64',\n    },\n    {\n      name: 'primary_sp_approval',\n      type: 'TypeMsg1PrimarySpApproval',\n    },\n    {\n      name: 'redundancy_type',\n      type: 'string',\n    },\n    {\n      name: 'type',\n      type: 'string',\n    },\n    {\n      name: 'visibility',\n      type: 'string',\n    },\n  ],\n  TypeMsg1PrimarySpApproval: [\n    {\n      name: 'expired_height',\n      type: 'uint64',\n    },\n    {\n      name: 'global_virtual_group_family_id',\n      type: 'uint32',\n    },\n    // {\n    //   name: 'sig',\n    //   type: 'bytes',\n    // },\n  ],\n};\n","export const MsgDeleteBucketSDKTypeEIP712 = {\n  Msg1: [\n    {\n      name: 'type',\n      type: 'string',\n    },\n    {\n      name: 'operator',\n      type: 'string',\n    },\n    {\n      name: 'bucket_name',\n      type: 'string',\n    },\n  ],\n};\n","export const MsgDeleteGroupSDKTypeEIP712 = {\n  Msg1: [\n    {\n      name: 'type',\n      type: 'string',\n    },\n    {\n      name: 'operator',\n      type: 'string',\n    },\n    {\n      name: 'group_name',\n      type: 'string',\n    },\n  ],\n};\n","export const MsgDeleteObjectSDKTypeEIP712 = {\n  Msg1: [\n    {\n      name: 'type',\n      type: 'string',\n    },\n    {\n      name: 'operator',\n      type: 'string',\n    },\n    {\n      name: 'bucket_name',\n      type: 'string',\n    },\n    {\n      name: 'object_name',\n      type: 'string',\n    },\n  ],\n};\n","export const MsgDeletePolicySDKTypeEIP712 = {\n  Msg1: [\n    {\n      name: 'type',\n      type: 'string',\n    },\n    {\n      name: 'operator',\n      type: 'string',\n    },\n    {\n      name: 'resource',\n      type: 'string',\n    },\n    {\n      name: 'principal',\n      type: 'TypeMsg1Principal',\n    },\n  ],\n  TypeMsg1Principal: [\n    {\n      name: 'type',\n      type: 'string',\n    },\n    {\n      name: 'value',\n      type: 'string',\n    },\n  ],\n};\n","export const MsgLeaveGroupSDKTypeEIP712 = {\n  Msg1: [\n    {\n      name: 'type',\n      type: 'string',\n    },\n    {\n      name: 'member',\n      type: 'string',\n    },\n    {\n      name: 'group_owner',\n      type: 'string',\n    },\n    {\n      name: 'group_name',\n      type: 'string',\n    },\n  ],\n};\n","export const MsgMigrateBucketSDKTypeEIP712 = {\n  Msg1: [\n    {\n      name: 'bucket_name',\n      type: 'string',\n    },\n    {\n      name: 'dst_primary_sp_approval',\n      type: 'TypeMsg1DstPrimarySpApproval',\n    },\n    {\n      name: 'dst_primary_sp_id',\n      type: 'uint32',\n    },\n    {\n      name: 'operator',\n      type: 'string',\n    },\n    {\n      name: 'type',\n      type: 'string',\n    },\n  ],\n  TypeMsg1DstPrimarySpApproval: [\n    {\n      name: 'expired_height',\n      type: 'uint64',\n    },\n    {\n      name: 'global_virtual_group_family_id',\n      type: 'uint32',\n    },\n    {\n      name: 'sig',\n      type: 'bytes',\n    },\n  ],\n};\n","export const MsgMirrorBucketSDKTypeEIP712 = {\n  Msg1: [\n    {\n      name: 'type',\n      type: 'string',\n    },\n    {\n      name: 'operator',\n      type: 'string',\n    },\n    {\n      name: 'id',\n      type: 'string',\n    },\n    {\n      name: 'bucket_name',\n      type: 'string',\n    },\n  ],\n};\n","export const MsgMirrorGroupSDKTypeEIP712 = {\n  Msg1: [\n    {\n      name: 'dest_chain_id',\n      type: 'uint32',\n    },\n    {\n      name: 'group_name',\n      type: 'string',\n    },\n    {\n      name: 'id',\n      type: 'string',\n    },\n    {\n      name: 'operator',\n      type: 'string',\n    },\n    {\n      name: 'type',\n      type: 'string',\n    },\n  ],\n};\n","export const MsgMirrorObjectSDKTypeEIP712 = {\n  Msg1: [\n    {\n      name: 'type',\n      type: 'string',\n    },\n    {\n      name: 'operator',\n      type: 'string',\n    },\n    {\n      name: 'id',\n      type: 'string',\n    },\n    {\n      name: 'bucket_name',\n      type: 'string',\n    },\n    {\n      name: 'object_name',\n      type: 'string',\n    },\n  ],\n};\n","import type { EIP712Msg } from '@/messages/utils';\nimport cloneDeep from 'lodash.clonedeep';\n\nexport const getMsgPutPolicySDKTypeEIP712 = (resource: string[]) => {\n  const res: EIP712Msg = cloneDeep(MsgPutPolicySDKTypeEIP712);\n\n  if (resource.length !== 0) {\n    res.TypeMsg1Statements.push({\n      name: 'resources',\n      type: 'string[]',\n    });\n  }\n\n  return res;\n};\n\nconst MsgPutPolicySDKTypeEIP712 = {\n  Msg1: [\n    {\n      name: 'type',\n      type: 'string',\n    },\n    {\n      name: 'operator',\n      type: 'string',\n    },\n    {\n      name: 'principal',\n      type: 'TypeMsg1Principal',\n    },\n    {\n      name: 'resource',\n      type: 'string',\n    },\n    {\n      name: 'statements',\n      type: 'TypeMsg1Statements[]',\n    },\n    {\n      name: 'expiration_time',\n      type: 'string',\n    },\n  ],\n  TypeMsg1Principal: [\n    {\n      name: 'type',\n      type: 'string',\n    },\n    {\n      name: 'value',\n      type: 'string',\n    },\n  ],\n  TypeMsg1Statements: [\n    {\n      name: 'actions',\n      type: 'string[]',\n    },\n    {\n      name: 'effect',\n      type: 'string',\n    },\n    {\n      name: 'expiration_time',\n      type: 'string',\n    },\n    // {\n    //   name: 'resources',\n    //   type: 'string[]',\n    // },\n  ],\n};\n","import type { EIP712Msg } from '@/messages/utils';\nimport cloneDeep from 'lodash.clonedeep';\n\nexport const getMsgSetTagSDKTypeEIP712 = (isTagsEmpty: boolean) => {\n  const res: EIP712Msg = cloneDeep(MsgSetTagSDKTypeEIP712);\n\n  if (!isTagsEmpty) {\n    res.Msg1.push({\n      name: 'tags',\n      type: 'TypeMsg1Tags',\n    });\n\n    res.TypeMsg1Tags = [\n      {\n        name: 'tags',\n        type: 'TypeMsg1TagsTags[]',\n      },\n    ];\n    res.TypeMsg1TagsTags = [\n      {\n        name: 'key',\n        type: 'string',\n      },\n      {\n        name: 'value',\n        type: 'string',\n      },\n    ];\n  } else {\n    res.Msg1.push({\n      name: 'tags',\n      type: 'TypeMsg1Tags',\n    });\n\n    res.TypeMsg1Tags = [\n      {\n        name: 'tags',\n        type: 'string[]',\n      },\n    ];\n  }\n\n  return res;\n};\n\nconst MsgSetTagSDKTypeEIP712 = {\n  Msg1: [\n    {\n      name: 'operator',\n      type: 'string',\n    },\n    {\n      name: 'resource',\n      type: 'string',\n    },\n    {\n      name: 'type',\n      type: 'string',\n    },\n  ],\n};\n","export const MsgToggleSPAsDelegatedAgentSDKTypeEIP712 = {\n  Msg1: [\n    {\n      name: 'bucket_name',\n      type: 'string',\n    },\n    {\n      name: 'operator',\n      type: 'string',\n    },\n    {\n      name: 'type',\n      type: 'string',\n    },\n  ],\n};\n","export const MsgUpdateBucketInfoSDKTypeEIP712 = {\n  Msg1: [\n    {\n      name: 'type',\n      type: 'string',\n    },\n    {\n      name: 'operator',\n      type: 'string',\n    },\n    {\n      name: 'bucket_name',\n      type: 'string',\n    },\n    {\n      name: 'charged_read_quota',\n      type: 'TypeMsg1ChargedReadQuota',\n    },\n    {\n      name: 'payment_address',\n      type: 'string',\n    },\n    {\n      name: 'visibility',\n      type: 'string',\n    },\n  ],\n  TypeMsg1ChargedReadQuota: [\n    {\n      name: 'value',\n      type: 'uint64',\n    },\n  ],\n};\n","export const MsgUpdateGroupExtraSDKTypeEIP712 = {\n  Msg1: [\n    {\n      name: 'type',\n      type: 'string',\n    },\n    {\n      name: 'operator',\n      type: 'string',\n    },\n    {\n      name: 'group_owner',\n      type: 'string',\n    },\n    {\n      name: 'group_name',\n      type: 'string',\n    },\n    {\n      name: 'extra',\n      type: 'string',\n    },\n  ],\n};\n","import type { EIP712Msg } from '@/messages/utils';\nimport { MsgGroupMember } from '@bnb-chain/greenfield-cosmos-types/greenfield/storage/tx';\nimport cloneDeep from 'lodash.clonedeep';\n\nexport const getMsgUpdateGroupMemberSDKTypeEIP712 = ({\n  membersToAdd,\n  membersToDelete,\n}: {\n  membersToAdd: MsgGroupMember[];\n  membersToDelete: string[];\n}) => {\n  const res: EIP712Msg = cloneDeep(MsgUpdateGroupMemberSDKTypeEIP712);\n\n  if (membersToAdd.length > 0) {\n    res.Msg1.push({\n      name: 'members_to_add',\n      type: 'TypeMsg1MembersToAdd[]',\n    });\n    res.TypeMsg1MembersToAdd = [\n      {\n        name: 'expiration_time',\n        type: 'string',\n      },\n      {\n        name: 'member',\n        type: 'string',\n      },\n    ];\n  }\n\n  if (membersToDelete.length > 0) {\n    res.Msg1.push({\n      name: 'members_to_delete',\n      type: 'string[]',\n    });\n  }\n\n  return res;\n};\n\nconst MsgUpdateGroupMemberSDKTypeEIP712 = {\n  Msg1: [\n    {\n      name: 'group_name',\n      type: 'string',\n    },\n    {\n      name: 'group_owner',\n      type: 'string',\n    },\n    // {\n    //   name: 'members_to_add',\n    //   type: 'TypeMsg1MembersToAdd[]',\n    // },\n    // {\n    //   name: 'members_to_delete',\n    //   type: 'string[]',\n    // },\n    {\n      name: 'operator',\n      type: 'string',\n    },\n    {\n      name: 'type',\n      type: 'string',\n    },\n  ],\n  // TypeMsg1MembersToAdd: [\n  //   {\n  //     name: 'expiration_time',\n  //     type: 'string',\n  //   },\n  //   {\n  //     name: 'member',\n  //     type: 'string',\n  //   },\n  // ],\n};\n","export const MsgUpdateObjectInfoSDKTypeEIP712 = {\n  Msg1: [\n    {\n      name: 'type',\n      type: 'string',\n    },\n    {\n      name: 'operator',\n      type: 'string',\n    },\n    {\n      name: 'bucket_name',\n      type: 'string',\n    },\n    {\n      name: 'object_name',\n      type: 'string',\n    },\n    {\n      name: 'visibility',\n      type: 'string',\n    },\n  ],\n};\n","export const MsgSetBucketFlowRateLimitSDKTypeEIP712 = {\n  Msg1: [\n    {\n      name: 'bucket_name',\n      type: 'string',\n    },\n    {\n      name: 'bucket_owner',\n      type: 'string',\n    },\n    {\n      name: 'flow_rate_limit',\n      type: 'string',\n    },\n    {\n      name: 'operator',\n      type: 'string',\n    },\n    {\n      name: 'payment_address',\n      type: 'string',\n    },\n    {\n      name: 'type',\n      type: 'string',\n    },\n  ],\n};\n","import { NodeFile, UploadFile } from '@/types/sp/Common';\nimport { AuthType } from '../..';\n\nexport const assertStringRequire = (s: string, errMsg: string) => {\n  if (!s) throw new Error(errMsg);\n};\n\nexport const assertPrivateKey = (privateKey: string) => {\n  if (!privateKey.startsWith('0x')) throw new Error('private key should start with 0x');\n};\n\nexport const assertAuthType = (authType: AuthType) => {\n  if (!authType) throw new Error('authType is required');\n\n  if (authType.type === 'ECDSA') {\n    assertPrivateKey(authType.privateKey);\n  }\n\n  if (authType.type === 'EDDSA') {\n    assertStringRequire(authType.address, 'address param is required');\n    assertStringRequire(authType.seed, 'seed param is required');\n    assertStringRequire(authType.domain, 'domain param is required');\n  }\n};\n\nexport function assertFileType(file: UploadFile): file is NodeFile {\n  if ('content' in file) {\n    return true;\n  }\n\n  return false;\n}\n\nexport function assertHttpMethod(method?: string): asserts method is 'GET' | 'POST' | 'PUT' {\n  if (method !== 'GET' && method !== 'POST' && method !== 'PUT')\n    throw new Error('method should be GET, POST or PUT');\n}\n","/**\n * Internal assertion helpers.\n * @module\n */\n/** Asserts something is positive integer. */\nfunction anumber(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error('positive integer expected, got ' + n);\n}\n/** Is number an Uint8Array? Copied from utils for perf. */\nfunction isBytes(a) {\n    return a instanceof Uint8Array || (ArrayBuffer.isView(a) && a.constructor.name === 'Uint8Array');\n}\n/** Asserts something is Uint8Array. */\nfunction abytes(b, ...lengths) {\n    if (!isBytes(b))\n        throw new Error('Uint8Array expected');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new Error('Uint8Array expected of length ' + lengths + ', got length=' + b.length);\n}\n/** Asserts something is hash */\nfunction ahash(h) {\n    if (typeof h !== 'function' || typeof h.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    anumber(h.outputLen);\n    anumber(h.blockLen);\n}\n/** Asserts a hash instance has not been destroyed / finished */\nfunction aexists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\n/** Asserts output is properly-sized byte array */\nfunction aoutput(out, instance) {\n    abytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error('digestInto() expects output buffer of length at least ' + min);\n    }\n}\nexport { anumber, abytes, ahash, aexists, aoutput };\n//# sourceMappingURL=_assert.js.map","export const crypto = typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\n//# sourceMappingURL=crypto.js.map","/**\n * Utilities for hex, bytes, CSPRNG.\n * @module\n */\n/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated (2025-04-30), we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\nimport { abytes } from './_assert.js';\n// export { isBytes } from './_assert.js';\n// We can't reuse isBytes from _assert, because somehow this causes huge perf issues\nexport function isBytes(a) {\n    return a instanceof Uint8Array || (ArrayBuffer.isView(a) && a.constructor.name === 'Uint8Array');\n}\n// Cast array to different type\nexport function u8(arr) {\n    return new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\n}\nexport function u32(arr) {\n    return new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n}\n// Cast array to view\nexport function createView(arr) {\n    return new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n}\n/** The rotate right (circular right shift) operation for uint32 */\nexport function rotr(word, shift) {\n    return (word << (32 - shift)) | (word >>> shift);\n}\n/** The rotate left (circular left shift) operation for uint32 */\nexport function rotl(word, shift) {\n    return (word << shift) | ((word >>> (32 - shift)) >>> 0);\n}\n/** Is current platform little-endian? Most are. Big-Endian platform: IBM */\nexport const isLE = /* @__PURE__ */ (() => new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44)();\n// The byte swap operation for uint32\nexport function byteSwap(word) {\n    return (((word << 24) & 0xff000000) |\n        ((word << 8) & 0xff0000) |\n        ((word >>> 8) & 0xff00) |\n        ((word >>> 24) & 0xff));\n}\n/** Conditionally byte swap if on a big-endian platform */\nexport const byteSwapIfBE = isLE\n    ? (n) => n\n    : (n) => byteSwap(n);\n/** In place byte swap for Uint32Array */\nexport function byteSwap32(arr) {\n    for (let i = 0; i < arr.length; i++) {\n        arr[i] = byteSwap(arr[i]);\n    }\n}\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * Convert byte array to hex string.\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes) {\n    abytes(bytes);\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, A: 65, F: 70, a: 97, f: 102 };\nfunction asciiToBase16(ch) {\n    if (ch >= asciis._0 && ch <= asciis._9)\n        return ch - asciis._0; // '2' => 50-48\n    if (ch >= asciis.A && ch <= asciis.F)\n        return ch - (asciis.A - 10); // 'B' => 66-(65-10)\n    if (ch >= asciis.a && ch <= asciis.f)\n        return ch - (asciis.a - 10); // 'b' => 98-(97-10)\n    return;\n}\n/**\n * Convert hex string to byte array.\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    const hl = hex.length;\n    const al = hl / 2;\n    if (hl % 2)\n        throw new Error('hex string expected, got unpadded hex of length ' + hl);\n    const array = new Uint8Array(al);\n    for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n        const n1 = asciiToBase16(hex.charCodeAt(hi));\n        const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n        if (n1 === undefined || n2 === undefined) {\n            const char = hex[hi] + hex[hi + 1];\n            throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n        }\n        array[ai] = n1 * 16 + n2; // multiply first octet, e.g. 'a3' => 10*16+3 => 160 + 3 => 163\n    }\n    return array;\n}\n/**\n * There is no setImmediate in browser and setTimeout is slow.\n * Call of async fn will return Promise, which will be fullfiled only on\n * next scheduler queue processing step and this is exactly what we need.\n */\nexport const nextTick = async () => { };\n/** Returns control to thread each 'tick' ms to avoid blocking. */\nexport async function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await nextTick();\n        ts += diff;\n    }\n}\n/**\n * Convert JS string to byte array.\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error('utf8ToBytes expected string, got ' + typeof str);\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    abytes(data);\n    return data;\n}\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays) {\n    let sum = 0;\n    for (let i = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        abytes(a);\n        sum += a.length;\n    }\n    const res = new Uint8Array(sum);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        res.set(a, pad);\n        pad += a.length;\n    }\n    return res;\n}\n/** For runtime check if class implements interface */\nexport class Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\nexport function checkOpts(defaults, opts) {\n    if (opts !== undefined && {}.toString.call(opts) !== '[object Object]')\n        throw new Error('Options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\n/** Wraps hash function, creating an interface on top of it */\nexport function wrapConstructor(hashCons) {\n    const hashC = (msg) => hashCons().update(toBytes(msg)).digest();\n    const tmp = hashCons();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashCons();\n    return hashC;\n}\nexport function wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nexport function wrapXOFConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\n/** Cryptographically secure PRNG. Uses internal OS-level `crypto.getRandomValues`. */\nexport function randomBytes(bytesLength = 32) {\n    if (crypto && typeof crypto.getRandomValues === 'function') {\n        return crypto.getRandomValues(new Uint8Array(bytesLength));\n    }\n    // Legacy Node.js compatibility\n    if (crypto && typeof crypto.randomBytes === 'function') {\n        return crypto.randomBytes(bytesLength);\n    }\n    throw new Error('crypto.getRandomValues must be defined');\n}\n//# sourceMappingURL=utils.js.map","/**\n * Internal Merkle-Damgard hash utils.\n * @module\n */\nimport { aexists, aoutput } from './_assert.js';\nimport { Hash, createView, toBytes } from './utils.js';\n/** Polyfill for Safari 14. https://caniuse.com/mdn-javascript_builtins_dataview_setbiguint64 */\nexport function setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n/** Choice: a ? b : c */\nexport function Chi(a, b, c) {\n    return (a & b) ^ (~a & c);\n}\n/** Majority function, true if any two inputs is true. */\nexport function Maj(a, b, c) {\n    return (a & b) ^ (a & c) ^ (b & c);\n}\n/**\n * Merkle-Damgard hash construction base class.\n * Could be used to create MD5, RIPEMD, SHA1, SHA2.\n */\nexport class HashMD extends Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = createView(this.buffer);\n    }\n    update(data) {\n        aexists(this);\n        const { view, buffer, blockLen } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = createView(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        aexists(this);\n        aoutput(out, this);\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        this.buffer.subarray(pos).fill(0);\n        // we have less than padOffset left in buffer, so we cannot put length in\n        // current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64 bits of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = createView(out);\n        const len = this.outputLen;\n        // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n        if (len % 4)\n            throw new Error('_sha2: outputLen should be aligned to 32bit');\n        const outLen = len / 4;\n        const state = this.get();\n        if (outLen > state.length)\n            throw new Error('_sha2: outputLen bigger than state');\n        for (let i = 0; i < outLen; i++)\n            oview.setUint32(4 * i, state[i], isLE);\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.length = length;\n        to.pos = pos;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n}\n//# sourceMappingURL=_md.js.map","/**\n * Internal helpers for u64. BigUint64Array is too slow as per 2025, so we implement it using Uint32Array.\n * @todo re-check https://issues.chromium.org/issues/42212588\n * @module\n */\nconst U32_MASK64 = /* @__PURE__ */ BigInt(2 ** 32 - 1);\nconst _32n = /* @__PURE__ */ BigInt(32);\nfunction fromBig(n, le = false) {\n    if (le)\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\nfunction split(lst, le = false) {\n    let Ah = new Uint32Array(lst.length);\n    let Al = new Uint32Array(lst.length);\n    for (let i = 0; i < lst.length; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\nconst toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h, _l, s) => h >>> s;\nconst shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (_h, l) => l;\nconst rotr32L = (h, _l) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\nfunction add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n// prettier-ignore\nexport { fromBig, split, toBig, shrSH, shrSL, rotrSH, rotrSL, rotrBH, rotrBL, rotr32H, rotr32L, rotlSH, rotlSL, rotlBH, rotlBL, add, add3L, add3H, add4L, add4H, add5H, add5L, };\n// prettier-ignore\nconst u64 = {\n    fromBig, split, toBig,\n    shrSH, shrSL,\n    rotrSH, rotrSL, rotrBH, rotrBL,\n    rotr32H, rotr32L,\n    rotlSH, rotlSL, rotlBH, rotlBL,\n    add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n//# sourceMappingURL=_u64.js.map","/**\n * SHA2-512 a.k.a. sha512 and sha384. It is slower than sha256 in js because u64 operations are slow.\n *\n * Check out [RFC 4634](https://datatracker.ietf.org/doc/html/rfc4634) and\n * [the paper on truncated SHA512/256](https://eprint.iacr.org/2010/548.pdf).\n * @module\n */\nimport { HashMD } from './_md.js';\nimport u64 from './_u64.js';\nimport { wrapConstructor } from './utils.js';\n// Round contants (first 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409):\n// prettier-ignore\nconst [SHA512_Kh, SHA512_Kl] = /* @__PURE__ */ (() => u64.split([\n    '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n    '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n    '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n    '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n    '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n    '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n    '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n    '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n    '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n    '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n    '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n    '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n    '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n    '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n    '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n    '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n    '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n    '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n    '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n    '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n))))();\n// Temporary buffer, not used to store anything between runs\nconst SHA512_W_H = /* @__PURE__ */ new Uint32Array(80);\nconst SHA512_W_L = /* @__PURE__ */ new Uint32Array(80);\nexport class SHA512 extends HashMD {\n    constructor() {\n        super(128, 64, 16, false);\n        // We cannot use array here since array allows indexing by variable which means optimizer/compiler cannot use registers.\n        // Also looks cleaner and easier to verify with spec.\n        // Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x6a09e667 | 0;\n        this.Al = 0xf3bcc908 | 0;\n        this.Bh = 0xbb67ae85 | 0;\n        this.Bl = 0x84caa73b | 0;\n        this.Ch = 0x3c6ef372 | 0;\n        this.Cl = 0xfe94f82b | 0;\n        this.Dh = 0xa54ff53a | 0;\n        this.Dl = 0x5f1d36f1 | 0;\n        this.Eh = 0x510e527f | 0;\n        this.El = 0xade682d1 | 0;\n        this.Fh = 0x9b05688c | 0;\n        this.Fl = 0x2b3e6c1f | 0;\n        this.Gh = 0x1f83d9ab | 0;\n        this.Gl = 0xfb41bd6b | 0;\n        this.Hh = 0x5be0cd19 | 0;\n        this.Hl = 0x137e2179 | 0;\n    }\n    // prettier-ignore\n    get() {\n        const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n    }\n    // prettier-ignore\n    set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl) {\n        this.Ah = Ah | 0;\n        this.Al = Al | 0;\n        this.Bh = Bh | 0;\n        this.Bl = Bl | 0;\n        this.Ch = Ch | 0;\n        this.Cl = Cl | 0;\n        this.Dh = Dh | 0;\n        this.Dl = Dl | 0;\n        this.Eh = Eh | 0;\n        this.El = El | 0;\n        this.Fh = Fh | 0;\n        this.Fl = Fl | 0;\n        this.Gh = Gh | 0;\n        this.Gl = Gl | 0;\n        this.Hh = Hh | 0;\n        this.Hl = Hl | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4) {\n            SHA512_W_H[i] = view.getUint32(offset);\n            SHA512_W_L[i] = view.getUint32((offset += 4));\n        }\n        for (let i = 16; i < 80; i++) {\n            // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n            const W15h = SHA512_W_H[i - 15] | 0;\n            const W15l = SHA512_W_L[i - 15] | 0;\n            const s0h = u64.rotrSH(W15h, W15l, 1) ^ u64.rotrSH(W15h, W15l, 8) ^ u64.shrSH(W15h, W15l, 7);\n            const s0l = u64.rotrSL(W15h, W15l, 1) ^ u64.rotrSL(W15h, W15l, 8) ^ u64.shrSL(W15h, W15l, 7);\n            // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n            const W2h = SHA512_W_H[i - 2] | 0;\n            const W2l = SHA512_W_L[i - 2] | 0;\n            const s1h = u64.rotrSH(W2h, W2l, 19) ^ u64.rotrBH(W2h, W2l, 61) ^ u64.shrSH(W2h, W2l, 6);\n            const s1l = u64.rotrSL(W2h, W2l, 19) ^ u64.rotrBL(W2h, W2l, 61) ^ u64.shrSL(W2h, W2l, 6);\n            // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n            const SUMl = u64.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n            const SUMh = u64.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n            SHA512_W_H[i] = SUMh | 0;\n            SHA512_W_L[i] = SUMl | 0;\n        }\n        let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        // Compression function main loop, 80 rounds\n        for (let i = 0; i < 80; i++) {\n            // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n            const sigma1h = u64.rotrSH(Eh, El, 14) ^ u64.rotrSH(Eh, El, 18) ^ u64.rotrBH(Eh, El, 41);\n            const sigma1l = u64.rotrSL(Eh, El, 14) ^ u64.rotrSL(Eh, El, 18) ^ u64.rotrBL(Eh, El, 41);\n            //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n            const CHIl = (El & Fl) ^ (~El & Gl);\n            // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n            // prettier-ignore\n            const T1ll = u64.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n            const T1h = u64.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n            const T1l = T1ll | 0;\n            // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n            const sigma0h = u64.rotrSH(Ah, Al, 28) ^ u64.rotrBH(Ah, Al, 34) ^ u64.rotrBH(Ah, Al, 39);\n            const sigma0l = u64.rotrSL(Ah, Al, 28) ^ u64.rotrBL(Ah, Al, 34) ^ u64.rotrBL(Ah, Al, 39);\n            const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n            const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n            Hh = Gh | 0;\n            Hl = Gl | 0;\n            Gh = Fh | 0;\n            Gl = Fl | 0;\n            Fh = Eh | 0;\n            Fl = El | 0;\n            ({ h: Eh, l: El } = u64.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n            Dh = Ch | 0;\n            Dl = Cl | 0;\n            Ch = Bh | 0;\n            Cl = Bl | 0;\n            Bh = Ah | 0;\n            Bl = Al | 0;\n            const All = u64.add3L(T1l, sigma0l, MAJl);\n            Ah = u64.add3H(All, T1h, sigma0h, MAJh);\n            Al = All | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        ({ h: Ah, l: Al } = u64.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n        ({ h: Bh, l: Bl } = u64.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n        ({ h: Ch, l: Cl } = u64.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n        ({ h: Dh, l: Dl } = u64.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n        ({ h: Eh, l: El } = u64.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n        ({ h: Fh, l: Fl } = u64.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n        ({ h: Gh, l: Gl } = u64.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n        ({ h: Hh, l: Hl } = u64.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n        this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n    }\n    roundClean() {\n        SHA512_W_H.fill(0);\n        SHA512_W_L.fill(0);\n    }\n    destroy() {\n        this.buffer.fill(0);\n        this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n    }\n}\nexport class SHA512_224 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x8c3d37c8 | 0;\n        this.Al = 0x19544da2 | 0;\n        this.Bh = 0x73e19966 | 0;\n        this.Bl = 0x89dcd4d6 | 0;\n        this.Ch = 0x1dfab7ae | 0;\n        this.Cl = 0x32ff9c82 | 0;\n        this.Dh = 0x679dd514 | 0;\n        this.Dl = 0x582f9fcf | 0;\n        this.Eh = 0x0f6d2b69 | 0;\n        this.El = 0x7bd44da8 | 0;\n        this.Fh = 0x77e36f73 | 0;\n        this.Fl = 0x04c48942 | 0;\n        this.Gh = 0x3f9d85a8 | 0;\n        this.Gl = 0x6a1d36c8 | 0;\n        this.Hh = 0x1112e6ad | 0;\n        this.Hl = 0x91d692a1 | 0;\n        this.outputLen = 28;\n    }\n}\nexport class SHA512_256 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x22312194 | 0;\n        this.Al = 0xfc2bf72c | 0;\n        this.Bh = 0x9f555fa3 | 0;\n        this.Bl = 0xc84c64c2 | 0;\n        this.Ch = 0x2393b86b | 0;\n        this.Cl = 0x6f53b151 | 0;\n        this.Dh = 0x96387719 | 0;\n        this.Dl = 0x5940eabd | 0;\n        this.Eh = 0x96283ee2 | 0;\n        this.El = 0xa88effe3 | 0;\n        this.Fh = 0xbe5e1e25 | 0;\n        this.Fl = 0x53863992 | 0;\n        this.Gh = 0x2b0199fc | 0;\n        this.Gl = 0x2c85b8aa | 0;\n        this.Hh = 0x0eb72ddc | 0;\n        this.Hl = 0x81c52ca2 | 0;\n        this.outputLen = 32;\n    }\n}\nexport class SHA384 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0xcbbb9d5d | 0;\n        this.Al = 0xc1059ed8 | 0;\n        this.Bh = 0x629a292a | 0;\n        this.Bl = 0x367cd507 | 0;\n        this.Ch = 0x9159015a | 0;\n        this.Cl = 0x3070dd17 | 0;\n        this.Dh = 0x152fecd8 | 0;\n        this.Dl = 0xf70e5939 | 0;\n        this.Eh = 0x67332667 | 0;\n        this.El = 0xffc00b31 | 0;\n        this.Fh = 0x8eb44a87 | 0;\n        this.Fl = 0x68581511 | 0;\n        this.Gh = 0xdb0c2e0d | 0;\n        this.Gl = 0x64f98fa7 | 0;\n        this.Hh = 0x47b5481d | 0;\n        this.Hl = 0xbefa4fa4 | 0;\n        this.outputLen = 48;\n    }\n}\n/** SHA2-512 hash function. */\nexport const sha512 = /* @__PURE__ */ wrapConstructor(() => new SHA512());\n/** SHA2-512/224 \"truncated\" hash function, with improved resistance to length extension attacks. */\nexport const sha512_224 = /* @__PURE__ */ wrapConstructor(() => new SHA512_224());\n/** SHA2-512/256 \"truncated\" hash function, with improved resistance to length extension attacks. */\nexport const sha512_256 = /* @__PURE__ */ wrapConstructor(() => new SHA512_256());\n/** SHA2-384 hash function. */\nexport const sha384 = /* @__PURE__ */ wrapConstructor(() => new SHA384());\n//# sourceMappingURL=sha512.js.map","/**\n * Hex, bytes and number utilities.\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// 100 lines of code in the file are duplicated from noble-hashes (utils).\n// This is OK: `abstract` directory does not use noble-hashes.\n// User may opt-in into using different hashing library. This way, noble-hashes\n// won't be included into their bundle.\nconst _0n = /* @__PURE__ */ BigInt(0);\nconst _1n = /* @__PURE__ */ BigInt(1);\nconst _2n = /* @__PURE__ */ BigInt(2);\nexport function isBytes(a) {\n    return a instanceof Uint8Array || (ArrayBuffer.isView(a) && a.constructor.name === 'Uint8Array');\n}\nexport function abytes(item) {\n    if (!isBytes(item))\n        throw new Error('Uint8Array expected');\n}\nexport function abool(title, value) {\n    if (typeof value !== 'boolean')\n        throw new Error(title + ' boolean expected, got ' + value);\n}\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes) {\n    abytes(bytes);\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\nexport function numberToHexUnpadded(num) {\n    const hex = num.toString(16);\n    return hex.length & 1 ? '0' + hex : hex;\n}\nexport function hexToNumber(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    return hex === '' ? _0n : BigInt('0x' + hex); // Big Endian\n}\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, A: 65, F: 70, a: 97, f: 102 };\nfunction asciiToBase16(ch) {\n    if (ch >= asciis._0 && ch <= asciis._9)\n        return ch - asciis._0; // '2' => 50-48\n    if (ch >= asciis.A && ch <= asciis.F)\n        return ch - (asciis.A - 10); // 'B' => 66-(65-10)\n    if (ch >= asciis.a && ch <= asciis.f)\n        return ch - (asciis.a - 10); // 'b' => 98-(97-10)\n    return;\n}\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    const hl = hex.length;\n    const al = hl / 2;\n    if (hl % 2)\n        throw new Error('hex string expected, got unpadded hex of length ' + hl);\n    const array = new Uint8Array(al);\n    for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n        const n1 = asciiToBase16(hex.charCodeAt(hi));\n        const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n        if (n1 === undefined || n2 === undefined) {\n            const char = hex[hi] + hex[hi + 1];\n            throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n        }\n        array[ai] = n1 * 16 + n2; // multiply first octet, e.g. 'a3' => 10*16+3 => 160 + 3 => 163\n    }\n    return array;\n}\n// BE: Big Endian, LE: Little Endian\nexport function bytesToNumberBE(bytes) {\n    return hexToNumber(bytesToHex(bytes));\n}\nexport function bytesToNumberLE(bytes) {\n    abytes(bytes);\n    return hexToNumber(bytesToHex(Uint8Array.from(bytes).reverse()));\n}\nexport function numberToBytesBE(n, len) {\n    return hexToBytes(n.toString(16).padStart(len * 2, '0'));\n}\nexport function numberToBytesLE(n, len) {\n    return numberToBytesBE(n, len).reverse();\n}\n// Unpadded, rarely used\nexport function numberToVarBytesBE(n) {\n    return hexToBytes(numberToHexUnpadded(n));\n}\n/**\n * Takes hex string or Uint8Array, converts to Uint8Array.\n * Validates output length.\n * Will throw error for other types.\n * @param title descriptive title for an error e.g. 'private key'\n * @param hex hex string or Uint8Array\n * @param expectedLength optional, will compare to result array's length\n * @returns\n */\nexport function ensureBytes(title, hex, expectedLength) {\n    let res;\n    if (typeof hex === 'string') {\n        try {\n            res = hexToBytes(hex);\n        }\n        catch (e) {\n            throw new Error(title + ' must be hex string or Uint8Array, cause: ' + e);\n        }\n    }\n    else if (isBytes(hex)) {\n        // Uint8Array.from() instead of hash.slice() because node.js Buffer\n        // is instance of Uint8Array, and its slice() creates **mutable** copy\n        res = Uint8Array.from(hex);\n    }\n    else {\n        throw new Error(title + ' must be hex string or Uint8Array');\n    }\n    const len = res.length;\n    if (typeof expectedLength === 'number' && len !== expectedLength)\n        throw new Error(title + ' of length ' + expectedLength + ' expected, got ' + len);\n    return res;\n}\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays) {\n    let sum = 0;\n    for (let i = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        abytes(a);\n        sum += a.length;\n    }\n    const res = new Uint8Array(sum);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        res.set(a, pad);\n        pad += a.length;\n    }\n    return res;\n}\n// Compares 2 u8a-s in kinda constant time\nexport function equalBytes(a, b) {\n    if (a.length !== b.length)\n        return false;\n    let diff = 0;\n    for (let i = 0; i < a.length; i++)\n        diff |= a[i] ^ b[i];\n    return diff === 0;\n}\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error('string expected');\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n// Is positive bigint\nconst isPosBig = (n) => typeof n === 'bigint' && _0n <= n;\nexport function inRange(n, min, max) {\n    return isPosBig(n) && isPosBig(min) && isPosBig(max) && min <= n && n < max;\n}\n/**\n * Asserts min <= n < max. NOTE: It's < max and not <= max.\n * @example\n * aInRange('x', x, 1n, 256n); // would assume x is in (1n..255n)\n */\nexport function aInRange(title, n, min, max) {\n    // Why min <= n < max and not a (min < n < max) OR b (min <= n <= max)?\n    // consider P=256n, min=0n, max=P\n    // - a for min=0 would require -1:          `inRange('x', x, -1n, P)`\n    // - b would commonly require subtraction:  `inRange('x', x, 0n, P - 1n)`\n    // - our way is the cleanest:               `inRange('x', x, 0n, P)\n    if (!inRange(n, min, max))\n        throw new Error('expected valid ' + title + ': ' + min + ' <= n < ' + max + ', got ' + n);\n}\n// Bit operations\n/**\n * Calculates amount of bits in a bigint.\n * Same as `n.toString(2).length`\n */\nexport function bitLen(n) {\n    let len;\n    for (len = 0; n > _0n; n >>= _1n, len += 1)\n        ;\n    return len;\n}\n/**\n * Gets single bit at position.\n * NOTE: first bit position is 0 (same as arrays)\n * Same as `!!+Array.from(n.toString(2)).reverse()[pos]`\n */\nexport function bitGet(n, pos) {\n    return (n >> BigInt(pos)) & _1n;\n}\n/**\n * Sets single bit at position.\n */\nexport function bitSet(n, pos, value) {\n    return n | ((value ? _1n : _0n) << BigInt(pos));\n}\n/**\n * Calculate mask for N bits. Not using ** operator with bigints because of old engines.\n * Same as BigInt(`0b${Array(i).fill('1').join('')}`)\n */\nexport const bitMask = (n) => (_2n << BigInt(n - 1)) - _1n;\n// DRBG\nconst u8n = (data) => new Uint8Array(data); // creates Uint8Array\nconst u8fr = (arr) => Uint8Array.from(arr); // another shortcut\n/**\n * Minimal HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n * @returns function that will call DRBG until 2nd arg returns something meaningful\n * @example\n *   const drbg = createHmacDRBG<Key>(32, 32, hmac);\n *   drbg(seed, bytesToKey); // bytesToKey must return Key or undefined\n */\nexport function createHmacDrbg(hashLen, qByteLen, hmacFn) {\n    if (typeof hashLen !== 'number' || hashLen < 2)\n        throw new Error('hashLen must be a number');\n    if (typeof qByteLen !== 'number' || qByteLen < 2)\n        throw new Error('qByteLen must be a number');\n    if (typeof hmacFn !== 'function')\n        throw new Error('hmacFn must be a function');\n    // Step B, Step C: set hashLen to 8*ceil(hlen/8)\n    let v = u8n(hashLen); // Minimal non-full-spec HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n    let k = u8n(hashLen); // Steps B and C of RFC6979 3.2: set hashLen, in our case always same\n    let i = 0; // Iterations counter, will throw when over 1000\n    const reset = () => {\n        v.fill(1);\n        k.fill(0);\n        i = 0;\n    };\n    const h = (...b) => hmacFn(k, v, ...b); // hmac(k)(v, ...values)\n    const reseed = (seed = u8n()) => {\n        // HMAC-DRBG reseed() function. Steps D-G\n        k = h(u8fr([0x00]), seed); // k = hmac(k || v || 0x00 || seed)\n        v = h(); // v = hmac(k || v)\n        if (seed.length === 0)\n            return;\n        k = h(u8fr([0x01]), seed); // k = hmac(k || v || 0x01 || seed)\n        v = h(); // v = hmac(k || v)\n    };\n    const gen = () => {\n        // HMAC-DRBG generate() function\n        if (i++ >= 1000)\n            throw new Error('drbg: tried 1000 values');\n        let len = 0;\n        const out = [];\n        while (len < qByteLen) {\n            v = h();\n            const sl = v.slice();\n            out.push(sl);\n            len += v.length;\n        }\n        return concatBytes(...out);\n    };\n    const genUntil = (seed, pred) => {\n        reset();\n        reseed(seed); // Steps D-G\n        let res = undefined; // Step H: grind until k is in [1..n-1]\n        while (!(res = pred(gen())))\n            reseed();\n        reset();\n        return res;\n    };\n    return genUntil;\n}\n// Validating curves and fields\nconst validatorFns = {\n    bigint: (val) => typeof val === 'bigint',\n    function: (val) => typeof val === 'function',\n    boolean: (val) => typeof val === 'boolean',\n    string: (val) => typeof val === 'string',\n    stringOrUint8Array: (val) => typeof val === 'string' || isBytes(val),\n    isSafeInteger: (val) => Number.isSafeInteger(val),\n    array: (val) => Array.isArray(val),\n    field: (val, object) => object.Fp.isValid(val),\n    hash: (val) => typeof val === 'function' && Number.isSafeInteger(val.outputLen),\n};\n// type Record<K extends string | number | symbol, T> = { [P in K]: T; }\nexport function validateObject(object, validators, optValidators = {}) {\n    const checkField = (fieldName, type, isOptional) => {\n        const checkVal = validatorFns[type];\n        if (typeof checkVal !== 'function')\n            throw new Error('invalid validator function');\n        const val = object[fieldName];\n        if (isOptional && val === undefined)\n            return;\n        if (!checkVal(val, object)) {\n            throw new Error('param ' + String(fieldName) + ' is invalid. Expected ' + type + ', got ' + val);\n        }\n    };\n    for (const [fieldName, type] of Object.entries(validators))\n        checkField(fieldName, type, false);\n    for (const [fieldName, type] of Object.entries(optValidators))\n        checkField(fieldName, type, true);\n    return object;\n}\n// validate type tests\n// const o: { a: number; b: number; c: number } = { a: 1, b: 5, c: 6 };\n// const z0 = validateObject(o, { a: 'isSafeInteger' }, { c: 'bigint' }); // Ok!\n// // Should fail type-check\n// const z1 = validateObject(o, { a: 'tmp' }, { c: 'zz' });\n// const z2 = validateObject(o, { a: 'isSafeInteger' }, { c: 'zz' });\n// const z3 = validateObject(o, { test: 'boolean', z: 'bug' });\n// const z4 = validateObject(o, { a: 'boolean', z: 'bug' });\n/**\n * throws not implemented error\n */\nexport const notImplemented = () => {\n    throw new Error('not implemented');\n};\n/**\n * Memoizes (caches) computation result.\n * Uses WeakMap: the value is going auto-cleaned by GC after last reference is removed.\n */\nexport function memoized(fn) {\n    const map = new WeakMap();\n    return (arg, ...args) => {\n        const val = map.get(arg);\n        if (val !== undefined)\n            return val;\n        const computed = fn(arg, ...args);\n        map.set(arg, computed);\n        return computed;\n    };\n}\n//# sourceMappingURL=utils.js.map","/**\n * Utils for modular division and finite fields.\n * A finite field over 11 is integer number operations `mod 11`.\n * There is no division: it is replaced by modular multiplicative inverse.\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { bitMask, bytesToNumberBE, bytesToNumberLE, ensureBytes, numberToBytesBE, numberToBytesLE, validateObject, } from './utils.js';\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = /* @__PURE__ */ BigInt(2), _3n = /* @__PURE__ */ BigInt(3);\n// prettier-ignore\nconst _4n = /* @__PURE__ */ BigInt(4), _5n = /* @__PURE__ */ BigInt(5), _8n = /* @__PURE__ */ BigInt(8);\n// prettier-ignore\nconst _9n = /* @__PURE__ */ BigInt(9), _16n = /* @__PURE__ */ BigInt(16);\n// Calculates a modulo b\nexport function mod(a, b) {\n    const result = a % b;\n    return result >= _0n ? result : b + result;\n}\n/**\n * Efficiently raise num to power and do modular division.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n * @todo use field version && remove\n * @example\n * pow(2n, 6n, 11n) // 64n % 11n == 9n\n */\nexport function pow(num, power, modulo) {\n    if (power < _0n)\n        throw new Error('invalid exponent, negatives unsupported');\n    if (modulo <= _0n)\n        throw new Error('invalid modulus');\n    if (modulo === _1n)\n        return _0n;\n    let res = _1n;\n    while (power > _0n) {\n        if (power & _1n)\n            res = (res * num) % modulo;\n        num = (num * num) % modulo;\n        power >>= _1n;\n    }\n    return res;\n}\n/** Does `x^(2^power)` mod p. `pow2(30, 4)` == `30^(2^4)` */\nexport function pow2(x, power, modulo) {\n    let res = x;\n    while (power-- > _0n) {\n        res *= res;\n        res %= modulo;\n    }\n    return res;\n}\n/**\n * Inverses number over modulo.\n * Implemented using [Euclidean GCD](https://brilliant.org/wiki/extended-euclidean-algorithm/).\n */\nexport function invert(number, modulo) {\n    if (number === _0n)\n        throw new Error('invert: expected non-zero number');\n    if (modulo <= _0n)\n        throw new Error('invert: expected positive modulus, got ' + modulo);\n    // Fermat's little theorem \"CT-like\" version inv(n) = n^(m-2) mod m is 30x slower.\n    let a = mod(number, modulo);\n    let b = modulo;\n    // prettier-ignore\n    let x = _0n, y = _1n, u = _1n, v = _0n;\n    while (a !== _0n) {\n        // JIT applies optimization if those two lines follow each other\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        // prettier-ignore\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    const gcd = b;\n    if (gcd !== _1n)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\n/**\n * Tonelli-Shanks square root search algorithm.\n * 1. https://eprint.iacr.org/2012/685.pdf (page 12)\n * 2. Square Roots from 1; 24, 51, 10 to Dan Shanks\n * Will start an infinite loop if field order P is not prime.\n * @param P field order\n * @returns function that takes field Fp (created from P) and number n\n */\nexport function tonelliShanks(P) {\n    // Legendre constant: used to calculate Legendre symbol (a | p),\n    // which denotes the value of a^((p-1)/2) (mod p).\n    // (a | p) ≡ 1    if a is a square (mod p)\n    // (a | p) ≡ -1   if a is not a square (mod p)\n    // (a | p) ≡ 0    if a ≡ 0 (mod p)\n    const legendreC = (P - _1n) / _2n;\n    let Q, S, Z;\n    // Step 1: By factoring out powers of 2 from p - 1,\n    // find q and s such that p - 1 = q*(2^s) with q odd\n    for (Q = P - _1n, S = 0; Q % _2n === _0n; Q /= _2n, S++)\n        ;\n    // Step 2: Select a non-square z such that (z | p) ≡ -1 and set c ≡ zq\n    for (Z = _2n; Z < P && pow(Z, legendreC, P) !== P - _1n; Z++) {\n        // Crash instead of infinity loop, we cannot reasonable count until P.\n        if (Z > 1000)\n            throw new Error('Cannot find square root: likely non-prime P');\n    }\n    // Fast-path\n    if (S === 1) {\n        const p1div4 = (P + _1n) / _4n;\n        return function tonelliFast(Fp, n) {\n            const root = Fp.pow(n, p1div4);\n            if (!Fp.eql(Fp.sqr(root), n))\n                throw new Error('Cannot find square root');\n            return root;\n        };\n    }\n    // Slow-path\n    const Q1div2 = (Q + _1n) / _2n;\n    return function tonelliSlow(Fp, n) {\n        // Step 0: Check that n is indeed a square: (n | p) should not be ≡ -1\n        if (Fp.pow(n, legendreC) === Fp.neg(Fp.ONE))\n            throw new Error('Cannot find square root');\n        let r = S;\n        // TODO: will fail at Fp2/etc\n        let g = Fp.pow(Fp.mul(Fp.ONE, Z), Q); // will update both x and b\n        let x = Fp.pow(n, Q1div2); // first guess at the square root\n        let b = Fp.pow(n, Q); // first guess at the fudge factor\n        while (!Fp.eql(b, Fp.ONE)) {\n            if (Fp.eql(b, Fp.ZERO))\n                return Fp.ZERO; // https://en.wikipedia.org/wiki/Tonelli%E2%80%93Shanks_algorithm (4. If t = 0, return r = 0)\n            // Find m such b^(2^m)==1\n            let m = 1;\n            for (let t2 = Fp.sqr(b); m < r; m++) {\n                if (Fp.eql(t2, Fp.ONE))\n                    break;\n                t2 = Fp.sqr(t2); // t2 *= t2\n            }\n            // NOTE: r-m-1 can be bigger than 32, need to convert to bigint before shift, otherwise there will be overflow\n            const ge = Fp.pow(g, _1n << BigInt(r - m - 1)); // ge = 2^(r-m-1)\n            g = Fp.sqr(ge); // g = ge * ge\n            x = Fp.mul(x, ge); // x *= ge\n            b = Fp.mul(b, g); // b *= g\n            r = m;\n        }\n        return x;\n    };\n}\n/**\n * Square root for a finite field. It will try to check if optimizations are applicable and fall back to 4:\n *\n * 1. P ≡ 3 (mod 4)\n * 2. P ≡ 5 (mod 8)\n * 3. P ≡ 9 (mod 16)\n * 4. Tonelli-Shanks algorithm\n *\n * Different algorithms can give different roots, it is up to user to decide which one they want.\n * For example there is FpSqrtOdd/FpSqrtEven to choice root based on oddness (used for hash-to-curve).\n */\nexport function FpSqrt(P) {\n    // P ≡ 3 (mod 4)\n    // √n = n^((P+1)/4)\n    if (P % _4n === _3n) {\n        // Not all roots possible!\n        // const ORDER =\n        //   0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaabn;\n        // const NUM = 72057594037927816n;\n        const p1div4 = (P + _1n) / _4n;\n        return function sqrt3mod4(Fp, n) {\n            const root = Fp.pow(n, p1div4);\n            // Throw if root**2 != n\n            if (!Fp.eql(Fp.sqr(root), n))\n                throw new Error('Cannot find square root');\n            return root;\n        };\n    }\n    // Atkin algorithm for q ≡ 5 (mod 8), https://eprint.iacr.org/2012/685.pdf (page 10)\n    if (P % _8n === _5n) {\n        const c1 = (P - _5n) / _8n;\n        return function sqrt5mod8(Fp, n) {\n            const n2 = Fp.mul(n, _2n);\n            const v = Fp.pow(n2, c1);\n            const nv = Fp.mul(n, v);\n            const i = Fp.mul(Fp.mul(nv, _2n), v);\n            const root = Fp.mul(nv, Fp.sub(i, Fp.ONE));\n            if (!Fp.eql(Fp.sqr(root), n))\n                throw new Error('Cannot find square root');\n            return root;\n        };\n    }\n    // P ≡ 9 (mod 16)\n    if (P % _16n === _9n) {\n        // NOTE: tonelli is too slow for bls-Fp2 calculations even on start\n        // Means we cannot use sqrt for constants at all!\n        //\n        // const c1 = Fp.sqrt(Fp.negate(Fp.ONE)); //  1. c1 = sqrt(-1) in F, i.e., (c1^2) == -1 in F\n        // const c2 = Fp.sqrt(c1);                //  2. c2 = sqrt(c1) in F, i.e., (c2^2) == c1 in F\n        // const c3 = Fp.sqrt(Fp.negate(c1));     //  3. c3 = sqrt(-c1) in F, i.e., (c3^2) == -c1 in F\n        // const c4 = (P + _7n) / _16n;           //  4. c4 = (q + 7) / 16        # Integer arithmetic\n        // sqrt = (x) => {\n        //   let tv1 = Fp.pow(x, c4);             //  1. tv1 = x^c4\n        //   let tv2 = Fp.mul(c1, tv1);           //  2. tv2 = c1 * tv1\n        //   const tv3 = Fp.mul(c2, tv1);         //  3. tv3 = c2 * tv1\n        //   let tv4 = Fp.mul(c3, tv1);           //  4. tv4 = c3 * tv1\n        //   const e1 = Fp.equals(Fp.square(tv2), x); //  5.  e1 = (tv2^2) == x\n        //   const e2 = Fp.equals(Fp.square(tv3), x); //  6.  e2 = (tv3^2) == x\n        //   tv1 = Fp.cmov(tv1, tv2, e1); //  7. tv1 = CMOV(tv1, tv2, e1)  # Select tv2 if (tv2^2) == x\n        //   tv2 = Fp.cmov(tv4, tv3, e2); //  8. tv2 = CMOV(tv4, tv3, e2)  # Select tv3 if (tv3^2) == x\n        //   const e3 = Fp.equals(Fp.square(tv2), x); //  9.  e3 = (tv2^2) == x\n        //   return Fp.cmov(tv1, tv2, e3); //  10.  z = CMOV(tv1, tv2, e3)  # Select the sqrt from tv1 and tv2\n        // }\n    }\n    // Other cases: Tonelli-Shanks algorithm\n    return tonelliShanks(P);\n}\n// Little-endian check for first LE bit (last BE bit);\nexport const isNegativeLE = (num, modulo) => (mod(num, modulo) & _1n) === _1n;\n// prettier-ignore\nconst FIELD_FIELDS = [\n    'create', 'isValid', 'is0', 'neg', 'inv', 'sqrt', 'sqr',\n    'eql', 'add', 'sub', 'mul', 'pow', 'div',\n    'addN', 'subN', 'mulN', 'sqrN'\n];\nexport function validateField(field) {\n    const initial = {\n        ORDER: 'bigint',\n        MASK: 'bigint',\n        BYTES: 'isSafeInteger',\n        BITS: 'isSafeInteger',\n    };\n    const opts = FIELD_FIELDS.reduce((map, val) => {\n        map[val] = 'function';\n        return map;\n    }, initial);\n    return validateObject(field, opts);\n}\n// Generic field functions\n/**\n * Same as `pow` but for Fp: non-constant-time.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n */\nexport function FpPow(f, num, power) {\n    // Should have same speed as pow for bigints\n    // TODO: benchmark!\n    if (power < _0n)\n        throw new Error('invalid exponent, negatives unsupported');\n    if (power === _0n)\n        return f.ONE;\n    if (power === _1n)\n        return num;\n    let p = f.ONE;\n    let d = num;\n    while (power > _0n) {\n        if (power & _1n)\n            p = f.mul(p, d);\n        d = f.sqr(d);\n        power >>= _1n;\n    }\n    return p;\n}\n/**\n * Efficiently invert an array of Field elements.\n * `inv(0)` will return `undefined` here: make sure to throw an error.\n */\nexport function FpInvertBatch(f, nums) {\n    const tmp = new Array(nums.length);\n    // Walk from first to last, multiply them by each other MOD p\n    const lastMultiplied = nums.reduce((acc, num, i) => {\n        if (f.is0(num))\n            return acc;\n        tmp[i] = acc;\n        return f.mul(acc, num);\n    }, f.ONE);\n    // Invert last element\n    const inverted = f.inv(lastMultiplied);\n    // Walk from last to first, multiply them by inverted each other MOD p\n    nums.reduceRight((acc, num, i) => {\n        if (f.is0(num))\n            return acc;\n        tmp[i] = f.mul(acc, tmp[i]);\n        return f.mul(acc, num);\n    }, inverted);\n    return tmp;\n}\nexport function FpDiv(f, lhs, rhs) {\n    return f.mul(lhs, typeof rhs === 'bigint' ? invert(rhs, f.ORDER) : f.inv(rhs));\n}\n/**\n * Legendre symbol.\n * * (a | p) ≡ 1    if a is a square (mod p), quadratic residue\n * * (a | p) ≡ -1   if a is not a square (mod p), quadratic non residue\n * * (a | p) ≡ 0    if a ≡ 0 (mod p)\n */\nexport function FpLegendre(order) {\n    const legendreConst = (order - _1n) / _2n; // Integer arithmetic\n    return (f, x) => f.pow(x, legendreConst);\n}\n// This function returns True whenever the value x is a square in the field F.\nexport function FpIsSquare(f) {\n    const legendre = FpLegendre(f.ORDER);\n    return (x) => {\n        const p = legendre(f, x);\n        return f.eql(p, f.ZERO) || f.eql(p, f.ONE);\n    };\n}\n// CURVE.n lengths\nexport function nLength(n, nBitLength) {\n    // Bit size, byte size of CURVE.n\n    const _nBitLength = nBitLength !== undefined ? nBitLength : n.toString(2).length;\n    const nByteLength = Math.ceil(_nBitLength / 8);\n    return { nBitLength: _nBitLength, nByteLength };\n}\n/**\n * Initializes a finite field over prime.\n * Major performance optimizations:\n * * a) denormalized operations like mulN instead of mul\n * * b) same object shape: never add or remove keys\n * * c) Object.freeze\n * Fragile: always run a benchmark on a change.\n * Security note: operations don't check 'isValid' for all elements for performance reasons,\n * it is caller responsibility to check this.\n * This is low-level code, please make sure you know what you're doing.\n * @param ORDER prime positive bigint\n * @param bitLen how many bits the field consumes\n * @param isLE (def: false) if encoding / decoding should be in little-endian\n * @param redef optional faster redefinitions of sqrt and other methods\n */\nexport function Field(ORDER, bitLen, isLE = false, redef = {}) {\n    if (ORDER <= _0n)\n        throw new Error('invalid field: expected ORDER > 0, got ' + ORDER);\n    const { nBitLength: BITS, nByteLength: BYTES } = nLength(ORDER, bitLen);\n    if (BYTES > 2048)\n        throw new Error('invalid field: expected ORDER of <= 2048 bytes');\n    let sqrtP; // cached sqrtP\n    const f = Object.freeze({\n        ORDER,\n        isLE,\n        BITS,\n        BYTES,\n        MASK: bitMask(BITS),\n        ZERO: _0n,\n        ONE: _1n,\n        create: (num) => mod(num, ORDER),\n        isValid: (num) => {\n            if (typeof num !== 'bigint')\n                throw new Error('invalid field element: expected bigint, got ' + typeof num);\n            return _0n <= num && num < ORDER; // 0 is valid element, but it's not invertible\n        },\n        is0: (num) => num === _0n,\n        isOdd: (num) => (num & _1n) === _1n,\n        neg: (num) => mod(-num, ORDER),\n        eql: (lhs, rhs) => lhs === rhs,\n        sqr: (num) => mod(num * num, ORDER),\n        add: (lhs, rhs) => mod(lhs + rhs, ORDER),\n        sub: (lhs, rhs) => mod(lhs - rhs, ORDER),\n        mul: (lhs, rhs) => mod(lhs * rhs, ORDER),\n        pow: (num, power) => FpPow(f, num, power),\n        div: (lhs, rhs) => mod(lhs * invert(rhs, ORDER), ORDER),\n        // Same as above, but doesn't normalize\n        sqrN: (num) => num * num,\n        addN: (lhs, rhs) => lhs + rhs,\n        subN: (lhs, rhs) => lhs - rhs,\n        mulN: (lhs, rhs) => lhs * rhs,\n        inv: (num) => invert(num, ORDER),\n        sqrt: redef.sqrt ||\n            ((n) => {\n                if (!sqrtP)\n                    sqrtP = FpSqrt(ORDER);\n                return sqrtP(f, n);\n            }),\n        invertBatch: (lst) => FpInvertBatch(f, lst),\n        // TODO: do we really need constant cmov?\n        // We don't have const-time bigints anyway, so probably will be not very useful\n        cmov: (a, b, c) => (c ? b : a),\n        toBytes: (num) => (isLE ? numberToBytesLE(num, BYTES) : numberToBytesBE(num, BYTES)),\n        fromBytes: (bytes) => {\n            if (bytes.length !== BYTES)\n                throw new Error('Field.fromBytes: expected ' + BYTES + ' bytes, got ' + bytes.length);\n            return isLE ? bytesToNumberLE(bytes) : bytesToNumberBE(bytes);\n        },\n    });\n    return Object.freeze(f);\n}\nexport function FpSqrtOdd(Fp, elm) {\n    if (!Fp.isOdd)\n        throw new Error(\"Field doesn't have isOdd\");\n    const root = Fp.sqrt(elm);\n    return Fp.isOdd(root) ? root : Fp.neg(root);\n}\nexport function FpSqrtEven(Fp, elm) {\n    if (!Fp.isOdd)\n        throw new Error(\"Field doesn't have isOdd\");\n    const root = Fp.sqrt(elm);\n    return Fp.isOdd(root) ? Fp.neg(root) : root;\n}\n/**\n * \"Constant-time\" private key generation utility.\n * Same as mapKeyToField, but accepts less bytes (40 instead of 48 for 32-byte field).\n * Which makes it slightly more biased, less secure.\n * @deprecated use `mapKeyToField` instead\n */\nexport function hashToPrivateScalar(hash, groupOrder, isLE = false) {\n    hash = ensureBytes('privateHash', hash);\n    const hashLen = hash.length;\n    const minLen = nLength(groupOrder).nByteLength + 8;\n    if (minLen < 24 || hashLen < minLen || hashLen > 1024)\n        throw new Error('hashToPrivateScalar: expected ' + minLen + '-1024 bytes of input, got ' + hashLen);\n    const num = isLE ? bytesToNumberLE(hash) : bytesToNumberBE(hash);\n    return mod(num, groupOrder - _1n) + _1n;\n}\n/**\n * Returns total number of bytes consumed by the field element.\n * For example, 32 bytes for usual 256-bit weierstrass curve.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of field\n */\nexport function getFieldBytesLength(fieldOrder) {\n    if (typeof fieldOrder !== 'bigint')\n        throw new Error('field order must be bigint');\n    const bitLength = fieldOrder.toString(2).length;\n    return Math.ceil(bitLength / 8);\n}\n/**\n * Returns minimal amount of bytes that can be safely reduced\n * by field order.\n * Should be 2^-128 for 128-bit curve such as P256.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of target hash\n */\nexport function getMinHashLength(fieldOrder) {\n    const length = getFieldBytesLength(fieldOrder);\n    return length + Math.ceil(length / 2);\n}\n/**\n * \"Constant-time\" private key generation utility.\n * Can take (n + n/2) or more bytes of uniform input e.g. from CSPRNG or KDF\n * and convert them into private scalar, with the modulo bias being negligible.\n * Needs at least 48 bytes of input for 32-byte private key.\n * https://research.kudelskisecurity.com/2020/07/28/the-definitive-guide-to-modulo-bias-and-how-to-avoid-it/\n * FIPS 186-5, A.2 https://csrc.nist.gov/publications/detail/fips/186/5/final\n * RFC 9380, https://www.rfc-editor.org/rfc/rfc9380#section-5\n * @param hash hash output from SHA3 or a similar function\n * @param groupOrder size of subgroup - (e.g. secp256k1.CURVE.n)\n * @param isLE interpret hash bytes as LE num\n * @returns valid private scalar\n */\nexport function mapHashToField(key, fieldOrder, isLE = false) {\n    const len = key.length;\n    const fieldLen = getFieldBytesLength(fieldOrder);\n    const minLen = getMinHashLength(fieldOrder);\n    // No small numbers: need to understand bias story. No huge numbers: easier to detect JS timings.\n    if (len < 16 || len < minLen || len > 1024)\n        throw new Error('expected ' + minLen + '-1024 bytes of input, got ' + len);\n    const num = isLE ? bytesToNumberLE(key) : bytesToNumberBE(key);\n    // `mod(x, 11)` can sometimes produce 0. `mod(x, 10) + 1` is the same, but no 0\n    const reduced = mod(num, fieldOrder - _1n) + _1n;\n    return isLE ? numberToBytesLE(reduced, fieldLen) : numberToBytesBE(reduced, fieldLen);\n}\n//# sourceMappingURL=modular.js.map","/**\n * Methods for elliptic curve multiplication by scalars.\n * Contains wNAF, pippenger\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { nLength, validateField } from './modular.js';\nimport { bitLen, validateObject } from './utils.js';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nfunction constTimeNegate(condition, item) {\n    const neg = item.negate();\n    return condition ? neg : item;\n}\nfunction validateW(W, bits) {\n    if (!Number.isSafeInteger(W) || W <= 0 || W > bits)\n        throw new Error('invalid window size, expected [1..' + bits + '], got W=' + W);\n}\nfunction calcWOpts(W, bits) {\n    validateW(W, bits);\n    const windows = Math.ceil(bits / W) + 1; // +1, because\n    const windowSize = 2 ** (W - 1); // -1 because we skip zero\n    return { windows, windowSize };\n}\nfunction validateMSMPoints(points, c) {\n    if (!Array.isArray(points))\n        throw new Error('array expected');\n    points.forEach((p, i) => {\n        if (!(p instanceof c))\n            throw new Error('invalid point at index ' + i);\n    });\n}\nfunction validateMSMScalars(scalars, field) {\n    if (!Array.isArray(scalars))\n        throw new Error('array of scalars expected');\n    scalars.forEach((s, i) => {\n        if (!field.isValid(s))\n            throw new Error('invalid scalar at index ' + i);\n    });\n}\n// Since points in different groups cannot be equal (different object constructor),\n// we can have single place to store precomputes\nconst pointPrecomputes = new WeakMap();\nconst pointWindowSizes = new WeakMap(); // This allows use make points immutable (nothing changes inside)\nfunction getW(P) {\n    return pointWindowSizes.get(P) || 1;\n}\n/**\n * Elliptic curve multiplication of Point by scalar. Fragile.\n * Scalars should always be less than curve order: this should be checked inside of a curve itself.\n * Creates precomputation tables for fast multiplication:\n * - private scalar is split by fixed size windows of W bits\n * - every window point is collected from window's table & added to accumulator\n * - since windows are different, same point inside tables won't be accessed more than once per calc\n * - each multiplication is 'Math.ceil(CURVE_ORDER / 𝑊) + 1' point additions (fixed for any scalar)\n * - +1 window is neccessary for wNAF\n * - wNAF reduces table size: 2x less memory + 2x faster generation, but 10% slower multiplication\n *\n * @todo Research returning 2d JS array of windows, instead of a single window.\n * This would allow windows to be in different memory locations\n */\nexport function wNAF(c, bits) {\n    return {\n        constTimeNegate,\n        hasPrecomputes(elm) {\n            return getW(elm) !== 1;\n        },\n        // non-const time multiplication ladder\n        unsafeLadder(elm, n, p = c.ZERO) {\n            let d = elm;\n            while (n > _0n) {\n                if (n & _1n)\n                    p = p.add(d);\n                d = d.double();\n                n >>= _1n;\n            }\n            return p;\n        },\n        /**\n         * Creates a wNAF precomputation window. Used for caching.\n         * Default window size is set by `utils.precompute()` and is equal to 8.\n         * Number of precomputed points depends on the curve size:\n         * 2^(𝑊−1) * (Math.ceil(𝑛 / 𝑊) + 1), where:\n         * - 𝑊 is the window size\n         * - 𝑛 is the bitlength of the curve order.\n         * For a 256-bit curve and window size 8, the number of precomputed points is 128 * 33 = 4224.\n         * @param elm Point instance\n         * @param W window size\n         * @returns precomputed point tables flattened to a single array\n         */\n        precomputeWindow(elm, W) {\n            const { windows, windowSize } = calcWOpts(W, bits);\n            const points = [];\n            let p = elm;\n            let base = p;\n            for (let window = 0; window < windows; window++) {\n                base = p;\n                points.push(base);\n                // =1, because we skip zero\n                for (let i = 1; i < windowSize; i++) {\n                    base = base.add(p);\n                    points.push(base);\n                }\n                p = base.double();\n            }\n            return points;\n        },\n        /**\n         * Implements ec multiplication using precomputed tables and w-ary non-adjacent form.\n         * @param W window size\n         * @param precomputes precomputed tables\n         * @param n scalar (we don't check here, but should be less than curve order)\n         * @returns real and fake (for const-time) points\n         */\n        wNAF(W, precomputes, n) {\n            // TODO: maybe check that scalar is less than group order? wNAF behavious is undefined otherwise\n            // But need to carefully remove other checks before wNAF. ORDER == bits here\n            const { windows, windowSize } = calcWOpts(W, bits);\n            let p = c.ZERO;\n            let f = c.BASE;\n            const mask = BigInt(2 ** W - 1); // Create mask with W ones: 0b1111 for W=4 etc.\n            const maxNumber = 2 ** W;\n            const shiftBy = BigInt(W);\n            for (let window = 0; window < windows; window++) {\n                const offset = window * windowSize;\n                // Extract W bits.\n                let wbits = Number(n & mask);\n                // Shift number by W bits.\n                n >>= shiftBy;\n                // If the bits are bigger than max size, we'll split those.\n                // +224 => 256 - 32\n                if (wbits > windowSize) {\n                    wbits -= maxNumber;\n                    n += _1n;\n                }\n                // This code was first written with assumption that 'f' and 'p' will never be infinity point:\n                // since each addition is multiplied by 2 ** W, it cannot cancel each other. However,\n                // there is negate now: it is possible that negated element from low value\n                // would be the same as high element, which will create carry into next window.\n                // It's not obvious how this can fail, but still worth investigating later.\n                // Check if we're onto Zero point.\n                // Add random point inside current window to f.\n                const offset1 = offset;\n                const offset2 = offset + Math.abs(wbits) - 1; // -1 because we skip zero\n                const cond1 = window % 2 !== 0;\n                const cond2 = wbits < 0;\n                if (wbits === 0) {\n                    // The most important part for const-time getPublicKey\n                    f = f.add(constTimeNegate(cond1, precomputes[offset1]));\n                }\n                else {\n                    p = p.add(constTimeNegate(cond2, precomputes[offset2]));\n                }\n            }\n            // JIT-compiler should not eliminate f here, since it will later be used in normalizeZ()\n            // Even if the variable is still unused, there are some checks which will\n            // throw an exception, so compiler needs to prove they won't happen, which is hard.\n            // At this point there is a way to F be infinity-point even if p is not,\n            // which makes it less const-time: around 1 bigint multiply.\n            return { p, f };\n        },\n        /**\n         * Implements ec unsafe (non const-time) multiplication using precomputed tables and w-ary non-adjacent form.\n         * @param W window size\n         * @param precomputes precomputed tables\n         * @param n scalar (we don't check here, but should be less than curve order)\n         * @param acc accumulator point to add result of multiplication\n         * @returns point\n         */\n        wNAFUnsafe(W, precomputes, n, acc = c.ZERO) {\n            const { windows, windowSize } = calcWOpts(W, bits);\n            const mask = BigInt(2 ** W - 1); // Create mask with W ones: 0b1111 for W=4 etc.\n            const maxNumber = 2 ** W;\n            const shiftBy = BigInt(W);\n            for (let window = 0; window < windows; window++) {\n                const offset = window * windowSize;\n                if (n === _0n)\n                    break; // No need to go over empty scalar\n                // Extract W bits.\n                let wbits = Number(n & mask);\n                // Shift number by W bits.\n                n >>= shiftBy;\n                // If the bits are bigger than max size, we'll split those.\n                // +224 => 256 - 32\n                if (wbits > windowSize) {\n                    wbits -= maxNumber;\n                    n += _1n;\n                }\n                if (wbits === 0)\n                    continue;\n                let curr = precomputes[offset + Math.abs(wbits) - 1]; // -1 because we skip zero\n                if (wbits < 0)\n                    curr = curr.negate();\n                // NOTE: by re-using acc, we can save a lot of additions in case of MSM\n                acc = acc.add(curr);\n            }\n            return acc;\n        },\n        getPrecomputes(W, P, transform) {\n            // Calculate precomputes on a first run, reuse them after\n            let comp = pointPrecomputes.get(P);\n            if (!comp) {\n                comp = this.precomputeWindow(P, W);\n                if (W !== 1)\n                    pointPrecomputes.set(P, transform(comp));\n            }\n            return comp;\n        },\n        wNAFCached(P, n, transform) {\n            const W = getW(P);\n            return this.wNAF(W, this.getPrecomputes(W, P, transform), n);\n        },\n        wNAFCachedUnsafe(P, n, transform, prev) {\n            const W = getW(P);\n            if (W === 1)\n                return this.unsafeLadder(P, n, prev); // For W=1 ladder is ~x2 faster\n            return this.wNAFUnsafe(W, this.getPrecomputes(W, P, transform), n, prev);\n        },\n        // We calculate precomputes for elliptic curve point multiplication\n        // using windowed method. This specifies window size and\n        // stores precomputed values. Usually only base point would be precomputed.\n        setWindowSize(P, W) {\n            validateW(W, bits);\n            pointWindowSizes.set(P, W);\n            pointPrecomputes.delete(P);\n        },\n    };\n}\n/**\n * Pippenger algorithm for multi-scalar multiplication (MSM, Pa + Qb + Rc + ...).\n * 30x faster vs naive addition on L=4096, 10x faster with precomputes.\n * For N=254bit, L=1, it does: 1024 ADD + 254 DBL. For L=5: 1536 ADD + 254 DBL.\n * Algorithmically constant-time (for same L), even when 1 point + scalar, or when scalar = 0.\n * @param c Curve Point constructor\n * @param fieldN field over CURVE.N - important that it's not over CURVE.P\n * @param points array of L curve points\n * @param scalars array of L scalars (aka private keys / bigints)\n */\nexport function pippenger(c, fieldN, points, scalars) {\n    // If we split scalars by some window (let's say 8 bits), every chunk will only\n    // take 256 buckets even if there are 4096 scalars, also re-uses double.\n    // TODO:\n    // - https://eprint.iacr.org/2024/750.pdf\n    // - https://tches.iacr.org/index.php/TCHES/article/view/10287\n    // 0 is accepted in scalars\n    validateMSMPoints(points, c);\n    validateMSMScalars(scalars, fieldN);\n    if (points.length !== scalars.length)\n        throw new Error('arrays of points and scalars must have equal length');\n    const zero = c.ZERO;\n    const wbits = bitLen(BigInt(points.length));\n    const windowSize = wbits > 12 ? wbits - 3 : wbits > 4 ? wbits - 2 : wbits ? 2 : 1; // in bits\n    const MASK = (1 << windowSize) - 1;\n    const buckets = new Array(MASK + 1).fill(zero); // +1 for zero array\n    const lastBits = Math.floor((fieldN.BITS - 1) / windowSize) * windowSize;\n    let sum = zero;\n    for (let i = lastBits; i >= 0; i -= windowSize) {\n        buckets.fill(zero);\n        for (let j = 0; j < scalars.length; j++) {\n            const scalar = scalars[j];\n            const wbits = Number((scalar >> BigInt(i)) & BigInt(MASK));\n            buckets[wbits] = buckets[wbits].add(points[j]);\n        }\n        let resI = zero; // not using this will do small speed-up, but will lose ct\n        // Skip first bucket, because it is zero\n        for (let j = buckets.length - 1, sumI = zero; j > 0; j--) {\n            sumI = sumI.add(buckets[j]);\n            resI = resI.add(sumI);\n        }\n        sum = sum.add(resI);\n        if (i !== 0)\n            for (let j = 0; j < windowSize; j++)\n                sum = sum.double();\n    }\n    return sum;\n}\n/**\n * Precomputed multi-scalar multiplication (MSM, Pa + Qb + Rc + ...).\n * @param c Curve Point constructor\n * @param fieldN field over CURVE.N - important that it's not over CURVE.P\n * @param points array of L curve points\n * @returns function which multiplies points with scaars\n */\nexport function precomputeMSMUnsafe(c, fieldN, points, windowSize) {\n    /**\n     * Performance Analysis of Window-based Precomputation\n     *\n     * Base Case (256-bit scalar, 8-bit window):\n     * - Standard precomputation requires:\n     *   - 31 additions per scalar × 256 scalars = 7,936 ops\n     *   - Plus 255 summary additions = 8,191 total ops\n     *   Note: Summary additions can be optimized via accumulator\n     *\n     * Chunked Precomputation Analysis:\n     * - Using 32 chunks requires:\n     *   - 255 additions per chunk\n     *   - 256 doublings\n     *   - Total: (255 × 32) + 256 = 8,416 ops\n     *\n     * Memory Usage Comparison:\n     * Window Size | Standard Points | Chunked Points\n     * ------------|-----------------|---------------\n     *     4-bit   |     520         |      15\n     *     8-bit   |    4,224        |     255\n     *    10-bit   |   13,824        |   1,023\n     *    16-bit   |  557,056        |  65,535\n     *\n     * Key Advantages:\n     * 1. Enables larger window sizes due to reduced memory overhead\n     * 2. More efficient for smaller scalar counts:\n     *    - 16 chunks: (16 × 255) + 256 = 4,336 ops\n     *    - ~2x faster than standard 8,191 ops\n     *\n     * Limitations:\n     * - Not suitable for plain precomputes (requires 256 constant doublings)\n     * - Performance degrades with larger scalar counts:\n     *   - Optimal for ~256 scalars\n     *   - Less efficient for 4096+ scalars (Pippenger preferred)\n     */\n    validateW(windowSize, fieldN.BITS);\n    validateMSMPoints(points, c);\n    const zero = c.ZERO;\n    const tableSize = 2 ** windowSize - 1; // table size (without zero)\n    const chunks = Math.ceil(fieldN.BITS / windowSize); // chunks of item\n    const MASK = BigInt((1 << windowSize) - 1);\n    const tables = points.map((p) => {\n        const res = [];\n        for (let i = 0, acc = p; i < tableSize; i++) {\n            res.push(acc);\n            acc = acc.add(p);\n        }\n        return res;\n    });\n    return (scalars) => {\n        validateMSMScalars(scalars, fieldN);\n        if (scalars.length > points.length)\n            throw new Error('array of scalars must be smaller than array of points');\n        let res = zero;\n        for (let i = 0; i < chunks; i++) {\n            // No need to double if accumulator is still zero.\n            if (res !== zero)\n                for (let j = 0; j < windowSize; j++)\n                    res = res.double();\n            const shiftBy = BigInt(chunks * windowSize - (i + 1) * windowSize);\n            for (let j = 0; j < scalars.length; j++) {\n                const n = scalars[j];\n                const curr = Number((n >> shiftBy) & MASK);\n                if (!curr)\n                    continue; // skip zero scalars chunks\n                res = res.add(tables[j][curr - 1]);\n            }\n        }\n        return res;\n    };\n}\nexport function validateBasic(curve) {\n    validateField(curve.Fp);\n    validateObject(curve, {\n        n: 'bigint',\n        h: 'bigint',\n        Gx: 'field',\n        Gy: 'field',\n    }, {\n        nBitLength: 'isSafeInteger',\n        nByteLength: 'isSafeInteger',\n    });\n    // Set defaults\n    return Object.freeze({\n        ...nLength(curve.n, curve.nBitLength),\n        ...curve,\n        ...{ p: curve.Fp.ORDER },\n    });\n}\n//# sourceMappingURL=curve.js.map","/**\n * Twisted Edwards curve. The formula is: ax² + y² = 1 + dx²y².\n * For design rationale of types / exports, see weierstrass module documentation.\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { pippenger, validateBasic, wNAF, } from './curve.js';\nimport { Field, mod } from './modular.js';\nimport * as ut from './utils.js';\nimport { abool, ensureBytes, memoized } from './utils.js';\n// Be friendly to bad ECMAScript parsers by not using bigint literals\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _8n = BigInt(8);\n// verification rule is either zip215 or rfc8032 / nist186-5. Consult fromHex:\nconst VERIFY_DEFAULT = { zip215: true };\nfunction validateOpts(curve) {\n    const opts = validateBasic(curve);\n    ut.validateObject(curve, {\n        hash: 'function',\n        a: 'bigint',\n        d: 'bigint',\n        randomBytes: 'function',\n    }, {\n        adjustScalarBytes: 'function',\n        domain: 'function',\n        uvRatio: 'function',\n        mapToCurve: 'function',\n    });\n    // Set defaults\n    return Object.freeze({ ...opts });\n}\n/**\n * Creates Twisted Edwards curve with EdDSA signatures.\n * @example\n * import { Field } from '@noble/curves/abstract/modular';\n * // Before that, define BigInt-s: a, d, p, n, Gx, Gy, h\n * const curve = twistedEdwards({ a, d, Fp: Field(p), n, Gx, Gy, h })\n */\nexport function twistedEdwards(curveDef) {\n    const CURVE = validateOpts(curveDef);\n    const { Fp, n: CURVE_ORDER, prehash: prehash, hash: cHash, randomBytes, nByteLength, h: cofactor, } = CURVE;\n    // Important:\n    // There are some places where Fp.BYTES is used instead of nByteLength.\n    // So far, everything has been tested with curves of Fp.BYTES == nByteLength.\n    // TODO: test and find curves which behave otherwise.\n    const MASK = _2n << (BigInt(nByteLength * 8) - _1n);\n    const modP = Fp.create; // Function overrides\n    const Fn = Field(CURVE.n, CURVE.nBitLength);\n    // sqrt(u/v)\n    const uvRatio = CURVE.uvRatio ||\n        ((u, v) => {\n            try {\n                return { isValid: true, value: Fp.sqrt(u * Fp.inv(v)) };\n            }\n            catch (e) {\n                return { isValid: false, value: _0n };\n            }\n        });\n    const adjustScalarBytes = CURVE.adjustScalarBytes || ((bytes) => bytes); // NOOP\n    const domain = CURVE.domain ||\n        ((data, ctx, phflag) => {\n            abool('phflag', phflag);\n            if (ctx.length || phflag)\n                throw new Error('Contexts/pre-hash are not supported');\n            return data;\n        }); // NOOP\n    // 0 <= n < MASK\n    // Coordinates larger than Fp.ORDER are allowed for zip215\n    function aCoordinate(title, n) {\n        ut.aInRange('coordinate ' + title, n, _0n, MASK);\n    }\n    function assertPoint(other) {\n        if (!(other instanceof Point))\n            throw new Error('ExtendedPoint expected');\n    }\n    // Converts Extended point to default (x, y) coordinates.\n    // Can accept precomputed Z^-1 - for example, from invertBatch.\n    const toAffineMemo = memoized((p, iz) => {\n        const { ex: x, ey: y, ez: z } = p;\n        const is0 = p.is0();\n        if (iz == null)\n            iz = is0 ? _8n : Fp.inv(z); // 8 was chosen arbitrarily\n        const ax = modP(x * iz);\n        const ay = modP(y * iz);\n        const zz = modP(z * iz);\n        if (is0)\n            return { x: _0n, y: _1n };\n        if (zz !== _1n)\n            throw new Error('invZ was invalid');\n        return { x: ax, y: ay };\n    });\n    const assertValidMemo = memoized((p) => {\n        const { a, d } = CURVE;\n        if (p.is0())\n            throw new Error('bad point: ZERO'); // TODO: optimize, with vars below?\n        // Equation in affine coordinates: ax² + y² = 1 + dx²y²\n        // Equation in projective coordinates (X/Z, Y/Z, Z):  (aX² + Y²)Z² = Z⁴ + dX²Y²\n        const { ex: X, ey: Y, ez: Z, et: T } = p;\n        const X2 = modP(X * X); // X²\n        const Y2 = modP(Y * Y); // Y²\n        const Z2 = modP(Z * Z); // Z²\n        const Z4 = modP(Z2 * Z2); // Z⁴\n        const aX2 = modP(X2 * a); // aX²\n        const left = modP(Z2 * modP(aX2 + Y2)); // (aX² + Y²)Z²\n        const right = modP(Z4 + modP(d * modP(X2 * Y2))); // Z⁴ + dX²Y²\n        if (left !== right)\n            throw new Error('bad point: equation left != right (1)');\n        // In Extended coordinates we also have T, which is x*y=T/Z: check X*Y == Z*T\n        const XY = modP(X * Y);\n        const ZT = modP(Z * T);\n        if (XY !== ZT)\n            throw new Error('bad point: equation left != right (2)');\n        return true;\n    });\n    // Extended Point works in extended coordinates: (x, y, z, t) ∋ (x=x/z, y=y/z, t=xy).\n    // https://en.wikipedia.org/wiki/Twisted_Edwards_curve#Extended_coordinates\n    class Point {\n        constructor(ex, ey, ez, et) {\n            this.ex = ex;\n            this.ey = ey;\n            this.ez = ez;\n            this.et = et;\n            aCoordinate('x', ex);\n            aCoordinate('y', ey);\n            aCoordinate('z', ez);\n            aCoordinate('t', et);\n            Object.freeze(this);\n        }\n        get x() {\n            return this.toAffine().x;\n        }\n        get y() {\n            return this.toAffine().y;\n        }\n        static fromAffine(p) {\n            if (p instanceof Point)\n                throw new Error('extended point not allowed');\n            const { x, y } = p || {};\n            aCoordinate('x', x);\n            aCoordinate('y', y);\n            return new Point(x, y, _1n, modP(x * y));\n        }\n        static normalizeZ(points) {\n            const toInv = Fp.invertBatch(points.map((p) => p.ez));\n            return points.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n        }\n        // Multiscalar Multiplication\n        static msm(points, scalars) {\n            return pippenger(Point, Fn, points, scalars);\n        }\n        // \"Private method\", don't use it directly\n        _setWindowSize(windowSize) {\n            wnaf.setWindowSize(this, windowSize);\n        }\n        // Not required for fromHex(), which always creates valid points.\n        // Could be useful for fromAffine().\n        assertValidity() {\n            assertValidMemo(this);\n        }\n        // Compare one point to another.\n        equals(other) {\n            assertPoint(other);\n            const { ex: X1, ey: Y1, ez: Z1 } = this;\n            const { ex: X2, ey: Y2, ez: Z2 } = other;\n            const X1Z2 = modP(X1 * Z2);\n            const X2Z1 = modP(X2 * Z1);\n            const Y1Z2 = modP(Y1 * Z2);\n            const Y2Z1 = modP(Y2 * Z1);\n            return X1Z2 === X2Z1 && Y1Z2 === Y2Z1;\n        }\n        is0() {\n            return this.equals(Point.ZERO);\n        }\n        negate() {\n            // Flips point sign to a negative one (-x, y in affine coords)\n            return new Point(modP(-this.ex), this.ey, this.ez, modP(-this.et));\n        }\n        // Fast algo for doubling Extended Point.\n        // https://hyperelliptic.org/EFD/g1p/auto-twisted-extended.html#doubling-dbl-2008-hwcd\n        // Cost: 4M + 4S + 1*a + 6add + 1*2.\n        double() {\n            const { a } = CURVE;\n            const { ex: X1, ey: Y1, ez: Z1 } = this;\n            const A = modP(X1 * X1); // A = X12\n            const B = modP(Y1 * Y1); // B = Y12\n            const C = modP(_2n * modP(Z1 * Z1)); // C = 2*Z12\n            const D = modP(a * A); // D = a*A\n            const x1y1 = X1 + Y1;\n            const E = modP(modP(x1y1 * x1y1) - A - B); // E = (X1+Y1)2-A-B\n            const G = D + B; // G = D+B\n            const F = G - C; // F = G-C\n            const H = D - B; // H = D-B\n            const X3 = modP(E * F); // X3 = E*F\n            const Y3 = modP(G * H); // Y3 = G*H\n            const T3 = modP(E * H); // T3 = E*H\n            const Z3 = modP(F * G); // Z3 = F*G\n            return new Point(X3, Y3, Z3, T3);\n        }\n        // Fast algo for adding 2 Extended Points.\n        // https://hyperelliptic.org/EFD/g1p/auto-twisted-extended.html#addition-add-2008-hwcd\n        // Cost: 9M + 1*a + 1*d + 7add.\n        add(other) {\n            assertPoint(other);\n            const { a, d } = CURVE;\n            const { ex: X1, ey: Y1, ez: Z1, et: T1 } = this;\n            const { ex: X2, ey: Y2, ez: Z2, et: T2 } = other;\n            // Faster algo for adding 2 Extended Points when curve's a=-1.\n            // http://hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html#addition-add-2008-hwcd-4\n            // Cost: 8M + 8add + 2*2.\n            // Note: It does not check whether the `other` point is valid.\n            if (a === BigInt(-1)) {\n                const A = modP((Y1 - X1) * (Y2 + X2));\n                const B = modP((Y1 + X1) * (Y2 - X2));\n                const F = modP(B - A);\n                if (F === _0n)\n                    return this.double(); // Same point. Tests say it doesn't affect timing\n                const C = modP(Z1 * _2n * T2);\n                const D = modP(T1 * _2n * Z2);\n                const E = D + C;\n                const G = B + A;\n                const H = D - C;\n                const X3 = modP(E * F);\n                const Y3 = modP(G * H);\n                const T3 = modP(E * H);\n                const Z3 = modP(F * G);\n                return new Point(X3, Y3, Z3, T3);\n            }\n            const A = modP(X1 * X2); // A = X1*X2\n            const B = modP(Y1 * Y2); // B = Y1*Y2\n            const C = modP(T1 * d * T2); // C = T1*d*T2\n            const D = modP(Z1 * Z2); // D = Z1*Z2\n            const E = modP((X1 + Y1) * (X2 + Y2) - A - B); // E = (X1+Y1)*(X2+Y2)-A-B\n            const F = D - C; // F = D-C\n            const G = D + C; // G = D+C\n            const H = modP(B - a * A); // H = B-a*A\n            const X3 = modP(E * F); // X3 = E*F\n            const Y3 = modP(G * H); // Y3 = G*H\n            const T3 = modP(E * H); // T3 = E*H\n            const Z3 = modP(F * G); // Z3 = F*G\n            return new Point(X3, Y3, Z3, T3);\n        }\n        subtract(other) {\n            return this.add(other.negate());\n        }\n        wNAF(n) {\n            return wnaf.wNAFCached(this, n, Point.normalizeZ);\n        }\n        // Constant-time multiplication.\n        multiply(scalar) {\n            const n = scalar;\n            ut.aInRange('scalar', n, _1n, CURVE_ORDER); // 1 <= scalar < L\n            const { p, f } = this.wNAF(n);\n            return Point.normalizeZ([p, f])[0];\n        }\n        // Non-constant-time multiplication. Uses double-and-add algorithm.\n        // It's faster, but should only be used when you don't care about\n        // an exposed private key e.g. sig verification.\n        // Does NOT allow scalars higher than CURVE.n.\n        // Accepts optional accumulator to merge with multiply (important for sparse scalars)\n        multiplyUnsafe(scalar, acc = Point.ZERO) {\n            const n = scalar;\n            ut.aInRange('scalar', n, _0n, CURVE_ORDER); // 0 <= scalar < L\n            if (n === _0n)\n                return I;\n            if (this.is0() || n === _1n)\n                return this;\n            return wnaf.wNAFCachedUnsafe(this, n, Point.normalizeZ, acc);\n        }\n        // Checks if point is of small order.\n        // If you add something to small order point, you will have \"dirty\"\n        // point with torsion component.\n        // Multiplies point by cofactor and checks if the result is 0.\n        isSmallOrder() {\n            return this.multiplyUnsafe(cofactor).is0();\n        }\n        // Multiplies point by curve order and checks if the result is 0.\n        // Returns `false` is the point is dirty.\n        isTorsionFree() {\n            return wnaf.unsafeLadder(this, CURVE_ORDER).is0();\n        }\n        // Converts Extended point to default (x, y) coordinates.\n        // Can accept precomputed Z^-1 - for example, from invertBatch.\n        toAffine(iz) {\n            return toAffineMemo(this, iz);\n        }\n        clearCofactor() {\n            const { h: cofactor } = CURVE;\n            if (cofactor === _1n)\n                return this;\n            return this.multiplyUnsafe(cofactor);\n        }\n        // Converts hash string or Uint8Array to Point.\n        // Uses algo from RFC8032 5.1.3.\n        static fromHex(hex, zip215 = false) {\n            const { d, a } = CURVE;\n            const len = Fp.BYTES;\n            hex = ensureBytes('pointHex', hex, len); // copy hex to a new array\n            abool('zip215', zip215);\n            const normed = hex.slice(); // copy again, we'll manipulate it\n            const lastByte = hex[len - 1]; // select last byte\n            normed[len - 1] = lastByte & ~0x80; // clear last bit\n            const y = ut.bytesToNumberLE(normed);\n            // zip215=true is good for consensus-critical apps. =false follows RFC8032 / NIST186-5.\n            // RFC8032 prohibits >= p, but ZIP215 doesn't\n            // zip215=true:  0 <= y < MASK (2^256 for ed25519)\n            // zip215=false: 0 <= y < P (2^255-19 for ed25519)\n            const max = zip215 ? MASK : Fp.ORDER;\n            ut.aInRange('pointHex.y', y, _0n, max);\n            // Ed25519: x² = (y²-1)/(dy²+1) mod p. Ed448: x² = (y²-1)/(dy²-1) mod p. Generic case:\n            // ax²+y²=1+dx²y² => y²-1=dx²y²-ax² => y²-1=x²(dy²-a) => x²=(y²-1)/(dy²-a)\n            const y2 = modP(y * y); // denominator is always non-0 mod p.\n            const u = modP(y2 - _1n); // u = y² - 1\n            const v = modP(d * y2 - a); // v = d y² + 1.\n            let { isValid, value: x } = uvRatio(u, v); // √(u/v)\n            if (!isValid)\n                throw new Error('Point.fromHex: invalid y coordinate');\n            const isXOdd = (x & _1n) === _1n; // There are 2 square roots. Use x_0 bit to select proper\n            const isLastByteOdd = (lastByte & 0x80) !== 0; // x_0, last bit\n            if (!zip215 && x === _0n && isLastByteOdd)\n                // if x=0 and x_0 = 1, fail\n                throw new Error('Point.fromHex: x=0 and x_0=1');\n            if (isLastByteOdd !== isXOdd)\n                x = modP(-x); // if x_0 != x mod 2, set x = p-x\n            return Point.fromAffine({ x, y });\n        }\n        static fromPrivateKey(privKey) {\n            return getExtendedPublicKey(privKey).point;\n        }\n        toRawBytes() {\n            const { x, y } = this.toAffine();\n            const bytes = ut.numberToBytesLE(y, Fp.BYTES); // each y has 2 x values (x, -y)\n            bytes[bytes.length - 1] |= x & _1n ? 0x80 : 0; // when compressing, it's enough to store y\n            return bytes; // and use the last byte to encode sign of x\n        }\n        toHex() {\n            return ut.bytesToHex(this.toRawBytes()); // Same as toRawBytes, but returns string.\n        }\n    }\n    Point.BASE = new Point(CURVE.Gx, CURVE.Gy, _1n, modP(CURVE.Gx * CURVE.Gy));\n    Point.ZERO = new Point(_0n, _1n, _1n, _0n); // 0, 1, 1, 0\n    const { BASE: G, ZERO: I } = Point;\n    const wnaf = wNAF(Point, nByteLength * 8);\n    function modN(a) {\n        return mod(a, CURVE_ORDER);\n    }\n    // Little-endian SHA512 with modulo n\n    function modN_LE(hash) {\n        return modN(ut.bytesToNumberLE(hash));\n    }\n    /** Convenience method that creates public key and other stuff. RFC8032 5.1.5 */\n    function getExtendedPublicKey(key) {\n        const len = Fp.BYTES;\n        key = ensureBytes('private key', key, len);\n        // Hash private key with curve's hash function to produce uniformingly random input\n        // Check byte lengths: ensure(64, h(ensure(32, key)))\n        const hashed = ensureBytes('hashed private key', cHash(key), 2 * len);\n        const head = adjustScalarBytes(hashed.slice(0, len)); // clear first half bits, produce FE\n        const prefix = hashed.slice(len, 2 * len); // second half is called key prefix (5.1.6)\n        const scalar = modN_LE(head); // The actual private scalar\n        const point = G.multiply(scalar); // Point on Edwards curve aka public key\n        const pointBytes = point.toRawBytes(); // Uint8Array representation\n        return { head, prefix, scalar, point, pointBytes };\n    }\n    // Calculates EdDSA pub key. RFC8032 5.1.5. Privkey is hashed. Use first half with 3 bits cleared\n    function getPublicKey(privKey) {\n        return getExtendedPublicKey(privKey).pointBytes;\n    }\n    // int('LE', SHA512(dom2(F, C) || msgs)) mod N\n    function hashDomainToScalar(context = new Uint8Array(), ...msgs) {\n        const msg = ut.concatBytes(...msgs);\n        return modN_LE(cHash(domain(msg, ensureBytes('context', context), !!prehash)));\n    }\n    /** Signs message with privateKey. RFC8032 5.1.6 */\n    function sign(msg, privKey, options = {}) {\n        msg = ensureBytes('message', msg);\n        if (prehash)\n            msg = prehash(msg); // for ed25519ph etc.\n        const { prefix, scalar, pointBytes } = getExtendedPublicKey(privKey);\n        const r = hashDomainToScalar(options.context, prefix, msg); // r = dom2(F, C) || prefix || PH(M)\n        const R = G.multiply(r).toRawBytes(); // R = rG\n        const k = hashDomainToScalar(options.context, R, pointBytes, msg); // R || A || PH(M)\n        const s = modN(r + k * scalar); // S = (r + k * s) mod L\n        ut.aInRange('signature.s', s, _0n, CURVE_ORDER); // 0 <= s < l\n        const res = ut.concatBytes(R, ut.numberToBytesLE(s, Fp.BYTES));\n        return ensureBytes('result', res, Fp.BYTES * 2); // 64-byte signature\n    }\n    const verifyOpts = VERIFY_DEFAULT;\n    /**\n     * Verifies EdDSA signature against message and public key. RFC8032 5.1.7.\n     * An extended group equation is checked.\n     */\n    function verify(sig, msg, publicKey, options = verifyOpts) {\n        const { context, zip215 } = options;\n        const len = Fp.BYTES; // Verifies EdDSA signature against message and public key. RFC8032 5.1.7.\n        sig = ensureBytes('signature', sig, 2 * len); // An extended group equation is checked.\n        msg = ensureBytes('message', msg);\n        publicKey = ensureBytes('publicKey', publicKey, len);\n        if (zip215 !== undefined)\n            abool('zip215', zip215);\n        if (prehash)\n            msg = prehash(msg); // for ed25519ph, etc\n        const s = ut.bytesToNumberLE(sig.slice(len, 2 * len));\n        let A, R, SB;\n        try {\n            // zip215=true is good for consensus-critical apps. =false follows RFC8032 / NIST186-5.\n            // zip215=true:  0 <= y < MASK (2^256 for ed25519)\n            // zip215=false: 0 <= y < P (2^255-19 for ed25519)\n            A = Point.fromHex(publicKey, zip215);\n            R = Point.fromHex(sig.slice(0, len), zip215);\n            SB = G.multiplyUnsafe(s); // 0 <= s < l is done inside\n        }\n        catch (error) {\n            return false;\n        }\n        if (!zip215 && A.isSmallOrder())\n            return false;\n        const k = hashDomainToScalar(context, R.toRawBytes(), A.toRawBytes(), msg);\n        const RkA = R.add(A.multiplyUnsafe(k));\n        // Extended group equation\n        // [8][S]B = [8]R + [8][k]A'\n        return RkA.subtract(SB).clearCofactor().equals(Point.ZERO);\n    }\n    G._setWindowSize(8); // Enable precomputes. Slows down first publicKey computation by 20ms.\n    const utils = {\n        getExtendedPublicKey,\n        // ed25519 private keys are uniform 32b. No need to check for modulo bias, like in secp256k1.\n        randomPrivateKey: () => randomBytes(Fp.BYTES),\n        /**\n         * We're doing scalar multiplication (used in getPublicKey etc) with precomputed BASE_POINT\n         * values. This slows down first getPublicKey() by milliseconds (see Speed section),\n         * but allows to speed-up subsequent getPublicKey() calls up to 20x.\n         * @param windowSize 2, 4, 8, 16\n         */\n        precompute(windowSize = 8, point = Point.BASE) {\n            point._setWindowSize(windowSize);\n            point.multiply(BigInt(3));\n            return point;\n        },\n    };\n    return {\n        CURVE,\n        getPublicKey,\n        sign,\n        verify,\n        ExtendedPoint: Point,\n        utils,\n    };\n}\n//# sourceMappingURL=edwards.js.map","/**\n * Montgomery curve methods. It's not really whole montgomery curve,\n * just bunch of very specific methods for X25519 / X448 from\n * [RFC 7748](https://www.rfc-editor.org/rfc/rfc7748)\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { mod, pow } from './modular.js';\nimport { aInRange, bytesToNumberLE, ensureBytes, numberToBytesLE, validateObject, } from './utils.js';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nfunction validateOpts(curve) {\n    validateObject(curve, {\n        a: 'bigint',\n    }, {\n        montgomeryBits: 'isSafeInteger',\n        nByteLength: 'isSafeInteger',\n        adjustScalarBytes: 'function',\n        domain: 'function',\n        powPminus2: 'function',\n        Gu: 'bigint',\n    });\n    // Set defaults\n    return Object.freeze({ ...curve });\n}\n// Uses only one coordinate instead of two\nexport function montgomery(curveDef) {\n    const CURVE = validateOpts(curveDef);\n    const { P } = CURVE;\n    const modP = (n) => mod(n, P);\n    const montgomeryBits = CURVE.montgomeryBits;\n    const montgomeryBytes = Math.ceil(montgomeryBits / 8);\n    const fieldLen = CURVE.nByteLength;\n    const adjustScalarBytes = CURVE.adjustScalarBytes || ((bytes) => bytes);\n    const powPminus2 = CURVE.powPminus2 || ((x) => pow(x, P - BigInt(2), P));\n    // cswap from RFC7748. But it is not from RFC7748!\n    /*\n      cswap(swap, x_2, x_3):\n           dummy = mask(swap) AND (x_2 XOR x_3)\n           x_2 = x_2 XOR dummy\n           x_3 = x_3 XOR dummy\n           Return (x_2, x_3)\n    Where mask(swap) is the all-1 or all-0 word of the same length as x_2\n     and x_3, computed, e.g., as mask(swap) = 0 - swap.\n    */\n    function cswap(swap, x_2, x_3) {\n        const dummy = modP(swap * (x_2 - x_3));\n        x_2 = modP(x_2 - dummy);\n        x_3 = modP(x_3 + dummy);\n        return [x_2, x_3];\n    }\n    // x25519 from 4\n    // The constant a24 is (486662 - 2) / 4 = 121665 for curve25519/X25519\n    const a24 = (CURVE.a - BigInt(2)) / BigInt(4);\n    /**\n     *\n     * @param pointU u coordinate (x) on Montgomery Curve 25519\n     * @param scalar by which the point would be multiplied\n     * @returns new Point on Montgomery curve\n     */\n    function montgomeryLadder(u, scalar) {\n        aInRange('u', u, _0n, P);\n        aInRange('scalar', scalar, _0n, P);\n        // Section 5: Implementations MUST accept non-canonical values and process them as\n        // if they had been reduced modulo the field prime.\n        const k = scalar;\n        const x_1 = u;\n        let x_2 = _1n;\n        let z_2 = _0n;\n        let x_3 = u;\n        let z_3 = _1n;\n        let swap = _0n;\n        let sw;\n        for (let t = BigInt(montgomeryBits - 1); t >= _0n; t--) {\n            const k_t = (k >> t) & _1n;\n            swap ^= k_t;\n            sw = cswap(swap, x_2, x_3);\n            x_2 = sw[0];\n            x_3 = sw[1];\n            sw = cswap(swap, z_2, z_3);\n            z_2 = sw[0];\n            z_3 = sw[1];\n            swap = k_t;\n            const A = x_2 + z_2;\n            const AA = modP(A * A);\n            const B = x_2 - z_2;\n            const BB = modP(B * B);\n            const E = AA - BB;\n            const C = x_3 + z_3;\n            const D = x_3 - z_3;\n            const DA = modP(D * A);\n            const CB = modP(C * B);\n            const dacb = DA + CB;\n            const da_cb = DA - CB;\n            x_3 = modP(dacb * dacb);\n            z_3 = modP(x_1 * modP(da_cb * da_cb));\n            x_2 = modP(AA * BB);\n            z_2 = modP(E * (AA + modP(a24 * E)));\n        }\n        // (x_2, x_3) = cswap(swap, x_2, x_3)\n        sw = cswap(swap, x_2, x_3);\n        x_2 = sw[0];\n        x_3 = sw[1];\n        // (z_2, z_3) = cswap(swap, z_2, z_3)\n        sw = cswap(swap, z_2, z_3);\n        z_2 = sw[0];\n        z_3 = sw[1];\n        // z_2^(p - 2)\n        const z2 = powPminus2(z_2);\n        // Return x_2 * (z_2^(p - 2))\n        return modP(x_2 * z2);\n    }\n    function encodeUCoordinate(u) {\n        return numberToBytesLE(modP(u), montgomeryBytes);\n    }\n    function decodeUCoordinate(uEnc) {\n        // Section 5: When receiving such an array, implementations of X25519\n        // MUST mask the most significant bit in the final byte.\n        const u = ensureBytes('u coordinate', uEnc, montgomeryBytes);\n        if (fieldLen === 32)\n            u[31] &= 127; // 0b0111_1111\n        return bytesToNumberLE(u);\n    }\n    function decodeScalar(n) {\n        const bytes = ensureBytes('scalar', n);\n        const len = bytes.length;\n        if (len !== montgomeryBytes && len !== fieldLen) {\n            let valid = '' + montgomeryBytes + ' or ' + fieldLen;\n            throw new Error('invalid scalar, expected ' + valid + ' bytes, got ' + len);\n        }\n        return bytesToNumberLE(adjustScalarBytes(bytes));\n    }\n    function scalarMult(scalar, u) {\n        const pointU = decodeUCoordinate(u);\n        const _scalar = decodeScalar(scalar);\n        const pu = montgomeryLadder(pointU, _scalar);\n        // The result was not contributory\n        // https://cr.yp.to/ecdh.html#validate\n        if (pu === _0n)\n            throw new Error('invalid private or public key received');\n        return encodeUCoordinate(pu);\n    }\n    // Computes public key from private. By doing scalar multiplication of base point.\n    const GuBytes = encodeUCoordinate(CURVE.Gu);\n    function scalarMultBase(scalar) {\n        return scalarMult(scalar, GuBytes);\n    }\n    return {\n        scalarMult,\n        scalarMultBase,\n        getSharedSecret: (privateKey, publicKey) => scalarMult(privateKey, publicKey),\n        getPublicKey: (privateKey) => scalarMultBase(privateKey),\n        utils: { randomPrivateKey: () => CURVE.randomBytes(CURVE.nByteLength) },\n        GuBytes: GuBytes,\n    };\n}\n//# sourceMappingURL=montgomery.js.map","/**\n * ed25519 Twisted Edwards curve with following addons:\n * - X25519 ECDH\n * - Ristretto cofactor elimination\n * - Elligator hash-to-group / point indistinguishability\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { sha512 } from '@noble/hashes/sha512';\nimport { concatBytes, randomBytes, utf8ToBytes } from '@noble/hashes/utils';\nimport { pippenger } from './abstract/curve.js';\nimport { twistedEdwards } from './abstract/edwards.js';\nimport { createHasher, expand_message_xmd, } from './abstract/hash-to-curve.js';\nimport { Field, FpSqrtEven, isNegativeLE, mod, pow2 } from './abstract/modular.js';\nimport { montgomery } from './abstract/montgomery.js';\nimport { bytesToHex, bytesToNumberLE, ensureBytes, equalBytes, numberToBytesLE, } from './abstract/utils.js';\nconst ED25519_P = BigInt('57896044618658097711785492504343953926634992332820282019728792003956564819949');\n// √(-1) aka √(a) aka 2^((p-1)/4)\nconst ED25519_SQRT_M1 = /* @__PURE__ */ BigInt('19681161376707505956807079304988542015446066515923890162744021073123829784752');\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3);\n// prettier-ignore\nconst _5n = BigInt(5), _8n = BigInt(8);\nfunction ed25519_pow_2_252_3(x) {\n    // prettier-ignore\n    const _10n = BigInt(10), _20n = BigInt(20), _40n = BigInt(40), _80n = BigInt(80);\n    const P = ED25519_P;\n    const x2 = (x * x) % P;\n    const b2 = (x2 * x) % P; // x^3, 11\n    const b4 = (pow2(b2, _2n, P) * b2) % P; // x^15, 1111\n    const b5 = (pow2(b4, _1n, P) * x) % P; // x^31\n    const b10 = (pow2(b5, _5n, P) * b5) % P;\n    const b20 = (pow2(b10, _10n, P) * b10) % P;\n    const b40 = (pow2(b20, _20n, P) * b20) % P;\n    const b80 = (pow2(b40, _40n, P) * b40) % P;\n    const b160 = (pow2(b80, _80n, P) * b80) % P;\n    const b240 = (pow2(b160, _80n, P) * b80) % P;\n    const b250 = (pow2(b240, _10n, P) * b10) % P;\n    const pow_p_5_8 = (pow2(b250, _2n, P) * x) % P;\n    // ^ To pow to (p+3)/8, multiply it by x.\n    return { pow_p_5_8, b2 };\n}\nfunction adjustScalarBytes(bytes) {\n    // Section 5: For X25519, in order to decode 32 random bytes as an integer scalar,\n    // set the three least significant bits of the first byte\n    bytes[0] &= 248; // 0b1111_1000\n    // and the most significant bit of the last to zero,\n    bytes[31] &= 127; // 0b0111_1111\n    // set the second most significant bit of the last byte to 1\n    bytes[31] |= 64; // 0b0100_0000\n    return bytes;\n}\n// sqrt(u/v)\nfunction uvRatio(u, v) {\n    const P = ED25519_P;\n    const v3 = mod(v * v * v, P); // v³\n    const v7 = mod(v3 * v3 * v, P); // v⁷\n    // (p+3)/8 and (p-5)/8\n    const pow = ed25519_pow_2_252_3(u * v7).pow_p_5_8;\n    let x = mod(u * v3 * pow, P); // (uv³)(uv⁷)^(p-5)/8\n    const vx2 = mod(v * x * x, P); // vx²\n    const root1 = x; // First root candidate\n    const root2 = mod(x * ED25519_SQRT_M1, P); // Second root candidate\n    const useRoot1 = vx2 === u; // If vx² = u (mod p), x is a square root\n    const useRoot2 = vx2 === mod(-u, P); // If vx² = -u, set x <-- x * 2^((p-1)/4)\n    const noRoot = vx2 === mod(-u * ED25519_SQRT_M1, P); // There is no valid root, vx² = -u√(-1)\n    if (useRoot1)\n        x = root1;\n    if (useRoot2 || noRoot)\n        x = root2; // We return root2 anyway, for const-time\n    if (isNegativeLE(x, P))\n        x = mod(-x, P);\n    return { isValid: useRoot1 || useRoot2, value: x };\n}\n// Just in case\nexport const ED25519_TORSION_SUBGROUP = [\n    '0100000000000000000000000000000000000000000000000000000000000000',\n    'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac037a',\n    '0000000000000000000000000000000000000000000000000000000000000080',\n    '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc05',\n    'ecffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7f',\n    '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc85',\n    '0000000000000000000000000000000000000000000000000000000000000000',\n    'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac03fa',\n];\nconst Fp = /* @__PURE__ */ (() => Field(ED25519_P, undefined, true))();\nconst ed25519Defaults = /* @__PURE__ */ (() => ({\n    // Param: a\n    a: BigInt(-1), // Fp.create(-1) is proper; our way still works and is faster\n    // d is equal to -121665/121666 over finite field.\n    // Negative number is P - number, and division is invert(number, P)\n    d: BigInt('37095705934669439343138083508754565189542113879843219016388785533085940283555'),\n    // Finite field 𝔽p over which we'll do calculations; 2n**255n - 19n\n    Fp,\n    // Subgroup order: how many points curve has\n    // 2n**252n + 27742317777372353535851937790883648493n;\n    n: BigInt('7237005577332262213973186563042994240857116359379907606001950938285454250989'),\n    // Cofactor\n    h: _8n,\n    // Base point (x, y) aka generator point\n    Gx: BigInt('15112221349535400772501151409588531511454012693041857206046113283949847762202'),\n    Gy: BigInt('46316835694926478169428394003475163141307993866256225615783033603165251855960'),\n    hash: sha512,\n    randomBytes,\n    adjustScalarBytes,\n    // dom2\n    // Ratio of u to v. Allows us to combine inversion and square root. Uses algo from RFC8032 5.1.3.\n    // Constant-time, u/√v\n    uvRatio,\n}))();\n/**\n * ed25519 curve with EdDSA signatures.\n * @example\n * import { ed25519 } from '@noble/curves/ed25519';\n * const priv = ed25519.utils.randomPrivateKey();\n * const pub = ed25519.getPublicKey(priv);\n * const msg = new TextEncoder().encode('hello');\n * const sig = ed25519.sign(msg, priv);\n * ed25519.verify(sig, msg, pub); // Default mode: follows ZIP215\n * ed25519.verify(sig, msg, pub, { zip215: false }); // RFC8032 / FIPS 186-5\n */\nexport const ed25519 = /* @__PURE__ */ (() => twistedEdwards(ed25519Defaults))();\nfunction ed25519_domain(data, ctx, phflag) {\n    if (ctx.length > 255)\n        throw new Error('Context is too big');\n    return concatBytes(utf8ToBytes('SigEd25519 no Ed25519 collisions'), new Uint8Array([phflag ? 1 : 0, ctx.length]), ctx, data);\n}\nexport const ed25519ctx = /* @__PURE__ */ (() => twistedEdwards({\n    ...ed25519Defaults,\n    domain: ed25519_domain,\n}))();\nexport const ed25519ph = /* @__PURE__ */ (() => twistedEdwards(Object.assign({}, ed25519Defaults, {\n    domain: ed25519_domain,\n    prehash: sha512,\n})))();\n/**\n * ECDH using curve25519 aka x25519.\n * @example\n * import { x25519 } from '@noble/curves/ed25519';\n * const priv = 'a546e36bf0527c9d3b16154b82465edd62144c0ac1fc5a18506a2244ba449ac4';\n * const pub = 'e6db6867583030db3594c1a424b15f7c726624ec26b3353b10a903a6d0ab1c4c';\n * x25519.getSharedSecret(priv, pub) === x25519.scalarMult(priv, pub); // aliases\n * x25519.getPublicKey(priv) === x25519.scalarMultBase(priv);\n * x25519.getPublicKey(x25519.utils.randomPrivateKey());\n */\nexport const x25519 = /* @__PURE__ */ (() => montgomery({\n    P: ED25519_P,\n    a: BigInt(486662),\n    montgomeryBits: 255, // n is 253 bits\n    nByteLength: 32,\n    Gu: BigInt(9),\n    powPminus2: (x) => {\n        const P = ED25519_P;\n        // x^(p-2) aka x^(2^255-21)\n        const { pow_p_5_8, b2 } = ed25519_pow_2_252_3(x);\n        return mod(pow2(pow_p_5_8, _3n, P) * b2, P);\n    },\n    adjustScalarBytes,\n    randomBytes,\n}))();\n/**\n * Converts ed25519 public key to x25519 public key. Uses formula:\n * * `(u, v) = ((1+y)/(1-y), sqrt(-486664)*u/x)`\n * * `(x, y) = (sqrt(-486664)*u/v, (u-1)/(u+1))`\n * @example\n *   const someonesPub = ed25519.getPublicKey(ed25519.utils.randomPrivateKey());\n *   const aPriv = x25519.utils.randomPrivateKey();\n *   x25519.getSharedSecret(aPriv, edwardsToMontgomeryPub(someonesPub))\n */\nexport function edwardsToMontgomeryPub(edwardsPub) {\n    const { y } = ed25519.ExtendedPoint.fromHex(edwardsPub);\n    const _1n = BigInt(1);\n    return Fp.toBytes(Fp.create((_1n + y) * Fp.inv(_1n - y)));\n}\nexport const edwardsToMontgomery = edwardsToMontgomeryPub; // deprecated\n/**\n * Converts ed25519 secret key to x25519 secret key.\n * @example\n *   const someonesPub = x25519.getPublicKey(x25519.utils.randomPrivateKey());\n *   const aPriv = ed25519.utils.randomPrivateKey();\n *   x25519.getSharedSecret(edwardsToMontgomeryPriv(aPriv), someonesPub)\n */\nexport function edwardsToMontgomeryPriv(edwardsPriv) {\n    const hashed = ed25519Defaults.hash(edwardsPriv.subarray(0, 32));\n    return ed25519Defaults.adjustScalarBytes(hashed).subarray(0, 32);\n}\n// Hash To Curve Elligator2 Map (NOTE: different from ristretto255 elligator)\n// NOTE: very important part is usage of FpSqrtEven for ELL2_C1_EDWARDS, since\n// SageMath returns different root first and everything falls apart\nconst ELL2_C1 = /* @__PURE__ */ (() => (Fp.ORDER + _3n) / _8n)(); // 1. c1 = (q + 3) / 8       # Integer arithmetic\nconst ELL2_C2 = /* @__PURE__ */ (() => Fp.pow(_2n, ELL2_C1))(); // 2. c2 = 2^c1\nconst ELL2_C3 = /* @__PURE__ */ (() => Fp.sqrt(Fp.neg(Fp.ONE)))(); // 3. c3 = sqrt(-1)\n// prettier-ignore\nfunction map_to_curve_elligator2_curve25519(u) {\n    const ELL2_C4 = (Fp.ORDER - _5n) / _8n; // 4. c4 = (q - 5) / 8       # Integer arithmetic\n    const ELL2_J = BigInt(486662);\n    let tv1 = Fp.sqr(u); //  1.  tv1 = u^2\n    tv1 = Fp.mul(tv1, _2n); //  2.  tv1 = 2 * tv1\n    let xd = Fp.add(tv1, Fp.ONE); //  3.   xd = tv1 + 1         # Nonzero: -1 is square (mod p), tv1 is not\n    let x1n = Fp.neg(ELL2_J); //  4.  x1n = -J              # x1 = x1n / xd = -J / (1 + 2 * u^2)\n    let tv2 = Fp.sqr(xd); //  5.  tv2 = xd^2\n    let gxd = Fp.mul(tv2, xd); //  6.  gxd = tv2 * xd        # gxd = xd^3\n    let gx1 = Fp.mul(tv1, ELL2_J); //  7.  gx1 = J * tv1         # x1n + J * xd\n    gx1 = Fp.mul(gx1, x1n); //  8.  gx1 = gx1 * x1n       # x1n^2 + J * x1n * xd\n    gx1 = Fp.add(gx1, tv2); //  9.  gx1 = gx1 + tv2       # x1n^2 + J * x1n * xd + xd^2\n    gx1 = Fp.mul(gx1, x1n); //  10. gx1 = gx1 * x1n       # x1n^3 + J * x1n^2 * xd + x1n * xd^2\n    let tv3 = Fp.sqr(gxd); //  11. tv3 = gxd^2\n    tv2 = Fp.sqr(tv3); //  12. tv2 = tv3^2           # gxd^4\n    tv3 = Fp.mul(tv3, gxd); //  13. tv3 = tv3 * gxd       # gxd^3\n    tv3 = Fp.mul(tv3, gx1); //  14. tv3 = tv3 * gx1       # gx1 * gxd^3\n    tv2 = Fp.mul(tv2, tv3); //  15. tv2 = tv2 * tv3       # gx1 * gxd^7\n    let y11 = Fp.pow(tv2, ELL2_C4); //  16. y11 = tv2^c4        # (gx1 * gxd^7)^((p - 5) / 8)\n    y11 = Fp.mul(y11, tv3); //  17. y11 = y11 * tv3       # gx1*gxd^3*(gx1*gxd^7)^((p-5)/8)\n    let y12 = Fp.mul(y11, ELL2_C3); //  18. y12 = y11 * c3\n    tv2 = Fp.sqr(y11); //  19. tv2 = y11^2\n    tv2 = Fp.mul(tv2, gxd); //  20. tv2 = tv2 * gxd\n    let e1 = Fp.eql(tv2, gx1); //  21.  e1 = tv2 == gx1\n    let y1 = Fp.cmov(y12, y11, e1); //  22.  y1 = CMOV(y12, y11, e1)  # If g(x1) is square, this is its sqrt\n    let x2n = Fp.mul(x1n, tv1); //  23. x2n = x1n * tv1       # x2 = x2n / xd = 2 * u^2 * x1n / xd\n    let y21 = Fp.mul(y11, u); //  24. y21 = y11 * u\n    y21 = Fp.mul(y21, ELL2_C2); //  25. y21 = y21 * c2\n    let y22 = Fp.mul(y21, ELL2_C3); //  26. y22 = y21 * c3\n    let gx2 = Fp.mul(gx1, tv1); //  27. gx2 = gx1 * tv1       # g(x2) = gx2 / gxd = 2 * u^2 * g(x1)\n    tv2 = Fp.sqr(y21); //  28. tv2 = y21^2\n    tv2 = Fp.mul(tv2, gxd); //  29. tv2 = tv2 * gxd\n    let e2 = Fp.eql(tv2, gx2); //  30.  e2 = tv2 == gx2\n    let y2 = Fp.cmov(y22, y21, e2); //  31.  y2 = CMOV(y22, y21, e2)  # If g(x2) is square, this is its sqrt\n    tv2 = Fp.sqr(y1); //  32. tv2 = y1^2\n    tv2 = Fp.mul(tv2, gxd); //  33. tv2 = tv2 * gxd\n    let e3 = Fp.eql(tv2, gx1); //  34.  e3 = tv2 == gx1\n    let xn = Fp.cmov(x2n, x1n, e3); //  35.  xn = CMOV(x2n, x1n, e3)  # If e3, x = x1, else x = x2\n    let y = Fp.cmov(y2, y1, e3); //  36.   y = CMOV(y2, y1, e3)    # If e3, y = y1, else y = y2\n    let e4 = Fp.isOdd(y); //  37.  e4 = sgn0(y) == 1        # Fix sign of y\n    y = Fp.cmov(y, Fp.neg(y), e3 !== e4); //  38.   y = CMOV(y, -y, e3 XOR e4)\n    return { xMn: xn, xMd: xd, yMn: y, yMd: _1n }; //  39. return (xn, xd, y, 1)\n}\nconst ELL2_C1_EDWARDS = /* @__PURE__ */ (() => FpSqrtEven(Fp, Fp.neg(BigInt(486664))))(); // sgn0(c1) MUST equal 0\nfunction map_to_curve_elligator2_edwards25519(u) {\n    const { xMn, xMd, yMn, yMd } = map_to_curve_elligator2_curve25519(u); //  1.  (xMn, xMd, yMn, yMd) =\n    // map_to_curve_elligator2_curve25519(u)\n    let xn = Fp.mul(xMn, yMd); //  2.  xn = xMn * yMd\n    xn = Fp.mul(xn, ELL2_C1_EDWARDS); //  3.  xn = xn * c1\n    let xd = Fp.mul(xMd, yMn); //  4.  xd = xMd * yMn    # xn / xd = c1 * xM / yM\n    let yn = Fp.sub(xMn, xMd); //  5.  yn = xMn - xMd\n    let yd = Fp.add(xMn, xMd); //  6.  yd = xMn + xMd    # (n / d - 1) / (n / d + 1) = (n - d) / (n + d)\n    let tv1 = Fp.mul(xd, yd); //  7. tv1 = xd * yd\n    let e = Fp.eql(tv1, Fp.ZERO); //  8.   e = tv1 == 0\n    xn = Fp.cmov(xn, Fp.ZERO, e); //  9.  xn = CMOV(xn, 0, e)\n    xd = Fp.cmov(xd, Fp.ONE, e); //  10. xd = CMOV(xd, 1, e)\n    yn = Fp.cmov(yn, Fp.ONE, e); //  11. yn = CMOV(yn, 1, e)\n    yd = Fp.cmov(yd, Fp.ONE, e); //  12. yd = CMOV(yd, 1, e)\n    const inv = Fp.invertBatch([xd, yd]); // batch division\n    return { x: Fp.mul(xn, inv[0]), y: Fp.mul(yn, inv[1]) }; //  13. return (xn, xd, yn, yd)\n}\nconst htf = /* @__PURE__ */ (() => createHasher(ed25519.ExtendedPoint, (scalars) => map_to_curve_elligator2_edwards25519(scalars[0]), {\n    DST: 'edwards25519_XMD:SHA-512_ELL2_RO_',\n    encodeDST: 'edwards25519_XMD:SHA-512_ELL2_NU_',\n    p: Fp.ORDER,\n    m: 1,\n    k: 128,\n    expand: 'xmd',\n    hash: sha512,\n}))();\nexport const hashToCurve = /* @__PURE__ */ (() => htf.hashToCurve)();\nexport const encodeToCurve = /* @__PURE__ */ (() => htf.encodeToCurve)();\nfunction assertRstPoint(other) {\n    if (!(other instanceof RistPoint))\n        throw new Error('RistrettoPoint expected');\n}\n// √(-1) aka √(a) aka 2^((p-1)/4)\nconst SQRT_M1 = ED25519_SQRT_M1;\n// √(ad - 1)\nconst SQRT_AD_MINUS_ONE = /* @__PURE__ */ BigInt('25063068953384623474111414158702152701244531502492656460079210482610430750235');\n// 1 / √(a-d)\nconst INVSQRT_A_MINUS_D = /* @__PURE__ */ BigInt('54469307008909316920995813868745141605393597292927456921205312896311721017578');\n// 1-d²\nconst ONE_MINUS_D_SQ = /* @__PURE__ */ BigInt('1159843021668779879193775521855586647937357759715417654439879720876111806838');\n// (d-1)²\nconst D_MINUS_ONE_SQ = /* @__PURE__ */ BigInt('40440834346308536858101042469323190826248399146238708352240133220865137265952');\n// Calculates 1/√(number)\nconst invertSqrt = (number) => uvRatio(_1n, number);\nconst MAX_255B = /* @__PURE__ */ BigInt('0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff');\nconst bytes255ToNumberLE = (bytes) => ed25519.CURVE.Fp.create(bytesToNumberLE(bytes) & MAX_255B);\n// Computes Elligator map for Ristretto\n// https://ristretto.group/formulas/elligator.html\nfunction calcElligatorRistrettoMap(r0) {\n    const { d } = ed25519.CURVE;\n    const P = ed25519.CURVE.Fp.ORDER;\n    const mod = ed25519.CURVE.Fp.create;\n    const r = mod(SQRT_M1 * r0 * r0); // 1\n    const Ns = mod((r + _1n) * ONE_MINUS_D_SQ); // 2\n    let c = BigInt(-1); // 3\n    const D = mod((c - d * r) * mod(r + d)); // 4\n    let { isValid: Ns_D_is_sq, value: s } = uvRatio(Ns, D); // 5\n    let s_ = mod(s * r0); // 6\n    if (!isNegativeLE(s_, P))\n        s_ = mod(-s_);\n    if (!Ns_D_is_sq)\n        s = s_; // 7\n    if (!Ns_D_is_sq)\n        c = r; // 8\n    const Nt = mod(c * (r - _1n) * D_MINUS_ONE_SQ - D); // 9\n    const s2 = s * s;\n    const W0 = mod((s + s) * D); // 10\n    const W1 = mod(Nt * SQRT_AD_MINUS_ONE); // 11\n    const W2 = mod(_1n - s2); // 12\n    const W3 = mod(_1n + s2); // 13\n    return new ed25519.ExtendedPoint(mod(W0 * W3), mod(W2 * W1), mod(W1 * W3), mod(W0 * W2));\n}\n/**\n * Each ed25519/ExtendedPoint has 8 different equivalent points. This can be\n * a source of bugs for protocols like ring signatures. Ristretto was created to solve this.\n * Ristretto point operates in X:Y:Z:T extended coordinates like ExtendedPoint,\n * but it should work in its own namespace: do not combine those two.\n * https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-ristretto255-decaf448\n */\nclass RistPoint {\n    // Private property to discourage combining ExtendedPoint + RistrettoPoint\n    // Always use Ristretto encoding/decoding instead.\n    constructor(ep) {\n        this.ep = ep;\n    }\n    static fromAffine(ap) {\n        return new RistPoint(ed25519.ExtendedPoint.fromAffine(ap));\n    }\n    /**\n     * Takes uniform output of 64-byte hash function like sha512 and converts it to `RistrettoPoint`.\n     * The hash-to-group operation applies Elligator twice and adds the results.\n     * **Note:** this is one-way map, there is no conversion from point to hash.\n     * https://ristretto.group/formulas/elligator.html\n     * @param hex 64-byte output of a hash function\n     */\n    static hashToCurve(hex) {\n        hex = ensureBytes('ristrettoHash', hex, 64);\n        const r1 = bytes255ToNumberLE(hex.slice(0, 32));\n        const R1 = calcElligatorRistrettoMap(r1);\n        const r2 = bytes255ToNumberLE(hex.slice(32, 64));\n        const R2 = calcElligatorRistrettoMap(r2);\n        return new RistPoint(R1.add(R2));\n    }\n    /**\n     * Converts ristretto-encoded string to ristretto point.\n     * https://ristretto.group/formulas/decoding.html\n     * @param hex Ristretto-encoded 32 bytes. Not every 32-byte string is valid ristretto encoding\n     */\n    static fromHex(hex) {\n        hex = ensureBytes('ristrettoHex', hex, 32);\n        const { a, d } = ed25519.CURVE;\n        const P = ed25519.CURVE.Fp.ORDER;\n        const mod = ed25519.CURVE.Fp.create;\n        const emsg = 'RistrettoPoint.fromHex: the hex is not valid encoding of RistrettoPoint';\n        const s = bytes255ToNumberLE(hex);\n        // 1. Check that s_bytes is the canonical encoding of a field element, or else abort.\n        // 3. Check that s is non-negative, or else abort\n        if (!equalBytes(numberToBytesLE(s, 32), hex) || isNegativeLE(s, P))\n            throw new Error(emsg);\n        const s2 = mod(s * s);\n        const u1 = mod(_1n + a * s2); // 4 (a is -1)\n        const u2 = mod(_1n - a * s2); // 5\n        const u1_2 = mod(u1 * u1);\n        const u2_2 = mod(u2 * u2);\n        const v = mod(a * d * u1_2 - u2_2); // 6\n        const { isValid, value: I } = invertSqrt(mod(v * u2_2)); // 7\n        const Dx = mod(I * u2); // 8\n        const Dy = mod(I * Dx * v); // 9\n        let x = mod((s + s) * Dx); // 10\n        if (isNegativeLE(x, P))\n            x = mod(-x); // 10\n        const y = mod(u1 * Dy); // 11\n        const t = mod(x * y); // 12\n        if (!isValid || isNegativeLE(t, P) || y === _0n)\n            throw new Error(emsg);\n        return new RistPoint(new ed25519.ExtendedPoint(x, y, _1n, t));\n    }\n    static msm(points, scalars) {\n        const Fn = Field(ed25519.CURVE.n, ed25519.CURVE.nBitLength);\n        return pippenger(RistPoint, Fn, points, scalars);\n    }\n    /**\n     * Encodes ristretto point to Uint8Array.\n     * https://ristretto.group/formulas/encoding.html\n     */\n    toRawBytes() {\n        let { ex: x, ey: y, ez: z, et: t } = this.ep;\n        const P = ed25519.CURVE.Fp.ORDER;\n        const mod = ed25519.CURVE.Fp.create;\n        const u1 = mod(mod(z + y) * mod(z - y)); // 1\n        const u2 = mod(x * y); // 2\n        // Square root always exists\n        const u2sq = mod(u2 * u2);\n        const { value: invsqrt } = invertSqrt(mod(u1 * u2sq)); // 3\n        const D1 = mod(invsqrt * u1); // 4\n        const D2 = mod(invsqrt * u2); // 5\n        const zInv = mod(D1 * D2 * t); // 6\n        let D; // 7\n        if (isNegativeLE(t * zInv, P)) {\n            let _x = mod(y * SQRT_M1);\n            let _y = mod(x * SQRT_M1);\n            x = _x;\n            y = _y;\n            D = mod(D1 * INVSQRT_A_MINUS_D);\n        }\n        else {\n            D = D2; // 8\n        }\n        if (isNegativeLE(x * zInv, P))\n            y = mod(-y); // 9\n        let s = mod((z - y) * D); // 10 (check footer's note, no sqrt(-a))\n        if (isNegativeLE(s, P))\n            s = mod(-s);\n        return numberToBytesLE(s, 32); // 11\n    }\n    toHex() {\n        return bytesToHex(this.toRawBytes());\n    }\n    toString() {\n        return this.toHex();\n    }\n    // Compare one point to another.\n    equals(other) {\n        assertRstPoint(other);\n        const { ex: X1, ey: Y1 } = this.ep;\n        const { ex: X2, ey: Y2 } = other.ep;\n        const mod = ed25519.CURVE.Fp.create;\n        // (x1 * y2 == y1 * x2) | (y1 * y2 == x1 * x2)\n        const one = mod(X1 * Y2) === mod(Y1 * X2);\n        const two = mod(Y1 * Y2) === mod(X1 * X2);\n        return one || two;\n    }\n    add(other) {\n        assertRstPoint(other);\n        return new RistPoint(this.ep.add(other.ep));\n    }\n    subtract(other) {\n        assertRstPoint(other);\n        return new RistPoint(this.ep.subtract(other.ep));\n    }\n    multiply(scalar) {\n        return new RistPoint(this.ep.multiply(scalar));\n    }\n    multiplyUnsafe(scalar) {\n        return new RistPoint(this.ep.multiplyUnsafe(scalar));\n    }\n    double() {\n        return new RistPoint(this.ep.double());\n    }\n    negate() {\n        return new RistPoint(this.ep.negate());\n    }\n}\nexport const RistrettoPoint = /* @__PURE__ */ (() => {\n    if (!RistPoint.BASE)\n        RistPoint.BASE = new RistPoint(ed25519.ExtendedPoint.BASE);\n    if (!RistPoint.ZERO)\n        RistPoint.ZERO = new RistPoint(ed25519.ExtendedPoint.ZERO);\n    return RistPoint;\n})();\n// Hashing to ristretto255. https://www.rfc-editor.org/rfc/rfc9380#appendix-B\nexport const hashToRistretto255 = (msg, options) => {\n    const d = options.DST;\n    const DST = typeof d === 'string' ? utf8ToBytes(d) : d;\n    const uniform_bytes = expand_message_xmd(msg, DST, 64, sha512);\n    const P = RistPoint.hashToCurve(uniform_bytes);\n    return P;\n};\nexport const hash_to_ristretto255 = hashToRistretto255; // legacy\n//# sourceMappingURL=ed25519.js.map","const U32_MASK64 = /* @__PURE__ */ BigInt(2 ** 32 - 1);\nconst _32n = /* @__PURE__ */ BigInt(32);\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nfunction fromBig(n, le = false) {\n    if (le)\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\nfunction split(lst, le = false) {\n    let Ah = new Uint32Array(lst.length);\n    let Al = new Uint32Array(lst.length);\n    for (let i = 0; i < lst.length; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\nconst toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h, _l, s) => h >>> s;\nconst shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (_h, l) => l;\nconst rotr32L = (h, _l) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\nfunction add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n// prettier-ignore\nexport { fromBig, split, toBig, shrSH, shrSL, rotrSH, rotrSL, rotrBH, rotrBL, rotr32H, rotr32L, rotlSH, rotlSL, rotlBH, rotlBL, add, add3L, add3H, add4L, add4H, add5H, add5L, };\n// prettier-ignore\nconst u64 = {\n    fromBig, split, toBig,\n    shrSH, shrSL,\n    rotrSH, rotrSL, rotrBH, rotrBL,\n    rotr32H, rotr32L,\n    rotlSH, rotlSL, rotlBH, rotlBL,\n    add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n//# sourceMappingURL=_u64.js.map","import { bytes, exists, number, output } from './_assert.js';\nimport { rotlBH, rotlBL, rotlSH, rotlSL, split } from './_u64.js';\nimport { Hash, u32, toBytes, wrapConstructor, wrapXOFConstructorWithOpts, isLE, byteSwap32, } from './utils.js';\n// SHA3 (keccak) is based on a new design: basically, the internal state is bigger than output size.\n// It's called a sponge function.\n// Various per round constants calculations\nconst SHA3_PI = [];\nconst SHA3_ROTL = [];\nconst _SHA3_IOTA = [];\nconst _0n = /* @__PURE__ */ BigInt(0);\nconst _1n = /* @__PURE__ */ BigInt(1);\nconst _2n = /* @__PURE__ */ BigInt(2);\nconst _7n = /* @__PURE__ */ BigInt(7);\nconst _256n = /* @__PURE__ */ BigInt(256);\nconst _0x71n = /* @__PURE__ */ BigInt(0x71);\nfor (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {\n    // Pi\n    [x, y] = [y, (2 * x + 3 * y) % 5];\n    SHA3_PI.push(2 * (5 * y + x));\n    // Rotational\n    SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);\n    // Iota\n    let t = _0n;\n    for (let j = 0; j < 7; j++) {\n        R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;\n        if (R & _2n)\n            t ^= _1n << ((_1n << /* @__PURE__ */ BigInt(j)) - _1n);\n    }\n    _SHA3_IOTA.push(t);\n}\nconst [SHA3_IOTA_H, SHA3_IOTA_L] = /* @__PURE__ */ split(_SHA3_IOTA, true);\n// Left rotation (without 0, 32, 64)\nconst rotlH = (h, l, s) => (s > 32 ? rotlBH(h, l, s) : rotlSH(h, l, s));\nconst rotlL = (h, l, s) => (s > 32 ? rotlBL(h, l, s) : rotlSL(h, l, s));\n// Same as keccakf1600, but allows to skip some rounds\nexport function keccakP(s, rounds = 24) {\n    const B = new Uint32Array(5 * 2);\n    // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)\n    for (let round = 24 - rounds; round < 24; round++) {\n        // Theta θ\n        for (let x = 0; x < 10; x++)\n            B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n        for (let x = 0; x < 10; x += 2) {\n            const idx1 = (x + 8) % 10;\n            const idx0 = (x + 2) % 10;\n            const B0 = B[idx0];\n            const B1 = B[idx0 + 1];\n            const Th = rotlH(B0, B1, 1) ^ B[idx1];\n            const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n            for (let y = 0; y < 50; y += 10) {\n                s[x + y] ^= Th;\n                s[x + y + 1] ^= Tl;\n            }\n        }\n        // Rho (ρ) and Pi (π)\n        let curH = s[2];\n        let curL = s[3];\n        for (let t = 0; t < 24; t++) {\n            const shift = SHA3_ROTL[t];\n            const Th = rotlH(curH, curL, shift);\n            const Tl = rotlL(curH, curL, shift);\n            const PI = SHA3_PI[t];\n            curH = s[PI];\n            curL = s[PI + 1];\n            s[PI] = Th;\n            s[PI + 1] = Tl;\n        }\n        // Chi (χ)\n        for (let y = 0; y < 50; y += 10) {\n            for (let x = 0; x < 10; x++)\n                B[x] = s[y + x];\n            for (let x = 0; x < 10; x++)\n                s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];\n        }\n        // Iota (ι)\n        s[0] ^= SHA3_IOTA_H[round];\n        s[1] ^= SHA3_IOTA_L[round];\n    }\n    B.fill(0);\n}\nexport class Keccak extends Hash {\n    // NOTE: we accept arguments in bytes instead of bits here.\n    constructor(blockLen, suffix, outputLen, enableXOF = false, rounds = 24) {\n        super();\n        this.blockLen = blockLen;\n        this.suffix = suffix;\n        this.outputLen = outputLen;\n        this.enableXOF = enableXOF;\n        this.rounds = rounds;\n        this.pos = 0;\n        this.posOut = 0;\n        this.finished = false;\n        this.destroyed = false;\n        // Can be passed from user as dkLen\n        number(outputLen);\n        // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes\n        if (0 >= this.blockLen || this.blockLen >= 200)\n            throw new Error('Sha3 supports only keccak-f1600 function');\n        this.state = new Uint8Array(200);\n        this.state32 = u32(this.state);\n    }\n    keccak() {\n        if (!isLE)\n            byteSwap32(this.state32);\n        keccakP(this.state32, this.rounds);\n        if (!isLE)\n            byteSwap32(this.state32);\n        this.posOut = 0;\n        this.pos = 0;\n    }\n    update(data) {\n        exists(this);\n        const { blockLen, state } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            for (let i = 0; i < take; i++)\n                state[this.pos++] ^= data[pos++];\n            if (this.pos === blockLen)\n                this.keccak();\n        }\n        return this;\n    }\n    finish() {\n        if (this.finished)\n            return;\n        this.finished = true;\n        const { state, suffix, pos, blockLen } = this;\n        // Do the padding\n        state[pos] ^= suffix;\n        if ((suffix & 0x80) !== 0 && pos === blockLen - 1)\n            this.keccak();\n        state[blockLen - 1] ^= 0x80;\n        this.keccak();\n    }\n    writeInto(out) {\n        exists(this, false);\n        bytes(out);\n        this.finish();\n        const bufferOut = this.state;\n        const { blockLen } = this;\n        for (let pos = 0, len = out.length; pos < len;) {\n            if (this.posOut >= blockLen)\n                this.keccak();\n            const take = Math.min(blockLen - this.posOut, len - pos);\n            out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);\n            this.posOut += take;\n            pos += take;\n        }\n        return out;\n    }\n    xofInto(out) {\n        // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF\n        if (!this.enableXOF)\n            throw new Error('XOF is not possible for this instance');\n        return this.writeInto(out);\n    }\n    xof(bytes) {\n        number(bytes);\n        return this.xofInto(new Uint8Array(bytes));\n    }\n    digestInto(out) {\n        output(out, this);\n        if (this.finished)\n            throw new Error('digest() was already called');\n        this.writeInto(out);\n        this.destroy();\n        return out;\n    }\n    digest() {\n        return this.digestInto(new Uint8Array(this.outputLen));\n    }\n    destroy() {\n        this.destroyed = true;\n        this.state.fill(0);\n    }\n    _cloneInto(to) {\n        const { blockLen, suffix, outputLen, rounds, enableXOF } = this;\n        to || (to = new Keccak(blockLen, suffix, outputLen, enableXOF, rounds));\n        to.state32.set(this.state32);\n        to.pos = this.pos;\n        to.posOut = this.posOut;\n        to.finished = this.finished;\n        to.rounds = rounds;\n        // Suffix can change in cSHAKE\n        to.suffix = suffix;\n        to.outputLen = outputLen;\n        to.enableXOF = enableXOF;\n        to.destroyed = this.destroyed;\n        return to;\n    }\n}\nconst gen = (suffix, blockLen, outputLen) => wrapConstructor(() => new Keccak(blockLen, suffix, outputLen));\nexport const sha3_224 = /* @__PURE__ */ gen(0x06, 144, 224 / 8);\n/**\n * SHA3-256 hash function\n * @param message - that would be hashed\n */\nexport const sha3_256 = /* @__PURE__ */ gen(0x06, 136, 256 / 8);\nexport const sha3_384 = /* @__PURE__ */ gen(0x06, 104, 384 / 8);\nexport const sha3_512 = /* @__PURE__ */ gen(0x06, 72, 512 / 8);\nexport const keccak_224 = /* @__PURE__ */ gen(0x01, 144, 224 / 8);\n/**\n * keccak-256 hash function. Different from SHA3-256.\n * @param message - that would be hashed\n */\nexport const keccak_256 = /* @__PURE__ */ gen(0x01, 136, 256 / 8);\nexport const keccak_384 = /* @__PURE__ */ gen(0x01, 104, 384 / 8);\nexport const keccak_512 = /* @__PURE__ */ gen(0x01, 72, 512 / 8);\nconst genShake = (suffix, blockLen, outputLen) => wrapXOFConstructorWithOpts((opts = {}) => new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true));\nexport const shake128 = /* @__PURE__ */ genShake(0x1f, 168, 128 / 8);\nexport const shake256 = /* @__PURE__ */ genShake(0x1f, 136, 256 / 8);\n//# sourceMappingURL=sha3.js.map","import { keccak_224, keccak_256, keccak_384, keccak_512 } from \"@noble/hashes/sha3\";\nimport { wrapHash } from \"./utils.js\";\nexport const keccak224 = wrapHash(keccak_224);\nexport const keccak256 = (() => {\n    const k = wrapHash(keccak_256);\n    k.create = keccak_256.create;\n    return k;\n})();\nexport const keccak384 = wrapHash(keccak_384);\nexport const keccak512 = wrapHash(keccak_512);\n","import { AuthType, ReqMeta } from '@/types/auth';\nimport { hexlify, joinSignature } from '@ethersproject/bytes';\nimport { SigningKey } from '@ethersproject/signing-key';\nimport { toUtf8Bytes } from '@ethersproject/strings';\nimport { ed25519 } from '@noble/curves/ed25519';\nimport { Headers } from 'cross-fetch';\nimport { keccak256 } from 'ethereum-cryptography/keccak.js';\nimport { utf8ToBytes } from 'ethereum-cryptography/utils.js';\n\nexport const getCanonicalHeaders = (reqMeta: Partial<ReqMeta>, reqHeaders: Headers) => {\n  const sortedHeaders = getSortedHeaders(reqHeaders, SUPPORTED_HEADERS);\n\n  const res: string[] = [];\n  sortedHeaders.forEach((k) => {\n    const v = reqHeaders.get(k);\n    res.push(`${k}:${v}`);\n  });\n\n  if (reqMeta.url && reqMeta.url.hostname) {\n    res.push(reqMeta.url.hostname);\n  }\n\n  res.push('');\n  return res.join('\\n');\n};\n\nconst getSortedHeaders = (reqHeaders: Headers, supportHeaders: string[]) => {\n  const signedHeaders: string[] = [];\n\n  reqHeaders.forEach((v, k) => {\n    if (supportHeaders.includes(k)) {\n      signedHeaders.push(k);\n    }\n  });\n\n  return signedHeaders.sort();\n};\n\nconst getSignedHeaders = (reqHeaders: Headers) => {\n  const sortedHeaders = getSortedHeaders(reqHeaders, SUPPORTED_HEADERS);\n\n  return sortedHeaders.join(';');\n};\n\nexport const getCanonicalRequest = (reqMeta: Partial<ReqMeta>, reqHeaders: Headers) => {\n  const canonicalHeaders = getCanonicalHeaders(reqMeta, reqHeaders);\n  const signedHeaders = getSignedHeaders(reqHeaders);\n  const canonicalRequestArr = [\n    reqMeta.method,\n    reqMeta.url?.path,\n    reqMeta.url?.query,\n    canonicalHeaders,\n    signedHeaders,\n  ];\n\n  const canonicalRequest = canonicalRequestArr.join('\\n');\n\n  return canonicalRequest;\n};\n\nexport const getAuthorization = (canonicalRequest: string, authType: AuthType) => {\n  // console.log('canonicalRequest', canonicalRequest);\n\n  const unsignedMsg = getMsgToSign(utf8ToBytes(canonicalRequest));\n  let authorization = '';\n  if (authType.type === 'ECDSA') {\n    const sig = secpSign(unsignedMsg, authType.privateKey);\n    authorization = `GNFD1-ECDSA, Signature=${sig.slice(2)}`;\n  } else {\n    const sig = hexlify(ed25519.sign(hexlify(unsignedMsg).slice(2), authType.seed.slice(2)));\n    authorization = `GNFD2-EDDSA,Signature=${sig.slice(2)}`;\n  }\n\n  return authorization;\n};\n\nexport const newRequestHeadersByMeta = (meta: Partial<ReqMeta>) => {\n  const headers = new Headers();\n  if (meta.contentType) {\n    headers.set(HTTPHeaderContentType.toLocaleLowerCase(), meta.contentType);\n  }\n\n  if (meta.txnHash && meta.txnHash !== '') {\n    headers.set(HTTPHeaderTransactionHash.toLocaleLowerCase(), meta.txnHash);\n  }\n\n  if (meta.contentSHA256) {\n    headers.set(HTTPHeaderContentSHA256.toLocaleLowerCase(), meta.contentSHA256);\n  }\n\n  if (meta.unsignMsg) {\n    headers.set(HTTPHeaderUnsignedMsg.toLocaleLowerCase(), meta.unsignMsg);\n  }\n\n  if (meta.userAddress) {\n    headers.set(HTTPHeaderUserAddress, meta.userAddress);\n  }\n\n  const date = new Date();\n  if (meta.date) {\n    headers.set(HTTPHeaderDate.toLocaleLowerCase(), formatDate(meta.date));\n  } else {\n    headers.set(HTTPHeaderDate.toLocaleLowerCase(), formatDate(date));\n  }\n\n  if (meta.expiryTimestamp) {\n    headers.set(HTTPHeaderExpiryTimestamp.toLocaleLowerCase(), formatDate(meta.expiryTimestamp));\n  } else {\n    date.setHours(date.getHours() + 2);\n    headers.set(HTTPHeaderExpiryTimestamp.toLocaleLowerCase(), formatDate(date));\n  }\n\n  return headers;\n};\n\nfunction formatDate(date: Date): string {\n  const res = date.toISOString();\n  return res.replace(/\\.\\d{3}/gi, '');\n}\n\nexport const HTTPHeaderAuthorization = 'Authorization';\nexport const HTTPHeaderContentSHA256 = 'X-Gnfd-Content-Sha256';\nexport const HTTPHeaderTransactionHash = 'X-Gnfd-Txn-Hash';\nexport const HTTPHeaderObjectID = 'X-Gnfd-Object-ID';\nexport const HTTPHeaderRedundancyIndex = 'X-Gnfd-Redundancy-Index';\nexport const HTTPHeaderResource = 'X-Gnfd-Resource';\nexport const HTTPHeaderDate = 'X-Gnfd-Date';\nexport const HTTPHeaderExpiryTimestamp = 'X-Gnfd-Expiry-Timestamp';\nexport const HTTPHeaderRange = 'Range';\nexport const HTTPHeaderPieceIndex = 'X-Gnfd-Piece-Index';\nexport const HTTPHeaderContentType = 'Content-Type';\nexport const HTTPHeaderContentMD5 = 'Content-MD5';\nexport const HTTPHeaderUnsignedMsg = 'X-Gnfd-Unsigned-Msg';\nexport const HTTPHeaderUserAddress = 'X-Gnfd-User-Address';\nexport const HTTPHeaderAppDomain = 'X-Gnfd-App-Domain';\nexport const HTTPHeaderRegPubKey = 'X-Gnfd-App-Reg-Public-Key';\n\nconst SUPPORTED_HEADERS = [\n  HTTPHeaderContentSHA256.toLocaleLowerCase(),\n  HTTPHeaderTransactionHash.toLocaleLowerCase(),\n  HTTPHeaderObjectID.toLocaleLowerCase(),\n  HTTPHeaderRedundancyIndex.toLocaleLowerCase(),\n  HTTPHeaderResource.toLocaleLowerCase(),\n  HTTPHeaderDate.toLocaleLowerCase(),\n  HTTPHeaderExpiryTimestamp.toLocaleLowerCase(),\n  HTTPHeaderRange.toLocaleLowerCase(),\n  HTTPHeaderPieceIndex.toLocaleLowerCase(),\n  HTTPHeaderContentType.toLocaleLowerCase(),\n  HTTPHeaderContentMD5.toLocaleLowerCase(),\n  HTTPHeaderUnsignedMsg.toLocaleLowerCase(),\n  HTTPHeaderUserAddress.toLocaleLowerCase(),\n  // HTTPHeaderAppDomain.toLocaleLowerCase(),\n];\n\n// https://github.com/ethers-io/ethers.js/discussions/4339\nexport const secpSign = (digestBz: Uint8Array, privateKey: string) => {\n  const signingKey = new SigningKey(privateKey);\n  const signature = signingKey.signDigest(digestBz);\n  let res = joinSignature(signature);\n\n  const v = res.slice(-2);\n  if (v === '1c') res = res.slice(0, -2) + '01';\n  if (v === '1b') res = res.slice(0, -2) + '00';\n\n  return res;\n};\n\nexport const getMsgToSign = (unsignedBytes: Uint8Array): Uint8Array => {\n  const res = keccak256(unsignedBytes);\n  return res;\n};\n\nexport const encodePath = (pathName: string) => {\n  const reservedNames = /^[a-zA-Z0-9-_.~/]+$/;\n  if (reservedNames.test(pathName)) {\n    return pathName;\n  }\n\n  let encodedPathName = '';\n  for (let i = 0; i < pathName.length; i++) {\n    const s = pathName[i];\n\n    // soft characters\n    if (('A' <= s && s <= 'Z') || ('a' <= s && s <= 'z') || ('0' <= s && s <= '9')) {\n      encodedPathName += s;\n      continue;\n    }\n\n    switch (s) {\n      // special characters are allowed\n      case '-':\n      case '_':\n      case '.':\n      case '~':\n      case '/':\n        encodedPathName += s;\n        continue;\n\n      // others characters need to be encoded\n      default: {\n        const u = toUtf8Bytes(s);\n\n        for (let i = 0; i < u.length; i++) {\n          const hexStr = hexlify(u[i]);\n          encodedPathName += '%' + hexStr.slice(2).toUpperCase();\n        }\n      }\n    }\n  }\n  return encodedPathName;\n};\n\nexport const getSortQuery = (queryMap: Record<string, string>) => {\n  const queryParams = new URLSearchParams();\n  for (const k in queryMap) {\n    queryParams.append(k, queryMap[k]);\n  }\n  queryParams.sort();\n\n  return queryParams.toString();\n};\n\nexport const getSortQueryParams = (url: URL, queryMap: Record<string, string>) => {\n  // const queryParams = new URLSearchParams();\n  for (const k in queryMap) {\n    url.searchParams.append(k, queryMap[k]);\n  }\n  url.searchParams.sort();\n\n  return url;\n};\n","import { EMPTY_STRING_SHA256, METHOD_GET } from '@/constants';\nimport { ReqMeta } from '@/types';\nimport { toHex, utf8ToBytes } from 'ethereum-cryptography/utils';\nimport { getSortQueryParams } from '../auth';\n\nexport type APPROVAL_ACTION = 'CreateBucket' | 'CreateObject' | 'MigrateBucket';\n\n// https://github.com/bnb-chain/greenfield-storage-provider/blob/master/docs/storage-provider-rest-api/get_approval.md\nexport const getApprovalMetaInfo = <T>(endpoint: string, action: APPROVAL_ACTION, msg: T) => {\n  const path = '/greenfield/admin/v1/get-approval';\n  const queryMap = {\n    action,\n  };\n\n  let url = new URL(path, endpoint);\n  url = getSortQueryParams(url, queryMap);\n\n  const unSignedMessageInHex = toHex(utf8ToBytes(JSON.stringify(msg)));\n\n  const reqMeta: Partial<ReqMeta> = {\n    contentSHA256: EMPTY_STRING_SHA256,\n    unsignMsg: unSignedMessageInHex,\n    method: METHOD_GET,\n    url: {\n      hostname: url.hostname,\n      query: url.searchParams.toString(),\n      path,\n    },\n  };\n\n  const optionsWithOutHeaders: Omit<RequestInit, 'headers'> = {\n    method: METHOD_GET,\n  };\n\n  return {\n    url: url.href,\n    optionsWithOutHeaders,\n    reqMeta,\n  };\n};\n","import { VisibilityType } from '../common';\n\nexport type BucketMeta = {\n  /**\n   * defines the information of the bucket.\n   */\n  BucketInfo: BucketInfo;\n\n  /**\n   * defines the creation transaction hash of bucket\n   */\n  CreateTxHash: string;\n\n  /**\n   * defines the block number when the bucket deleted.\n   */\n  DeleteAt: number;\n\n  /**\n   * defines the deleted reason of bucket\n   */\n  DeleteReason: string;\n\n  /**\n   * defines the operator address of bucket\n   */\n  Operator: string;\n\n  /**\n   * defines the bucket is deleted or not\n   */\n  Removed: boolean;\n\n  /**\n   * defines the block number when the bucket updated\n   */\n  UpdateAt: number;\n\n  /**\n   * defines the block number when the bucket updated\n   */\n  UpdateTime: number;\n\n  /**\n   * defines the update transaction hash of bucket\n   */\n  UpdateTxHash: string;\n\n  /**\n   * OffChainStatus represents the status of a bucket in the off-chain storage.\n\t  It is used to track the current state of the bucket with respect to off-chain operations,\n\t  1 means 0001 -> OffChainStatusIsLimited is true\n\t  0 means 0000 -> OffChainStatusIsLimited is false\n\n    For an explanation of the different OffChainStatus values, please visit:https://github.com/bnb-chain/greenfield-storage-provider/blob/9d7048ad33cf51a2f7eb347e2113c5d0cc45f970/modular/blocksyncer/modules/bucket/bucket_handle.go#L40\n   */\n  OffChainStatus: string;\n};\n\nexport type GlobalVirtualGroupFamily = {\n  Id: number;\n  PrimarySpId: number;\n  GlobalVirtualGroupIds: number[];\n  VirtualPaymentAddress: string;\n};\n\nexport interface BucketMetaWithVGF extends BucketMeta {\n  /**\n   * serve as a means of grouping global virtual groups.\n   */\n  Vgf: GlobalVirtualGroupFamily;\n}\n\nexport function formatVGF(vgf: GlobalVirtualGroupFamily): GlobalVirtualGroupFamily {\n  return {\n    ...vgf,\n    Id: Number(vgf.Id),\n    PrimarySpId: Number(vgf.PrimarySpId),\n    // GlobalVirtualGroupIds: vgf.GlobalVirtualGroupIds.map((id) => Number(id)),\n  };\n}\n\nexport interface BucketInfo {\n  /**\n   * globally unique name of bucket\n   */\n  BucketName: string;\n\n  /**\n   * define the status of the bucket.\n   */\n  BucketStatus: number;\n\n  /**\n   * charged_read_quota defines the traffic quota for read in bytes per month.\n\t  The available read data for each user is the sum of the free read data provided by SP and\n\t  the ChargeReadQuota specified here.\n   */\n  ChargedReadQuota: number;\n\n  /**\n   * define the block timestamp when the bucket created.\n   */\n  CreateAt: number;\n\n  /**\n   * defines the unique id of gvg family\n   */\n  GlobalVirtualGroupFamilyId: number;\n\n  /**\n   * the unique identification for bucket.\n   */\n  Id: string;\n\n  /**\n   * the account address of bucket creator, it is also the bucket owner.\n   */\n  Owner: string;\n\n  /**\n   * the address of the payment account\n   */\n  PaymentAddress: string;\n\n  /**\n   * defines which chain the user should send the bucket management transactions to\n   */\n  SourceType: number;\n\n  /**\n   * defines the highest permissions for bucket. When a bucket is public, everyone can get storage objects in it.\n   */\n  Visibility: number;\n\n  /**\n   * defines a list of tags the bucket has\n   */\n  Tags: {\n    Tags: {\n      Key: string;\n      Value: string;\n    }[];\n  };\n\n  /**\n   * indicates that whether bucket owner disable SP as the upload agent.\n\twhen a bucket is created, by default, this is false, means SP is allowed to create object for delegator\n   */\n  SpAsDelegatedAgentDisabled: string;\n}\n\nexport interface StreamRecord {\n  Account: string;\n  CrudTimestamp: string;\n  NetflowRate: string;\n  StaticBalance: string;\n  BufferBalance: string;\n  LockBalance: string;\n  Status: string;\n  SettleTimestamp: string;\n  OutFlowCount: string;\n  FrozenNetflowRate: string;\n}\n\nexport interface ObjectMeta {\n  ObjectInfo: ObjectInfo;\n  LockedBalance: string;\n  Removed: boolean;\n  UpdateAt: number;\n  DeleteAt: number;\n  DeleteReason: string;\n  Operator: string;\n  CreateTxHash: string;\n  UpdateTxHash: string;\n  SealTxHash: string;\n}\n\nexport interface ObjectInfo {\n  BucketName: string;\n  Checksums: string[];\n  ContentType: string;\n  CreateAt: number;\n  Creator: string;\n  Id: number;\n  LocalVirtualGroupId: number;\n  ObjectName: string;\n  ObjectStatus: number;\n  Owner: string;\n  PayloadSize: number;\n  RedundancyType: number;\n  SourceType: number;\n  Visibility: number;\n  Tags: {\n    Tags: {\n      Key: string;\n      Value: string;\n    }[];\n  };\n}\n\nexport function formatBucketInfo(o: BucketInfo): BucketInfo {\n  let tags = o.Tags.Tags || [];\n  if (!Array.isArray(tags)) {\n    tags = [tags];\n  }\n\n  return {\n    ...o,\n    // PrimarySpId: Number(item.BucketInfo.PrimarySpId),\n    BucketStatus: Number(o.BucketStatus),\n    ChargedReadQuota: Number(o.ChargedReadQuota),\n    CreateAt: Number(o.CreateAt),\n    GlobalVirtualGroupFamilyId: Number(o.GlobalVirtualGroupFamilyId),\n    SourceType: Number(o.SourceType),\n    Visibility: Number(o.Visibility),\n    // @ts-ignore\n    SpAsDelegatedAgentDisabled: convertStrToBool(o.SpAsDelegatedAgentDisabled),\n    Tags: {\n      Tags: tags,\n    },\n  };\n}\n\nexport function formatObjectInfo(o: ObjectInfo): ObjectInfo {\n  let tags = o.Tags.Tags || [];\n  if (!Array.isArray(tags)) {\n    tags = [tags];\n  }\n\n  return {\n    ...o,\n    CreateAt: Number(o.CreateAt),\n    Id: Number(o.Id),\n    LocalVirtualGroupId: Number(o.LocalVirtualGroupId),\n    ObjectStatus: Number(o.ObjectStatus),\n    PayloadSize: Number(o.PayloadSize),\n    RedundancyType: Number(o.RedundancyType),\n    SourceType: Number(o.SourceType),\n    Visibility: Number(o.Visibility),\n    Tags: {\n      Tags: tags,\n    },\n  };\n}\n\nexport function convertStrToBool(str: string) {\n  return String(str).toLowerCase() === 'true';\n}\n\nexport interface ReadRecord {\n  ObjectName: string;\n  ObjectID: string;\n  ReadAccountAddress: string;\n  ReadTimestampUs: number;\n  ReadSize: number;\n}\n\nexport function formatReadRecord(o: ReadRecord) {\n  return {\n    ...o,\n    ReadTimestampUs: Number(o.ReadTimestampUs),\n    ReadSize: Number(o.ReadSize),\n  };\n}\n\nexport interface GroupInfo {\n  Owner: string;\n  GroupName: string;\n  SourceType: number;\n  Id: number;\n  Extra: string;\n  Tags: {\n    Tags: {\n      Key: string;\n      Value: string;\n    }[];\n  };\n}\n\nexport function formatGroupInfo(o: GroupInfo): GroupInfo {\n  let tags = o.Tags.Tags || [];\n  if (!Array.isArray(tags)) {\n    tags = [tags];\n  }\n\n  return {\n    ...o,\n    SourceType: Number(o.SourceType),\n    Id: Number(o.Id),\n    Tags: {\n      Tags: tags,\n    },\n  };\n}\n\nexport interface PolicyMeta {\n  /**\n   * principal_type defines the type of principal\n   */\n  PrincipalType: number;\n  /**\n   * principal_value defines the value of principal\n   */\n  PrincipalValue: string;\n  /**\n   * resource_type defines the type of resource that grants permission for\n   */\n  ResourceType: number;\n  /**\n   * resource_id defines the bucket/object/group id of the resource that grants permission for\n   */\n  ResourceId: string;\n  /**\n   * create_timestamp defines the create time of permission\n   */\n  CreateTimestamp: number;\n  /**\n   * update_timestamp defines the update time of permission\n   */\n  UpdateTimestamp: number;\n  /**\n   * expiration_time defines the expiration time of permission\n   */\n  ExpirationTime: number;\n}\n\nexport type DelegatedOpts = {\n  visibility: VisibilityType;\n  isUpdate?: boolean;\n};\n\nexport type ResumableOpts = {\n  disableResumable: boolean;\n  partSize?: number;\n};\n\nexport type NodeFile = {\n  name: string;\n  type: string;\n  size: number;\n  content: Buffer;\n};\nexport type UploadFile = File | NodeFile;\n","import { GetBucketMetaRequest, GetBucketMetaResponse } from '@/types';\nimport { formatBucketInfo } from '@/types/sp/Common';\nimport { XMLParser } from 'fast-xml-parser';\nimport { getSortQueryParams } from '../auth';\nimport { SPMetaInfo } from './metaInfos';\n\n// https://github.com/bnb-chain/greenfield-storage-provider/blob/master/docs/storage-provider-rest-api/get_bucket_meta.md\nexport const getBucketMetaInfo = (\n  endpoint: string,\n  params: GetBucketMetaRequest,\n): Pick<SPMetaInfo, 'url'> => {\n  const path = `/${params.bucketName}`;\n  const queryMap = {\n    'bucket-meta': '',\n  };\n  let url = new URL(path, endpoint);\n  url = getSortQueryParams(url, queryMap);\n\n  return {\n    url: url.href,\n  };\n};\n\nexport const parseGetBucketMetaResponse = async (data: string) => {\n  const xmlParser = new XMLParser({\n    parseTagValue: false,\n  });\n  const res = xmlParser.parse(data) as GetBucketMetaResponse;\n\n  res.GfSpGetBucketMetaResponse.Bucket = {\n    ...res.GfSpGetBucketMetaResponse.Bucket,\n    BucketInfo: formatBucketInfo(res.GfSpGetBucketMetaResponse.Bucket.BucketInfo),\n    DeleteAt: Number(res.GfSpGetBucketMetaResponse.Bucket.DeleteAt),\n    UpdateAt: Number(res.GfSpGetBucketMetaResponse.Bucket.UpdateAt),\n    UpdateTime: Number(res.GfSpGetBucketMetaResponse.Bucket.UpdateTime),\n  };\n\n  return res;\n};\n","import type { GetUserBucketsResponse } from '@/types';\nimport { convertStrToBool, formatBucketInfo, formatVGF } from '@/types/sp/Common';\nimport { XMLParser } from 'fast-xml-parser';\nimport { SPMetaInfo } from './metaInfos';\n\n// https://github.com/bnb-chain/greenfield-storage-provider/blob/master/docs/storage-provider-rest-api/get_user_buckets.md\nexport const getUserBucketMetaInfo = (endpoint: string): Pick<SPMetaInfo, 'url'> => {\n  return {\n    url: endpoint,\n  };\n};\n\nexport const parseGetUserBucketsResponse = async (data: string) => {\n  const xmlParser = new XMLParser({\n    parseTagValue: false,\n  });\n  const res = xmlParser.parse(data) as GetUserBucketsResponse;\n\n  let Buckets = res.GfSpGetUserBucketsResponse.Buckets || [];\n  if (Buckets) {\n    if (!Array.isArray(Buckets)) {\n      Buckets = [Buckets];\n    }\n\n    Buckets = Buckets.map((item) => {\n      return {\n        ...item,\n        BucketInfo: formatBucketInfo(item.BucketInfo),\n        // @ts-ignore\n        Removed: convertStrToBool(item.Removed),\n        DeleteAt: Number(item.DeleteAt),\n        UpdateAt: Number(item.UpdateAt),\n        UpdateTime: Number(item.UpdateTime),\n        Vgf: formatVGF(item.Vgf),\n      };\n    });\n  }\n\n  res.GfSpGetUserBucketsResponse = {\n    Buckets,\n  };\n\n  return res;\n};\n","import {\n  AllowedMsgAllowance,\n  BasicAllowance,\n} from '@bnb-chain/greenfield-cosmos-types/cosmos/feegrant/v1beta1/feegrant';\nimport { MsgGrantAllowance } from '@bnb-chain/greenfield-cosmos-types/cosmos/feegrant/v1beta1/tx';\nimport { Any } from '@bnb-chain/greenfield-cosmos-types/google/protobuf/any';\nimport { Timestamp } from '@bnb-chain/greenfield-cosmos-types/google/protobuf/timestamp';\nimport {\n  AllowedMsgAllowanceTypeUrl,\n  BasicAllowanceTypeUrl,\n  DEFAULT_DENOM,\n  fromTimestamp,\n} from '..';\n\nexport interface IGrantAllowance {\n  amount: string;\n  denom: string;\n  allowedMessages: string[];\n  granter: MsgGrantAllowance['granter'];\n  grantee: MsgGrantAllowance['grantee'];\n  expirationTime: Timestamp;\n}\n\nexport const newBasicAllowance = (\n  amount: string,\n  denom: string = DEFAULT_DENOM,\n  expirationTime: Timestamp,\n): BasicAllowance => {\n  return {\n    spendLimit: [\n      {\n        amount,\n        denom,\n      },\n    ],\n    expiration: expirationTime,\n  };\n};\n\nexport const newAllowedMsgAllowance = (\n  allowedMessages: string[],\n  basicAllowance: BasicAllowance,\n): AllowedMsgAllowance => {\n  return {\n    allowedMessages,\n    allowance: Any.fromPartial({\n      typeUrl: BasicAllowanceTypeUrl,\n      value: BasicAllowance.encode(basicAllowance).finish(),\n    }),\n  };\n};\n\nexport const newMsgGrantAllowance = (\n  grantee: string,\n  granter: string,\n  allowedMsgAllowance: AllowedMsgAllowance,\n): MsgGrantAllowance => {\n  return {\n    grantee,\n    granter,\n    allowance: Any.fromPartial({\n      typeUrl: AllowedMsgAllowanceTypeUrl,\n      value: AllowedMsgAllowance.encode(allowedMsgAllowance).finish(),\n    }),\n  };\n};\n\nexport const newMarshal = (\n  amount: string,\n  denom: string = DEFAULT_DENOM,\n  allowed_messages: string[],\n  expirationTime: Timestamp,\n) => {\n  return {\n    '@type': AllowedMsgAllowanceTypeUrl,\n    allowance: {\n      '@type': BasicAllowanceTypeUrl,\n      expiration: fromTimestamp(expirationTime),\n      spend_limit: [\n        {\n          amount,\n          denom,\n        },\n      ],\n    },\n    allowed_messages,\n  };\n};\n","const IP_REGEX = /^(\\d+\\.){3}\\d+$/g;\nconst ALLOW_REGEX = /^[a-z0-9][a-z0-9.\\-]{1,61}[a-z0-9]$/g;\nconst dotdotComponent = '..';\nconst dotComponent = '.';\nconst slashSeparator = '/';\n\nconst verifyBucketName = (bucketName?: string) => {\n  if (!bucketName) {\n    throw new Error('Bucket name is empty, please check.');\n  }\n  const length = bucketName.length;\n  if (length < 3 || length > 63) {\n    throw new Error(`Bucket name length is required to be between 3~63, please check.`);\n  }\n  if (bucketName.match(IP_REGEX)) {\n    throw new Error('The bucket name %s cannot be formatted as an IP address, please check.');\n  }\n  if (bucketName.includes('..') || bucketName.includes('.-') || bucketName.includes('-.')) {\n    throw new Error('Bucket name contains invalid characters, please check.');\n  }\n  if (!bucketName.match(ALLOW_REGEX)) {\n    throw new Error(\n      'Bucket name can only include lowercase letters, numbers, commas and hyphen, please check.',\n    );\n  }\n  if (\n    bucketName[0] === '-' ||\n    bucketName[length - 1] === '-' ||\n    bucketName[0] === '.' ||\n    bucketName[length - 1] === '.'\n  ) {\n    throw new Error(\n      'Bucket name %must start and end with a lowercase letter or number, please check.',\n    );\n  }\n};\n\nconst hasBadPathComponent = (path: string): boolean => {\n  const newPath = path.trim();\n  for (const p of newPath.split(slashSeparator)) {\n    switch (p.trim()) {\n      case dotdotComponent:\n      case dotComponent:\n        return true;\n    }\n  }\n  return false;\n};\n\nconst isUTF8 = (str: string): boolean => {\n  try {\n    new TextDecoder('utf-8').decode(new TextEncoder().encode(str));\n    return true;\n  } catch {\n    return false;\n  }\n};\n\nconst verifyObjectName = (objectName?: string) => {\n  if (!objectName) {\n    throw new Error('Object name is empty, please check.');\n  }\n  if (objectName.length > 1024) {\n    throw new Error('Object name is limited to 1024 at most, please check.');\n  }\n  if (hasBadPathComponent(objectName)) {\n    throw new Error('Object name error, please check.');\n  }\n  if (!isUTF8(objectName)) {\n    throw new Error('Object name is not in UTF-8 format, please check.');\n  }\n  if (objectName.includes(`//`)) {\n    throw new Error(`Object name that contains a \"//\" is not supported`);\n  }\n};\n\nconst verifyAddress = (address?: string) => {\n  if (!address) throw new Error('Address is empty, please check.');\n  if (address.length > 1024) throw new Error('Address is limited to 1024 at most, please check.');\n};\n\nconst verifyUrl = (url?: string) => {\n  if (!url || url.length === 0) return false;\n  const pattern = new RegExp(\n    '^(https?:\\\\/\\\\/)?' + // 协议\n      '((([a-zA-Z\\\\d]([a-zA-Z\\\\d-]{0,61}[a-zA-Z\\\\d])?)\\\\.)+' + // 域名\n      '[a-zA-Z]{2,13})' + // 顶级域名\n      '(\\\\:\\\\d{1,5})?' + // 端口号\n      '(\\\\/[-a-zA-Z\\\\d%_.~+]*)*' + // 路径\n      '(\\\\?[;&a-zA-Z\\\\d%_.~+=-]*)?' + // 查询字符串\n      '(\\\\#[-a-zA-Z\\\\d_]*)?$', // 锚点\n    'i',\n  );\n\n  if (!pattern.test(url)) throw new Error('Invalid endpoint');\n};\n\n// remove specified from prefix and suffix of a string\nconst trimString = (originString: string, deleteString: string) => {\n  const delStrLength = deleteString.length;\n  if (originString.startsWith(deleteString)) {\n    originString = originString.substring(delStrLength);\n  }\n  if (originString.endsWith(deleteString)) {\n    originString = originString.substring(0, originString.length - delStrLength);\n  }\n  return originString;\n};\n\nconst generateUrlByBucketName = (endpoint = '', bucketName: string) => {\n  verifyBucketName(bucketName);\n  verifyUrl(endpoint);\n  const { protocol } = new URL(endpoint);\n  return endpoint.replace(`${protocol}//`, `${protocol}//${bucketName}.`);\n};\n\nconst isSQLInjection = (input: string) => {\n  // define patterns that may indicate SQL injection\n  const patterns = [\n    /;.*select/, // Matches any string with a semicolon followed by \"select\"\n    /;.*insert/, // Matches any string with a semicolon followed by \"insert\"\n    /;.*update/, // Matches any string with a semicolon followed by \"update\"\n    /;.*delete/, // Matches any string with a semicolon followed by \"delete\"\n    /;.*drop/, // Matches any string with a semicolon followed by \"drop\"\n    /;.*alter/, // Matches any string with a semicolon followed by \"alter\"\n    /\\/\\*[\\s\\S]*?\\*\\//, // Matches SQL block comment\n  ];\n\n  for (const pattern of patterns) {\n    const match = pattern.test(input);\n    if (match) {\n      return true;\n    }\n  }\n\n  return false;\n};\n\n// CheckObjectName  This code block checks for unsupported or potentially risky formats in object names.\n// The checks are essential for ensuring the security and compatibility of the object names within the system.\n// 1. \"..\" in object names: Checked to prevent path traversal attacks which might access directories outside the intended scope.\n// 2. Object name being \"/\": The root directory should not be used as an object name due to potential security risks and ambiguity.\n// 3. \"\\\\\" in object names: Backslashes are checked because they are often not supported in UNIX-like file systems and can cause issues in path parsing.\n// 4. SQL Injection patterns in object names: Ensures that the object name does not contain patterns that could be used for SQL injection attacks, maintaining the integrity of the database.\nconst checkObjectName = (objectName: string) => {\n  if (\n    objectName.includes('..') ||\n    objectName === '/' ||\n    objectName.includes('\\\\') ||\n    isSQLInjection(objectName)\n  ) {\n    throw new Error(`fail to check object name: ${objectName}`);\n  }\n};\n\nexport {\n  verifyBucketName,\n  verifyObjectName,\n  checkObjectName,\n  verifyAddress,\n  trimString,\n  verifyUrl,\n  generateUrlByBucketName,\n};\n","import { encodePath } from '../clients/spclient/auth';\n\nconst toHex = (char = '') => {\n  return char.charCodeAt(0).toString(16);\n};\n\nconst encodeToHex = (str = '') => {\n  return str.split('').map(toHex).join('');\n};\n\nconst decodeFromHex = (hex = '') => {\n  const result = [];\n  for (let i = 0; i < hex.length; i += 2) {\n    result.push(String.fromCharCode(parseInt(hex.substr(i, 2), 16)));\n  }\n  return result.join('');\n};\n\nconst encodeObjectToHexString = (jsonObject: object) => {\n  const utf8Encoder = new TextEncoder();\n  const utf8Bytes = utf8Encoder.encode(JSON.stringify(jsonObject));\n  return Array.from(utf8Bytes)\n    .map((b) => b.toString(16).padStart(2, '0'))\n    .join('');\n};\n\nconst encodeToHexString = (str = '') => {\n  const utf8Encoder = new TextEncoder();\n  const utf8Bytes = utf8Encoder.encode(str);\n  return Array.from(utf8Bytes)\n    .map((b) => b.toString(16).padStart(2, '0'))\n    .join('');\n};\n\nconst hexToBytes = (hex = '') => {\n  const bytes = new Uint8Array(hex.length / 2);\n  for (let i = 0; i < hex.length; i += 2) {\n    bytes[i / 2] = parseInt(hex.slice(i, i + 2), 16);\n  }\n  return bytes;\n};\n\nfunction uint8ArrayToJson(uint8Array: Uint8Array) {\n  const decoder = new TextDecoder('utf-8');\n  const jsonString = decoder.decode(uint8Array);\n  return JSON.parse(jsonString);\n}\n\nconst decodeObjectFromHexString = (hex = '') => {\n  return uint8ArrayToJson(hexToBytes(hex));\n};\n\nexport {\n  encodeToHex,\n  decodeFromHex,\n  encodeObjectToHexString,\n  decodeObjectFromHexString,\n  encodeToHexString,\n  encodePath,\n};\n","import { ResourceType } from '@bnb-chain/greenfield-cosmos-types/greenfield/resource/types';\n\n// GRN define a standard ResourceName format, full name: GreenFieldResourceName\n// valid format:\n//\tbucket: \"grn:b::bucketName\"\n//\tobject: \"grn:o::bucketName/objectName\"\n//\tgroup: \"grn:g:ownerAddress/groupName\"\n// Notice: all the name support wildcards\n\nexport interface IGRN {\n  resType: ResourceType;\n  groupOwner: string;\n  /**\n   * can be bucketName, bucketName/objectName, groupName\n   */\n  name: string;\n}\n\nconst BucketTypeAbbr = 'b';\nconst ObjectTypeAbbr = 'o';\nconst GroupTypeAbbr = 'g';\n\nexport const newBucketGRN = (bucketName: string): IGRN => {\n  return {\n    resType: ResourceType.RESOURCE_TYPE_BUCKET,\n    groupOwner: '',\n    name: bucketName,\n  };\n};\n\nexport const newObjectGRN = (bucketName: string, objectName: string): IGRN => {\n  const name = [bucketName, objectName].join('/');\n  return {\n    name,\n    resType: ResourceType.RESOURCE_TYPE_OBJECT,\n    groupOwner: '',\n  };\n};\n\nexport const newGroupGRN = (owner: string, groupName: string): IGRN => {\n  return {\n    resType: ResourceType.RESOURCE_TYPE_GROUP,\n    groupOwner: owner,\n    name: groupName,\n  };\n};\n\nexport const GRNToString = (grn: IGRN) => {\n  let res = '';\n\n  switch (grn.resType) {\n    case ResourceType.RESOURCE_TYPE_BUCKET:\n      res = `grn:${BucketTypeAbbr}::${grn.name}`;\n      break;\n    case ResourceType.RESOURCE_TYPE_OBJECT:\n      res = `grn:${ObjectTypeAbbr}::${grn.name}`;\n      break;\n    case ResourceType.RESOURCE_TYPE_GROUP:\n      res = `grn:${GroupTypeAbbr}:${grn.groupOwner}:${grn.name}`;\n      break;\n    default:\n      return '';\n  }\n\n  return res.trim();\n};\n","import dayjs from 'dayjs';\nimport utc from 'dayjs/plugin/utc';\nimport timezone from 'dayjs/plugin/timezone';\n\nexport const getUtcZeroTimestamp = () => {\n  dayjs.extend(utc);\n\n  return dayjs().utc().valueOf();\n};\n\nexport const convertTimeStampToDate = (utcTimestamp: number) => {\n  dayjs.extend(utc);\n  dayjs.extend(timezone);\n  // utc-0 timezone\n  const tz = 'Iceland';\n\n  return dayjs(utcTimestamp).tz(tz).format();\n};\n","import { EMPTY_STRING_SHA256, METHOD_GET } from '@/constants';\nimport { ReqMeta } from '@/types';\nimport { formatReadRecord } from '@/types/sp/Common';\nimport {\n  ListBucketReadRecordRequest,\n  ListBucketReadRecordResponse,\n} from '@/types/sp/ListBucketReadRecord';\nimport { generateUrlByBucketName } from '@/utils';\nimport { XMLParser } from 'fast-xml-parser';\nimport { getSortQuery, getSortQueryParams } from '../auth';\nimport { SPMetaInfo } from './metaInfos';\n\n// https://github.com/bnb-chain/greenfield-storage-provider/blob/master/docs/storage-provider-rest-api/list_bucket_read_records.md\nexport const getListBucketReadRecordMetaInfo = (\n  endpoint: string,\n  params: ListBucketReadRecordRequest,\n): SPMetaInfo => {\n  const { bucketName, endTimeStamp, maxRecords, startTimeStamp } = params;\n  const path = '/';\n  const queryMap = {\n    'list-read-record': 'null',\n    'end-timestamp': String(endTimeStamp),\n    'max-records': String(maxRecords),\n    'start-timestamp': String(startTimeStamp),\n  };\n\n  let url = new URL(path, generateUrlByBucketName(endpoint, bucketName));\n  url = getSortQueryParams(url, queryMap);\n\n  const reqMeta: Partial<ReqMeta> = {\n    contentSHA256: EMPTY_STRING_SHA256,\n    method: METHOD_GET,\n    url: {\n      hostname: url.hostname,\n      query: url.searchParams.toString(),\n      path,\n    },\n  };\n\n  const optionsWithOutHeaders: Omit<RequestInit, 'headers'> = {\n    method: METHOD_GET,\n  };\n\n  return {\n    url: url.href,\n    optionsWithOutHeaders,\n    reqMeta,\n  };\n};\n\nexport const parseListBucketReadRecordResponse = async (data: string) => {\n  const xmlParser = new XMLParser({\n    parseTagValue: false,\n  });\n\n  const res = xmlParser.parse(data) as ListBucketReadRecordResponse;\n\n  let readRecords = res.GetBucketReadQuotaResult?.ReadRecords || [];\n  if (readRecords) {\n    if (!Array.isArray(readRecords)) {\n      readRecords = [readRecords];\n    }\n\n    readRecords = readRecords.map((readRecord) => formatReadRecord(readRecord));\n  }\n\n  res.GetBucketReadQuotaResult = {\n    ...res.GetBucketReadQuotaResult,\n    ReadRecords: readRecords,\n  };\n\n  return res;\n};\n","import { ListBucketsByIDsRequest, ListBucketsByIDsResponse } from '@/types';\nimport { convertStrToBool, formatBucketInfo } from '@/types/sp/Common';\nimport { XMLParser } from 'fast-xml-parser';\nimport { getSortQueryParams } from '../auth';\nimport { SPMetaInfo } from './metaInfos';\n\n// https://github.com/bnb-chain/greenfield-storage-provider/blob/master/docs/storage-provider-rest-api/list_buckets_by_ids.md\nexport const getListBucketsByIDsMetaInfo = (\n  endpoint: string,\n  params: ListBucketsByIDsRequest,\n): Pick<SPMetaInfo, 'url'> => {\n  const path = '/';\n  const queryMap = {\n    ids: params.ids.join(','),\n    'buckets-query': 'null',\n  };\n\n  let url = new URL(path, endpoint);\n  url = getSortQueryParams(url, queryMap);\n\n  return {\n    url: url.href,\n  };\n};\n\nexport const parseListBucketsByIdsResponse = async (data: string) => {\n  const xmlParser = new XMLParser({\n    parseTagValue: false,\n  });\n  const res = xmlParser.parse(data) as ListBucketsByIDsResponse;\n\n  let BucketEntry = res.GfSpListBucketsByIDsResponse.BucketEntry || [];\n  if (BucketEntry) {\n    if (!Array.isArray(BucketEntry)) {\n      BucketEntry = [BucketEntry];\n    }\n\n    BucketEntry = BucketEntry.map((item) => {\n      let Value = item.Value;\n      if (Value) {\n        Value = {\n          ...item.Value,\n          BucketInfo: formatBucketInfo(item.Value.BucketInfo),\n          // @ts-ignore\n          Removed: convertStrToBool(item.Value.Removed),\n          UpdateAt: Number(item.Value.UpdateAt),\n          DeleteAt: Number(item.Value.DeleteAt),\n        };\n      }\n\n      return {\n        ...item,\n        Id: Number(item.Id),\n        Value,\n      };\n    });\n  }\n\n  res.GfSpListBucketsByIDsResponse = {\n    ...res.GfSpListBucketsByIDsResponse,\n    BucketEntry,\n  };\n\n  return res;\n};\n","import { convertStrToBool, formatBucketInfo } from '@/types/sp/Common';\nimport {\n  ListBucketsByPaymentAccountRequest,\n  ListBucketsByPaymentAccountResponse,\n} from '@/types/sp/ListBucketsByPaymentAccount';\nimport { XMLParser } from 'fast-xml-parser';\nimport { getSortQueryParams } from '../auth';\n\n// https://github.com/bnb-chain/greenfield-storage-provider/blob/master/docs/storage-provider-rest-api/list_payment_account_streams.md\nexport const getListBucketByPaymentMetaInfo = (\n  endpoint: string,\n  params: ListBucketsByPaymentAccountRequest,\n) => {\n  const path = '/';\n  const queryMap = {\n    'payment-buckets': 'null',\n    'payment-account': params.paymentAccount,\n  };\n\n  let url = new URL(path, endpoint);\n  url = getSortQueryParams(url, queryMap);\n\n  return {\n    url: url.href,\n  };\n};\n\nexport const parseListBucketByPaymentResponse = (data: string) => {\n  const xmlParser = new XMLParser({\n    parseTagValue: false,\n  });\n  const res = xmlParser.parse(data) as ListBucketsByPaymentAccountResponse;\n\n  let Buckets = res.GfSpListPaymentAccountStreamsResponse.Buckets || [];\n  if (Buckets) {\n    if (!Array.isArray(Buckets)) {\n      Buckets = [Buckets];\n    }\n\n    Buckets = Buckets.map((item) => {\n      return {\n        ...item,\n        BucketInfo: formatBucketInfo(item.BucketInfo),\n        // @ts-ignore\n        Removed: convertStrToBool(item.Removed),\n        DeleteAt: Number(item.DeleteAt),\n        UpdateAt: Number(item.UpdateAt),\n        UpdateTime: Number(item.UpdateTime),\n      };\n    });\n  }\n\n  res.GfSpListPaymentAccountStreamsResponse = {\n    Buckets,\n  };\n\n  return res;\n};\n","import { RequestErrorResponse } from '@/types';\nimport { XMLParser } from 'fast-xml-parser';\n\nexport const parseError = async (data: string) => {\n  const xmlParser = new XMLParser({\n    parseTagValue: false,\n  });\n  const res = xmlParser.parse(data) as RequestErrorResponse;\n\n  return {\n    code: res.Error.Code,\n    message: res.Error.Message,\n  };\n};\n","import { EMPTY_STRING_SHA256, METHOD_GET } from '@/constants';\nimport { ReqMeta, ReadQuotaRequest } from '@/types';\nimport { ReadQuotaResponse } from '@/types/sp';\nimport { generateUrlByBucketName } from '@/utils/asserts/s3';\nimport { XMLParser } from 'fast-xml-parser';\nimport { getSortQuery } from '../auth';\n\n// https://github.com/bnb-chain/greenfield-storage-provider/blob/master/docs/storage-provider-rest-api/query_bucket_read_quota.md\nexport const getQueryBucketReadQuotaMetaInfo = async (\n  endpoint: string,\n  params: ReadQuotaRequest,\n) => {\n  const { year, month, bucketName } = params;\n  const currentDate = new Date();\n  const finalYear = year ? year : currentDate.getFullYear();\n  const finalMonth = month ? month : currentDate.getMonth() + 1;\n  // format month to 2 digits, like \"01\"\n  const formattedMonth = finalMonth.toString().padStart(2, '0');\n\n  const path = '/';\n  const queryMap = {\n    'year-month': `${finalYear}-${formattedMonth}`,\n    'read-quota': 'null',\n  };\n  const query = getSortQuery(queryMap);\n  const url = `${generateUrlByBucketName(endpoint, bucketName)}${path}?${query}`;\n\n  const reqMeta: Partial<ReqMeta> = {\n    contentSHA256: EMPTY_STRING_SHA256,\n    method: METHOD_GET,\n    url: {\n      hostname: new URL(url).hostname,\n      query,\n      path,\n    },\n  };\n\n  const optionsWithOutHeaders: Omit<RequestInit, 'headers'> = {\n    method: METHOD_GET,\n  };\n\n  return {\n    url,\n    optionsWithOutHeaders,\n    reqMeta,\n  };\n};\n\nexport const parseReadQuotaResponse = async (data: string) => {\n  const xmlParser = new XMLParser({\n    parseTagValue: false,\n  });\n  const res = xmlParser.parse(data) as ReadQuotaResponse;\n\n  return res;\n};\n","import fetch from 'cross-fetch';\n\nexport function delayMs(duration: number) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      reject(new Error('request time out'));\n    }, duration);\n  });\n}\n\nconst fetchWithTimeout = async (fetchUrl = '', fetchOptions: any = {}, duration = 30000) => {\n  try {\n    const response = (await Promise.race([\n      delayMs(duration),\n      fetch(fetchUrl, fetchOptions),\n    ])) as Response;\n    return response;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\n\nexport { fetchWithTimeout };\n","import { EMPTY_STRING_SHA256, METHOD_GET } from '@/constants';\nimport { ReqMeta } from '@/types';\nimport { generateUrlByBucketName } from '@/utils/asserts/s3';\nimport { encodePath } from '../auth';\n\n// https://github.com/bnb-chain/greenfield-storage-provider/blob/master/docs/storage-provider-rest-api/get_object.md\nexport const getGetObjectMetaInfo = async (\n  endpoint: string,\n  params: {\n    objectName: string;\n    bucketName: string;\n  },\n) => {\n  const { bucketName, objectName } = params;\n  const path = `/${encodePath(objectName)}`;\n  const query = '';\n\n  const url = new URL(path, generateUrlByBucketName(endpoint, bucketName));\n\n  const reqMeta: Partial<ReqMeta> = {\n    contentSHA256: EMPTY_STRING_SHA256,\n    method: METHOD_GET,\n    url: {\n      hostname: new URL(url).hostname,\n      query,\n      path,\n    },\n    contentType: 'application/octet-stream',\n  };\n\n  const optionsWithOutHeaders: Omit<RequestInit, 'headers'> = {\n    method: METHOD_GET,\n  };\n\n  return {\n    url: url.href,\n    optionsWithOutHeaders,\n    reqMeta,\n  };\n};\n","import { EMPTY_STRING_SHA256, METHOD_PUT } from '@/constants';\nimport { ReqMeta, VisibilityType } from '@/types';\nimport { UploadFile } from '@/types/sp/Common';\nimport { generateUrlByBucketName } from '@/utils/asserts/s3';\nimport { encodePath, getSortQueryParams } from '../auth';\n\n// https://github.com/bnb-chain/greenfield-storage-provider/blob/master/docs/storage-provider-rest-api/put_object.md\nexport const getPutObjectMetaInfo = async (\n  endpoint: string,\n  params: {\n    objectName: string;\n    bucketName: string;\n    contentType: string;\n    body: UploadFile;\n    txnHash?: string;\n    delegatedOpts?: {\n      visibility: VisibilityType;\n      isUpdate?: boolean;\n    };\n  },\n) => {\n  const { bucketName, objectName, txnHash, contentType, body, delegatedOpts } = params;\n  const path = `/${encodePath(objectName)}`;\n  let queryMap = {};\n\n  if (delegatedOpts) {\n    queryMap = {\n      delegate: '',\n      payload_size: String(body.size),\n      visibility: delegatedOpts.visibility.toString(),\n      is_update: String(delegatedOpts.isUpdate || false),\n    };\n  }\n\n  let url = new URL(path, generateUrlByBucketName(endpoint, bucketName));\n  url = getSortQueryParams(url, queryMap);\n\n  const reqMeta: Partial<ReqMeta> = {\n    contentSHA256: EMPTY_STRING_SHA256,\n    txnHash: txnHash,\n    method: METHOD_PUT,\n    url: {\n      hostname: url.hostname,\n      query: url.searchParams.toString(),\n      path,\n    },\n    contentType,\n  };\n\n  const optionsWithOutHeaders: Omit<RequestInit, 'headers'> = {\n    method: METHOD_PUT,\n  };\n\n  return {\n    url: url.href,\n    optionsWithOutHeaders,\n    reqMeta,\n    file: body,\n  };\n};\n","import {\n  getAuthorization,\n  getCanonicalRequest,\n  HTTPHeaderAppDomain,\n  HTTPHeaderAuthorization,\n  HTTPHeaderRegPubKey,\n  HTTPHeaderUserAddress,\n  newRequestHeadersByMeta,\n} from '@/clients/spclient/auth';\nimport { parseError } from '@/clients/spclient/spApis/parseError';\nimport { SP_NOT_AVAILABLE_ERROR_CODE, SP_NOT_AVAILABLE_ERROR_MSG } from '@/constants/http';\nimport { OnProgress } from '@/types';\nimport { AuthType, ReqMeta } from '@/types/auth';\nimport { fetchWithTimeout } from '@/utils/http';\nimport { hexlify } from '@ethersproject/bytes';\nimport { ed25519 } from '@noble/curves/ed25519';\nimport superagent from 'superagent';\nimport { injectable } from 'tsyringe';\nimport { getGetObjectMetaInfo } from './spApis/getObject';\nimport { getPutObjectMetaInfo } from './spApis/putObject';\nimport { assertFileType, assertHttpMethod } from '@/utils';\nimport { UploadFile } from '@/types/sp/Common';\nimport { isNode } from 'browser-or-node';\n\nexport interface ISpClient {\n  callApi(\n    url: string,\n    options: RequestInit,\n    duration: number,\n    customError?: {\n      message: string;\n      code: number;\n    },\n  ): Promise<Response>;\n\n  signHeaders(reqMeta: Partial<ReqMeta>, authType: AuthType): Promise<Headers>;\n\n  /**\n   *\n   * ```\n   * const { PUT_OBJECT: getPutObjectMetaInfo } = client.spClient.getMetaInfo(endpoint, payload);\n   * const {reqMeta, url} = await getPutObjectMetaInfo(endpoint, params);\n   *\n   * axios.put(...)\n   * ```\n   *\n   */\n  getMetaInfo(): {\n    PUT_OBJECT: typeof getPutObjectMetaInfo;\n    GET_OBJECT: typeof getGetObjectMetaInfo;\n  };\n}\n\n@injectable()\nexport class SpClient implements ISpClient {\n  public async callApi(\n    url: string,\n    options: RequestInit,\n    timeout = 30000,\n    customError?: {\n      message: string;\n      code: number;\n    },\n  ) {\n    try {\n      const controller = new AbortController();\n      const _id = setTimeout(() => controller.abort(), timeout);\n      const response = await fetchWithTimeout(\n        url,\n        {\n          ...options,\n          signal: controller.signal,\n        },\n        timeout,\n      );\n      clearTimeout(_id);\n\n      const { status } = response;\n\n      if (status === SP_NOT_AVAILABLE_ERROR_CODE) {\n        throw {\n          code: SP_NOT_AVAILABLE_ERROR_CODE,\n          message: SP_NOT_AVAILABLE_ERROR_MSG,\n          statusCode: status,\n        };\n      }\n\n      if (!response.ok) {\n        const xmlError = await response.text();\n        const { code, message } = await parseError(xmlError);\n\n        throw {\n          code: code || customError?.code,\n          message: message || customError?.message,\n          statusCode: status,\n        };\n      }\n\n      return response;\n    } catch (error) {\n      return Promise.reject(error);\n    }\n  }\n\n  public async callApiV2(\n    url: string,\n    options: RequestInit,\n    timeout = 30000,\n    customError?: {\n      message: string;\n      code: number;\n    },\n  ) {\n    assertHttpMethod(options.method);\n\n    try {\n      const R = new superagent.Request(options.method, url);\n      if (options.headers) {\n        (options.headers as Headers).forEach((v: string, k: string) => {\n          R.set(k, v);\n        });\n      }\n      R.timeout(timeout);\n      R.ok((res) => res.status < 500);\n\n      const response = await R.send();\n      const { status } = response;\n\n      if (status === SP_NOT_AVAILABLE_ERROR_CODE) {\n        throw {\n          code: SP_NOT_AVAILABLE_ERROR_CODE,\n          message: SP_NOT_AVAILABLE_ERROR_MSG,\n          statusCode: status,\n        };\n      }\n\n      if (!response.ok) {\n        const xmlError = response.text;\n        const { code, message } = await parseError(xmlError);\n\n        throw {\n          code: code || customError?.code,\n          message: message || customError?.message,\n          statusCode: status,\n        };\n      }\n\n      return response;\n    } catch (error) {\n      return Promise.reject(error);\n    }\n  }\n\n  /**\n   * just use for uploading object:\n   * because fetch can't support upload progress\n   */\n  public async upload(\n    url: string,\n    options: RequestInit,\n    timeout: number,\n    uploadFile: UploadFile,\n    callback?: {\n      onProgress?: OnProgress;\n      customError?: {\n        message: string;\n        code: number;\n      };\n    },\n  ) {\n    const R = superagent.put(url);\n    R.timeout(timeout);\n    R.ok((res) => res.status < 500);\n\n    if (options.headers) {\n      (options.headers as Headers).forEach((v: string, k: string) => {\n        R.set(k, v);\n      });\n    }\n\n    if (callback && callback.onProgress) {\n      R.on('progress', (e) => {\n        callback.onProgress?.(e);\n      });\n    }\n\n    const file = assertFileType(uploadFile) ? uploadFile.content : uploadFile;\n\n    // https://ladjs.github.io/superagent/docs/index.html#serializing-request-body\n    const sendFile =\n      isNode && R.get('Content-Type') === 'application/json' ? file.toString() : file;\n    if (isNode) {\n      R.buffer(true);\n    }\n\n    try {\n      const response = await R.send(sendFile);\n      const { status } = response;\n\n      if (status === SP_NOT_AVAILABLE_ERROR_CODE) {\n        throw {\n          code: SP_NOT_AVAILABLE_ERROR_CODE,\n          message: SP_NOT_AVAILABLE_ERROR_MSG,\n          statusCode: status,\n        };\n      }\n\n      if (!response.ok) {\n        const xmlError = response.text;\n\n        const { code, message } = await parseError(xmlError);\n\n        throw {\n          code: callback?.customError?.code || code,\n          message: callback?.customError?.message || message,\n          statusCode: status,\n        };\n      }\n\n      return response;\n    } catch (error) {\n      return Promise.reject(error);\n    }\n  }\n\n  public async signHeaders(reqMeta: Partial<ReqMeta>, authType: AuthType) {\n    const metaHeaders: Headers = newRequestHeadersByMeta(reqMeta);\n\n    if (authType.type === 'EDDSA') {\n      const { domain, address, seed } = authType;\n      const pubKey = hexlify(ed25519.getPublicKey(seed.slice(2)));\n\n      metaHeaders.set(HTTPHeaderUserAddress, address);\n      metaHeaders.set(HTTPHeaderAppDomain, domain);\n      metaHeaders.set(HTTPHeaderRegPubKey, pubKey.slice(2));\n    }\n\n    const canonicalRequest = getCanonicalRequest(reqMeta, metaHeaders);\n    const auth = getAuthorization(canonicalRequest, authType);\n    metaHeaders.set(HTTPHeaderAuthorization, auth);\n\n    return metaHeaders;\n  }\n\n  public getMetaInfo() {\n    return {\n      PUT_OBJECT: getPutObjectMetaInfo,\n      GET_OBJECT: getGetObjectMetaInfo,\n    };\n  }\n}\n","import { ListGroupsResponse, ListGroupsResquest } from '@/types';\nimport { formatGroupInfo, convertStrToBool } from '@/types/sp/Common';\nimport { XMLParser } from 'fast-xml-parser';\nimport { getSortQueryParams } from '../auth';\nimport { SPMetaInfo } from './metaInfos';\n\n// https://github.com/bnb-chain/greenfield-storage-provider/blob/master/docs/storage-provider-rest-api/get_group_list.md\nexport const getListGroupMetaInfo = (\n  endpoint: string,\n  params: ListGroupsResquest,\n): Pick<SPMetaInfo, 'url'> => {\n  const { name, prefix, sourceType, limit, offset } = params;\n  const path = '/';\n  const queryMap = {\n    'group-query': 'null',\n    name,\n    prefix,\n    'source-type': sourceType as string,\n    limit: String(limit),\n    offset: String(offset),\n  };\n  let url = new URL(path, endpoint);\n  url = getSortQueryParams(url, queryMap);\n\n  return {\n    url: url.href,\n  };\n};\n\nexport const parseListGroupsResponse = async (data: string) => {\n  const xmlParser = new XMLParser({\n    parseTagValue: false,\n  });\n\n  const res = xmlParser.parse(data) as ListGroupsResponse;\n\n  let Groups = res.GfSpGetGroupListResponse.Groups || [];\n  if (Groups) {\n    if (!Array.isArray(Groups)) {\n      Groups = [Groups];\n    }\n\n    Groups = Groups.map((item) => {\n      return {\n        ...item,\n        CreateAt: Number(item.CreateAt),\n        CreateTime: Number(item.CreateTime),\n        UpdateAt: Number(item.UpdateAt),\n        UpdateTime: Number(item.UpdateTime),\n        // @ts-ignore\n        Removed: convertStrToBool(item.Removed),\n        Group: formatGroupInfo(item.Group),\n      };\n    });\n  }\n\n  res.GfSpGetGroupListResponse = {\n    Groups: Groups,\n    Count: Number(res.GfSpGetGroupListResponse.Count),\n  };\n\n  return res;\n};\n","import { ListGroupsMembersResponse } from '@/types';\nimport { formatGroupInfo, convertStrToBool } from '@/types/sp/Common';\nimport { XMLParser } from 'fast-xml-parser';\n\n// https://github.com/bnb-chain/greenfield-storage-provider/blob/master/docs/storage-provider-rest-api/list_group_members.md\nexport const parseListGroupsMembersResponse = async (data: string) => {\n  const xmlParser = new XMLParser({\n    parseTagValue: false,\n  });\n  const res = xmlParser.parse(data) as ListGroupsMembersResponse;\n\n  let Groups = res.GfSpGetGroupMembersResponse.Groups || [];\n  if (Groups) {\n    if (!Array.isArray(Groups)) {\n      Groups = [Groups];\n    }\n\n    Groups = Groups.map((item) => {\n      return {\n        ...item,\n        CreateAt: Number(item.CreateAt),\n        CreateTime: Number(item.CreateTime),\n        UpdateAt: Number(item.UpdateAt),\n        UpdateTime: Number(item.UpdateTime),\n        // @ts-ignore\n        Removed: convertStrToBool(item.Removed),\n        Group: formatGroupInfo(item.Group),\n      };\n    });\n  }\n\n  return res;\n};\n","import { ListUserGroupsResponse } from '@/types';\nimport { formatGroupInfo, convertStrToBool } from '@/types/sp/Common';\nimport { XMLParser } from 'fast-xml-parser';\n\n// https://github.com/bnb-chain/greenfield-storage-provider/blob/master/docs/storage-provider-rest-api/list_user_groups.md\nexport const parseListUserGroupsResponse = async (data: string) => {\n  const xmlParser = new XMLParser({\n    parseTagValue: false,\n  });\n\n  const res = xmlParser.parse(data) as ListUserGroupsResponse;\n\n  let Groups = res.GfSpGetUserGroupsResponse.Groups || [];\n  if (Groups) {\n    if (!Array.isArray(Groups)) {\n      Groups = [Groups];\n    }\n\n    Groups = Groups.map((item) => {\n      return {\n        ...item,\n        CreateAt: Number(item.CreateAt),\n        CreateTime: Number(item.CreateTime),\n        UpdateAt: Number(item.UpdateAt),\n        UpdateTime: Number(item.UpdateTime),\n        // @ts-ignore\n        Removed: convertStrToBool(item.Removed),\n        Group: formatGroupInfo(item.Group),\n      };\n    });\n  }\n\n  res.GfSpGetUserGroupsResponse = {\n    Groups: Groups,\n  };\n\n  return res;\n};\n","import { formatGroupInfo, convertStrToBool } from '@/types/sp/Common';\nimport { ListUserOwnedGroupsResponse } from '@/types/sp/ListUserOwnedGroups';\nimport { XMLParser } from 'fast-xml-parser';\n\n// https://github.com/bnb-chain/greenfield-storage-provider/blob/master/docs/storage-provider-rest-api/list_user_owned_groups.md\nexport const parseListUserOwnedGroupsResponse = async (data: string) => {\n  const xmlParser = new XMLParser({\n    parseTagValue: false,\n  });\n\n  const res = xmlParser.parse(data) as ListUserOwnedGroupsResponse;\n\n  let Groups = res.GfSpGetUserOwnedGroupsResponse.Groups || [];\n  if (Groups) {\n    if (!Array.isArray(Groups)) {\n      Groups = [Groups];\n    }\n\n    Groups = Groups.map((item) => {\n      return {\n        ...item,\n        CreateAt: Number(item.CreateAt),\n        CreateTime: Number(item.CreateTime),\n        UpdateAt: Number(item.UpdateAt),\n        UpdateTime: Number(item.UpdateTime),\n        // @ts-ignore\n        Removed: convertStrToBool(item.Removed),\n        Group: formatGroupInfo(item.Group),\n      };\n    });\n  }\n\n  res.GfSpGetUserOwnedGroupsResponse = {\n    Groups: Groups,\n  };\n\n  return res;\n};\n","import { VerifyPermissionResponse } from '@/types/sp/VerifyPermission';\nimport { XMLParser } from 'fast-xml-parser';\n\n// https://github.com/bnb-chain/greenfield-storage-provider/blob/master/docs/storage-provider-rest-api/verify_permission.md\nexport const parseVerifyPermissionResponse = async (data: string) => {\n  const xmlParser = new XMLParser({\n    parseTagValue: false,\n  });\n  const res = xmlParser.parse(data) as VerifyPermissionResponse;\n\n  res.QueryVerifyPermissionResponse = {\n    ...res.QueryVerifyPermissionResponse,\n    Effect: Number(res.QueryVerifyPermissionResponse.Effect),\n  };\n\n  return res;\n};\n","export const MsgSettleSDKTypeEIP712 = {\n  Msg1: [\n    {\n      name: 'global_virtual_group_family_id',\n      type: 'uint32',\n    },\n    {\n      name: 'global_virtual_group_ids',\n      type: 'uint32[]',\n    },\n    {\n      name: 'storage_provider',\n      type: 'string',\n    },\n    {\n      name: 'type',\n      type: 'string',\n    },\n  ],\n};\n","import {\n  QueryGlobalVirtualGroupByFamilyIDRequest,\n  QueryGlobalVirtualGroupByFamilyIDResponse,\n  QueryGlobalVirtualGroupFamiliesRequest,\n  QueryGlobalVirtualGroupFamiliesResponse,\n  QueryGlobalVirtualGroupFamilyRequest,\n  QueryGlobalVirtualGroupFamilyResponse,\n  QueryGlobalVirtualGroupRequest,\n  QueryGlobalVirtualGroupResponse,\n  QueryParamsResponse,\n  QuerySPAvailableGlobalVirtualGroupFamiliesRequest,\n  QuerySPAvailableGlobalVirtualGroupFamiliesResponse,\n  QuerySpOptimalGlobalVirtualGroupFamilyRequest,\n  QuerySpOptimalGlobalVirtualGroupFamilyResponse,\n} from '@bnb-chain/greenfield-cosmos-types/greenfield/virtualgroup/query';\nimport { MsgSettle } from '@bnb-chain/greenfield-cosmos-types/greenfield/virtualgroup/tx';\nimport { container, delay, inject, injectable } from 'tsyringe';\nimport { MsgSettleTypeUrl, TxResponse } from '..';\nimport { RpcQueryClient } from '../clients/queryclient';\nimport { TxClient } from '../clients/txClient';\nimport { MsgSettleSDKTypeEIP712 } from '../messages/greenfield/virtualgroup/MsgSettle';\n\nexport interface IVirtualGroup {\n  params(): Promise<QueryParamsResponse>;\n\n  getGlobalVirtualGroup(\n    request: QueryGlobalVirtualGroupRequest,\n  ): Promise<QueryGlobalVirtualGroupResponse>;\n\n  getGlobalVirtualGroupByFamilyID(\n    request: QueryGlobalVirtualGroupByFamilyIDRequest,\n  ): Promise<QueryGlobalVirtualGroupByFamilyIDResponse>;\n\n  getGlobalVirtualGroupFamilies(\n    request: QueryGlobalVirtualGroupFamiliesRequest,\n  ): Promise<QueryGlobalVirtualGroupFamiliesResponse>;\n\n  getGlobalVirtualGroupFamily(\n    request: QueryGlobalVirtualGroupFamilyRequest,\n  ): Promise<QueryGlobalVirtualGroupFamilyResponse>;\n\n  getSpOptimalGlobalVirtualGroupFamily(\n    request: QuerySpOptimalGlobalVirtualGroupFamilyRequest,\n  ): Promise<QuerySpOptimalGlobalVirtualGroupFamilyResponse>;\n\n  getSpAvailableGlobalVirtualGroupFamilies(\n    request: QuerySPAvailableGlobalVirtualGroupFamiliesRequest,\n  ): Promise<QuerySPAvailableGlobalVirtualGroupFamiliesResponse>;\n\n  settle(address: string, msg: MsgSettle): Promise<TxResponse>;\n}\n\n@injectable()\nexport class VirtualGroup implements IVirtualGroup {\n  constructor(@inject(delay(() => TxClient)) private txClient: TxClient) {}\n  private queryClient = container.resolve(RpcQueryClient);\n\n  public async params() {\n    const rpc = await this.queryClient.getVirtualGroupClient();\n    return await rpc.Params();\n  }\n\n  public async getGlobalVirtualGroup(request: QueryGlobalVirtualGroupRequest) {\n    const rpc = await this.queryClient.getVirtualGroupClient();\n    return await rpc.GlobalVirtualGroup(request);\n  }\n\n  public async getGlobalVirtualGroupByFamilyID(request: QueryGlobalVirtualGroupByFamilyIDRequest) {\n    const rpc = await this.queryClient.getVirtualGroupClient();\n    return await rpc.GlobalVirtualGroupByFamilyID(request);\n  }\n\n  public async getGlobalVirtualGroupFamilies(request: QueryGlobalVirtualGroupFamiliesRequest) {\n    const rpc = await this.queryClient.getVirtualGroupClient();\n    return await rpc.GlobalVirtualGroupFamilies(request);\n  }\n\n  public async getGlobalVirtualGroupFamily(request: QueryGlobalVirtualGroupFamilyRequest) {\n    const rpc = await this.queryClient.getVirtualGroupClient();\n    return await rpc.GlobalVirtualGroupFamily(request);\n  }\n\n  public async getSpOptimalGlobalVirtualGroupFamily(\n    request: QuerySpOptimalGlobalVirtualGroupFamilyRequest,\n  ) {\n    const rpc = await this.queryClient.getVirtualGroupClient();\n    return await rpc.QuerySpOptimalGlobalVirtualGroupFamily(request);\n  }\n\n  public async getSpAvailableGlobalVirtualGroupFamilies(\n    request: QuerySPAvailableGlobalVirtualGroupFamiliesRequest,\n  ) {\n    const rpc = await this.queryClient.getVirtualGroupClient();\n    return await rpc.QuerySpAvailableGlobalVirtualGroupFamilies(request);\n  }\n\n  public async settle(address: string, msg: MsgSettle) {\n    return await this.txClient.tx(\n      MsgSettleTypeUrl,\n      address,\n      MsgSettleSDKTypeEIP712,\n      MsgSettle.toSDK(msg),\n      MsgSettle.encode(msg).finish(),\n    );\n  }\n}\n","import { encodePath, HTTPHeaderUserAddress } from '../clients/spclient/auth';\nimport {\n  getListGroupMetaInfo,\n  parseListGroupsResponse,\n} from '../clients/spclient/spApis/listGroups';\nimport { parseListGroupsMembersResponse } from '../clients/spclient/spApis/listGroupsMembers';\nimport { parseListUserGroupsResponse } from '../clients/spclient/spApis/listUserGroups';\nimport { parseListUserOwnedGroupsResponse } from '../clients/spclient/spApis/listUserOwnedGroups';\nimport { parseError } from '../clients/spclient/spApis/parseError';\nimport { parseVerifyPermissionResponse } from '../clients/spclient/spApis/verifyPermission';\nimport { SpClient } from '../clients/spclient/spClient';\nimport { METHOD_GET, NORMAL_ERROR_CODE } from '../constants/http';\nimport { ListUserOwnedGroupsResponse } from '../types/sp/ListUserOwnedGroups';\nimport { actionTypeFromJSON } from '@bnb-chain/greenfield-cosmos-types/greenfield/permission/common';\nimport {\n  QueryGlobalSpStorePriceByTimeRequest,\n  QueryGlobalSpStorePriceByTimeResponse,\n  QueryParamsResponse,\n  QuerySpStoragePriceRequest,\n  QuerySpStoragePriceResponse,\n  QueryStorageProviderByOperatorAddressRequest,\n  QueryStorageProviderByOperatorAddressResponse,\n  QueryStorageProviderMaintenanceRecordsRequest,\n  QueryStorageProviderMaintenanceRecordsResponse,\n} from '@bnb-chain/greenfield-cosmos-types/greenfield/sp/query';\nimport { Status, StorageProvider } from '@bnb-chain/greenfield-cosmos-types/greenfield/sp/types';\nimport { container, injectable } from 'tsyringe';\nimport type {\n  ListGroupsMembersRequest,\n  ListGroupsMembersResponse,\n  ListGroupsResponse,\n  ListGroupsResquest,\n  ListUserGroupsResponse,\n  ListUserGroupsResquest,\n  ListUserOwnedGroupsRequest,\n  SpResponse,\n  VerifyPermissionRequest,\n  VerifyPermissionResponse,\n} from '..';\nimport { RpcQueryClient } from '../clients/queryclient';\nimport { Bucket } from './bucket';\nimport { VirtualGroup } from './virtualGroup';\n\nexport interface ISp {\n  /**\n   * return the storage provider info on chain\n\t  isInService indicates if only display the sp with STATUS_IN_SERVICE status\n   */\n  getStorageProviders(): Promise<StorageProvider[]>;\n\n  /**\n   * return the sp info with the sp chain address\n   */\n  getStorageProviderInfo(spId: number): Promise<StorageProvider | undefined>;\n\n  /**\n   * get the latest storage price of specific sp\n   */\n  getQuerySpStoragePrice(request: QuerySpStoragePriceRequest): Promise<QuerySpStoragePriceResponse>;\n\n  /**\n   * get global store price by time\n   */\n  getQueryGlobalSpStorePriceByTime(\n    request: QueryGlobalSpStorePriceByTimeRequest,\n  ): Promise<QueryGlobalSpStorePriceByTimeResponse>;\n\n  /**\n   * Queries a StorageProvider by specify operator address.\n   */\n  getStorageProviderByOperatorAddress(\n    request: QueryStorageProviderByOperatorAddressRequest,\n  ): Promise<QueryStorageProviderByOperatorAddressResponse>;\n\n  /**\n   * Queries a StorageProvider by specify operator address.\n   */\n  getStorageProviderMaintenanceRecordsByOperatorAddress(\n    request: QueryStorageProviderMaintenanceRecordsRequest,\n  ): Promise<QueryStorageProviderMaintenanceRecordsResponse>;\n\n  params(): Promise<QueryParamsResponse>;\n\n  listGroups(params: ListGroupsResquest): Promise<SpResponse<ListGroupsResponse>>;\n\n  listGroupsMembers(\n    params: ListGroupsMembersRequest,\n  ): Promise<SpResponse<ListGroupsMembersResponse>>;\n\n  listUserGroups(params: ListUserGroupsResquest): Promise<SpResponse<ListUserGroupsResponse>>;\n\n  listUserOwnedGroups(\n    params: ListUserOwnedGroupsRequest,\n  ): Promise<SpResponse<ListUserOwnedGroupsResponse>>;\n\n  getSPUrlByBucket(bucketName: string): Promise<string>;\n\n  getSPUrlByPrimaryAddr(parimaryAddr: string): Promise<string>;\n\n  getSPUrlById(primaryId: number): Promise<string>;\n\n  verifyPermission(params: VerifyPermissionRequest): Promise<SpResponse<VerifyPermissionResponse>>;\n}\n\n@injectable()\nexport class Sp implements ISp {\n  private bucket = container.resolve(Bucket);\n  private queryClient = container.resolve(RpcQueryClient);\n  private virtualGroup = container.resolve(VirtualGroup);\n  private spClient = container.resolve(SpClient);\n\n  public async getStorageProviders() {\n    const rpc = await this.queryClient.getSpQueryClient();\n    const res = await rpc.StorageProviders();\n    return res.sps;\n  }\n\n  public async getStorageProviderInfo(spId: number) {\n    const rpc = await this.queryClient.getSpQueryClient();\n    const res = await rpc.StorageProvider({\n      id: spId,\n    });\n    return res.storageProvider;\n  }\n\n  public async getQuerySpStoragePrice(request: QuerySpStoragePriceRequest) {\n    const rpc = await this.queryClient.getSpQueryClient();\n    return await rpc.QuerySpStoragePrice(request);\n  }\n\n  public async getQueryGlobalSpStorePriceByTime(request: QueryGlobalSpStorePriceByTimeRequest) {\n    const rpc = await this.queryClient.getSpQueryClient();\n    return await rpc.QueryGlobalSpStorePriceByTime(request);\n  }\n\n  public async getStorageProviderByOperatorAddress(\n    request: QueryStorageProviderByOperatorAddressRequest,\n  ) {\n    const rpc = await this.queryClient.getSpQueryClient();\n    return await rpc.StorageProviderByOperatorAddress(request);\n  }\n\n  public async getStorageProviderMaintenanceRecordsByOperatorAddress(\n    request: QueryStorageProviderMaintenanceRecordsRequest,\n  ) {\n    const rpc = await this.queryClient.getSpQueryClient();\n    return await rpc.StorageProviderMaintenanceRecordsByOperatorAddress(request);\n  }\n\n  public async getSPUrlById(primaryId: number) {\n    const spList = await this.getStorageProviders();\n    return spList.filter((sp) => sp.id === primaryId)[0].endpoint;\n  }\n\n  public async getSPUrlByBucket(bucketName: string) {\n    const { bucketInfo } = await this.bucket.headBucket(bucketName);\n\n    if (!bucketInfo) throw new Error('Get bucket info error');\n\n    const familyResp = await this.virtualGroup.getGlobalVirtualGroupFamily({\n      familyId: bucketInfo.globalVirtualGroupFamilyId,\n    });\n\n    const spList = await this.getStorageProviders();\n    const spId = familyResp.globalVirtualGroupFamily?.primarySpId;\n\n    return spList.filter((sp) => sp.id === spId)[0].endpoint;\n  }\n\n  public async getSPUrlByPrimaryAddr(parimaryAddr: string) {\n    const sps = await this.getStorageProviders();\n    return sps.filter((sp) => sp.operatorAddress === parimaryAddr)[0].endpoint;\n  }\n\n  public async params() {\n    const rpc = await this.queryClient.getSpQueryClient();\n    return await rpc.Params();\n  }\n\n  public async getInServiceSP() {\n    const sps = await this.getStorageProviders();\n    const spList = sps.filter((sp) => sp.status === Status.STATUS_IN_SERVICE);\n    if (spList.length === 0) throw new Error('No storage provider found');\n    return spList[0];\n  }\n\n  public async listGroups(params: ListGroupsResquest) {\n    try {\n      const { name, prefix } = params;\n\n      let res: ListGroupsResponse = {\n        GfSpGetGroupListResponse: {\n          Groups: [],\n          Count: 0,\n        },\n      };\n\n      if (name === '' || prefix === '') {\n        return {\n          code: 0,\n          message: 'success',\n          body: res,\n        };\n      }\n\n      const sp = await this.getInServiceSP();\n      const { url } = getListGroupMetaInfo(sp.endpoint, params);\n\n      const result = await this.spClient.callApi(\n        url,\n        {\n          headers: {},\n          method: METHOD_GET,\n        },\n        3000,\n      );\n      const { status } = result;\n      if (!result.ok) {\n        const xmlError = await result.text();\n        const { code, message } = await parseError(xmlError);\n        throw {\n          code: code || -1,\n          message: message || 'error',\n          statusCode: status,\n        };\n      }\n\n      const xmlData = await result.text();\n      res = await parseListGroupsResponse(xmlData);\n\n      return {\n        code: 0,\n        message: 'success',\n        statusCode: status,\n        body: res,\n      };\n    } catch (error: any) {\n      return {\n        code: -1,\n        message: error.message,\n        statusCode: error?.statusCode || NORMAL_ERROR_CODE,\n      };\n    }\n  }\n\n  public async verifyPermission(params: VerifyPermissionRequest) {\n    try {\n      const { action, bucketName, objectName, operator } = params;\n\n      const sp = await this.getInServiceSP();\n      let url = `${sp.endpoint}/permission/${operator}/${bucketName}/${actionTypeFromJSON(action)}`;\n\n      if (objectName) {\n        url += `?object=${encodePath(objectName)}`;\n      }\n\n      const result = await this.spClient.callApi(\n        url,\n        {\n          headers: {},\n          method: METHOD_GET,\n        },\n        3000,\n      );\n      const { status } = result;\n      if (!result.ok) {\n        const xmlError = await result.text();\n        const { code, message } = await parseError(xmlError);\n        throw {\n          code: code || -1,\n          message: message || 'error',\n          statusCode: status,\n        };\n      }\n\n      const xmlData = await result.text();\n      const res = await parseVerifyPermissionResponse(xmlData);\n\n      return {\n        code: 0,\n        message: 'success',\n        statusCode: status,\n        body: res,\n      };\n    } catch (error: any) {\n      return {\n        code: -1,\n        message: error.message,\n        statusCode: error?.statusCode || NORMAL_ERROR_CODE,\n      };\n    }\n  }\n\n  public async listGroupsMembers(params: ListGroupsMembersRequest) {\n    try {\n      const { groupId, limit, startAfter } = params;\n      const sp = await this.getInServiceSP();\n      let url = `${sp.endpoint}?group-members&group-id=${groupId}`;\n\n      if (limit) {\n        url += `&limit=${limit}`;\n      }\n      if (startAfter) {\n        url += `&start-after=${startAfter}`;\n      }\n\n      const result = await this.spClient.callApi(\n        url,\n        {\n          headers: {},\n          method: METHOD_GET,\n        },\n        3000,\n      );\n      const { status } = result;\n      if (!result.ok) {\n        const xmlError = await result.text();\n        const { code, message } = await parseError(xmlError);\n        throw {\n          code: code || -1,\n          message: message || 'error',\n          statusCode: status,\n        };\n      }\n\n      const xmlData = await result.text();\n      const res = await parseListGroupsMembersResponse(xmlData);\n\n      return {\n        code: 0,\n        message: 'success',\n        statusCode: status,\n        body: res,\n      };\n    } catch (error: any) {\n      return {\n        code: -1,\n        message: error.message,\n        statusCode: error?.statusCode || NORMAL_ERROR_CODE,\n      };\n    }\n  }\n\n  public async listUserGroups(params: ListUserGroupsResquest) {\n    try {\n      const { address, limit, startAfter } = params;\n      const sp = await this.getInServiceSP();\n      let url = `${sp.endpoint}?user-groups`;\n\n      if (limit) {\n        url += `&limit=${limit}`;\n      }\n      if (startAfter) {\n        url += `&start-after=${startAfter}`;\n      }\n\n      const headers = new Headers({\n        [HTTPHeaderUserAddress]: address,\n      });\n      const result = await this.spClient.callApi(\n        url,\n        {\n          headers,\n          method: METHOD_GET,\n        },\n        3000,\n      );\n      const { status } = result;\n      if (!result.ok) {\n        const xmlError = await result.text();\n        const { code, message } = await parseError(xmlError);\n        throw {\n          code: code || -1,\n          message: message || 'error',\n          statusCode: status,\n        };\n      }\n\n      const xmlData = await result.text();\n      const res = await parseListUserGroupsResponse(xmlData);\n\n      return {\n        code: 0,\n        message: 'success',\n        statusCode: status,\n        body: res,\n      };\n    } catch (error: any) {\n      return {\n        code: -1,\n        message: error.message,\n        statusCode: error?.statusCode || NORMAL_ERROR_CODE,\n      };\n    }\n  }\n\n  public async listUserOwnedGroups(params: ListUserOwnedGroupsRequest) {\n    try {\n      const { address, limit, startAfter } = params;\n      const sp = await this.getInServiceSP();\n      let url = `${sp.endpoint}?owned-groups`;\n\n      if (limit) {\n        url += `&limit=${limit}`;\n      }\n      if (startAfter) {\n        url += `&start-after=${startAfter}`;\n      }\n\n      const headers = new Headers({\n        [HTTPHeaderUserAddress]: address,\n      });\n      const result = await this.spClient.callApi(\n        url,\n        {\n          headers,\n          method: METHOD_GET,\n        },\n        3000,\n      );\n      const { status } = result;\n      if (!result.ok) {\n        const xmlError = await result.text();\n        const { code, message } = await parseError(xmlError);\n        throw {\n          code: code || -1,\n          message: message || 'error',\n          statusCode: status,\n        };\n      }\n\n      const xmlData = await result.text();\n      const res = await parseListUserOwnedGroupsResponse(xmlData);\n\n      return {\n        code: 0,\n        message: 'success',\n        statusCode: status,\n        body: res,\n      };\n    } catch (error: any) {\n      return {\n        code: -1,\n        message: error.message,\n        statusCode: error?.statusCode || NORMAL_ERROR_CODE,\n      };\n    }\n  }\n}\n","import { TxClient } from '../clients/txClient';\nimport { getMsgPutPolicySDKTypeEIP712 } from '../messages/greenfield';\nimport { MsgDeletePolicySDKTypeEIP712 } from '../messages/greenfield/storage/MsgDeletePolicy';\nimport {\n  QueryGroupMembersExistRequest,\n  QueryGroupMembersExistResponse,\n  QueryGroupsExistByIdRequest,\n  QueryGroupsExistRequest,\n  QueryGroupsExistResponse,\n  QueryLockFeeRequest,\n  QueryLockFeeResponse,\n  QueryParamsResponse,\n  QueryPolicyByIdRequest,\n  QueryPolicyByIdResponse,\n  QueryPolicyForAccountRequest,\n  QueryPolicyForAccountResponse,\n  QueryPolicyForGroupRequest,\n  QueryPolicyForGroupResponse,\n} from '@bnb-chain/greenfield-cosmos-types/greenfield/storage/query';\nimport {\n  MsgDeletePolicy,\n  MsgPutPolicy,\n  MsgSetTag,\n} from '@bnb-chain/greenfield-cosmos-types/greenfield/storage/tx';\nimport { container, delay, inject, injectable } from 'tsyringe';\nimport {\n  fromTimestamp,\n  MsgDeletePolicyTypeUrl,\n  MsgPutPolicyTypeUrl,\n  MsgSetTagTypeUrl,\n  TxResponse,\n} from '..';\nimport { RpcQueryClient } from '../clients/queryclient';\nimport { getMsgSetTagSDKTypeEIP712 } from '@/messages/greenfield/storage/MsgSetTag';\n\nexport interface IStorage {\n  params(): Promise<QueryParamsResponse>;\n\n  putPolicy(msg: MsgPutPolicy): Promise<TxResponse>;\n\n  deletePolicy(msg: MsgDeletePolicy): Promise<TxResponse>;\n\n  setTag(msg: MsgSetTag): Promise<TxResponse>;\n\n  getPolicyForGroup(request: QueryPolicyForGroupRequest): Promise<QueryPolicyForGroupResponse>;\n\n  getQueryPolicyForAccount(\n    request: QueryPolicyForAccountRequest,\n  ): Promise<QueryPolicyForAccountResponse>;\n\n  getQueryPolicyForGroup(request: QueryPolicyForGroupRequest): Promise<QueryPolicyForGroupResponse>;\n\n  getQueryPolicyById(request: QueryPolicyByIdRequest): Promise<QueryPolicyByIdResponse>;\n\n  queryLockFee(request: QueryLockFeeRequest): Promise<QueryLockFeeResponse>;\n\n  queryGroupMembersExist(\n    request: QueryGroupMembersExistRequest,\n  ): Promise<QueryGroupMembersExistResponse>;\n\n  queryGroupExist(request: QueryGroupsExistRequest): Promise<QueryGroupsExistResponse>;\n\n  queryGroupsExistById(request: QueryGroupsExistByIdRequest): Promise<QueryGroupsExistResponse>;\n}\n\n@injectable()\nexport class Storage implements IStorage {\n  constructor(@inject(delay(() => TxClient)) private txClient: TxClient) {}\n  private queryClient = container.resolve(RpcQueryClient);\n\n  public async params() {\n    const rpc = await this.queryClient.getStorageQueryClient();\n    return await rpc.Params();\n  }\n\n  public async putPolicy(msg: MsgPutPolicy) {\n    const toSdk = MsgPutPolicy.toSDK(msg);\n    return await this.txClient.tx(\n      MsgPutPolicyTypeUrl,\n      msg.operator,\n      getMsgPutPolicySDKTypeEIP712(msg.statements[0].resources),\n      {\n        ...toSdk,\n        expiration_time: msg.expirationTime ? fromTimestamp(msg.expirationTime) : '',\n        statements: toSdk.statements.map((e) => {\n          if (e.expiration_time) {\n            // @ts-ignore\n            e.expiration_time = fromTimestamp(e.expiration_time);\n          } else {\n            // @ts-ignore\n            e.expiration_time = '';\n          }\n\n          if (e.resources.length == 0) {\n            // @ts-ignore\n            e.resources = null;\n          }\n          return e;\n        }),\n      },\n      MsgPutPolicy.encode(msg).finish(),\n    );\n  }\n\n  public async deletePolicy(msg: MsgDeletePolicy) {\n    return await this.txClient.tx(\n      MsgDeletePolicyTypeUrl,\n      msg.operator,\n      MsgDeletePolicySDKTypeEIP712,\n      MsgDeletePolicy.toSDK(msg),\n      MsgDeletePolicy.encode(msg).finish(),\n    );\n  }\n\n  public async setTag(msg: MsgSetTag) {\n    const isTagsEmpty = msg?.tags?.tags?.length === 0;\n\n    const MsgSetTagSDKTypeEIP712 = getMsgSetTagSDKTypeEIP712(isTagsEmpty);\n\n    return await this.txClient.tx(\n      MsgSetTagTypeUrl,\n      msg.operator,\n      MsgSetTagSDKTypeEIP712,\n      MsgSetTag.toSDK(msg),\n      MsgSetTag.encode(msg).finish(),\n    );\n  }\n\n  public async getPolicyForGroup(request: QueryPolicyForGroupRequest) {\n    const rpc = await this.queryClient.getStorageQueryClient();\n    return await rpc.QueryPolicyForGroup(request);\n  }\n\n  public async getQueryPolicyForAccount(request: QueryPolicyForAccountRequest) {\n    const rpc = await this.queryClient.getStorageQueryClient();\n    return await rpc.QueryPolicyForAccount(request);\n  }\n\n  public async getQueryPolicyForGroup(request: QueryPolicyForGroupRequest) {\n    const rpc = await this.queryClient.getStorageQueryClient();\n    return await rpc.QueryPolicyForGroup(request);\n  }\n\n  public async getQueryPolicyById(request: QueryPolicyByIdRequest) {\n    const rpc = await this.queryClient.getStorageQueryClient();\n    return await rpc.QueryPolicyById(request);\n  }\n\n  public async queryLockFee(request: QueryLockFeeRequest) {\n    const rpc = await this.queryClient.getStorageQueryClient();\n    return await rpc.QueryLockFee(request);\n  }\n\n  public async queryGroupMembersExist(request: QueryGroupMembersExistRequest) {\n    const rpc = await this.queryClient.getStorageQueryClient();\n    return await rpc.QueryGroupMembersExist(request);\n  }\n\n  public async queryGroupExist(request: QueryGroupsExistRequest) {\n    const rpc = await this.queryClient.getStorageQueryClient();\n    return await rpc.QueryGroupsExist(request);\n  }\n\n  public async queryGroupsExistById(request: QueryGroupsExistByIdRequest) {\n    const rpc = await this.queryClient.getStorageQueryClient();\n    return await rpc.QueryGroupsExistById(request);\n  }\n}\n","export const MsgCancelMigrateBucketSDKTypeEIP712 = {\n  Msg1: [\n    {\n      name: 'bucket_name',\n      type: 'string',\n    },\n    {\n      name: 'operator',\n      type: 'string',\n    },\n    {\n      name: 'type',\n      type: 'string',\n    },\n  ],\n} as const;\n","import {\n  MsgCreateBucketSDKTypeEIP712,\n  MsgDeleteBucketSDKTypeEIP712,\n  MsgMigrateBucketSDKTypeEIP712,\n  MsgToggleSPAsDelegatedAgentSDKTypeEIP712,\n  MsgUpdateBucketInfoSDKTypeEIP712,\n} from '@/messages/greenfield';\nimport { MsgSetBucketFlowRateLimitSDKTypeEIP712 } from '@/messages/greenfield/storage/MsgSetBucketFlowRateLimit';\nimport { assertAuthType, assertStringRequire } from '@/utils/asserts/params';\nimport { UInt64Value } from '@bnb-chain/greenfield-cosmos-types/greenfield/common/wrapper';\nimport {\n  ActionType,\n  Principal,\n  PrincipalType,\n  principalTypeFromJSON,\n} from '@bnb-chain/greenfield-cosmos-types/greenfield/permission/common';\nimport { visibilityTypeFromJSON } from '@bnb-chain/greenfield-cosmos-types/greenfield/storage/common';\nimport {\n  QueryBucketNFTResponse,\n  QueryHeadBucketExtraResponse,\n  QueryHeadBucketResponse,\n  QueryNFTRequest,\n  QueryPolicyForAccountRequest,\n  QueryPolicyForAccountResponse,\n  QueryVerifyPermissionResponse,\n} from '@bnb-chain/greenfield-cosmos-types/greenfield/storage/query';\nimport {\n  MsgCancelMigrateBucket,\n  MsgCreateBucket,\n  MsgDeleteBucket,\n  MsgDeletePolicy,\n  MsgMigrateBucket,\n  MsgPutPolicy,\n  MsgSetBucketFlowRateLimit,\n  MsgToggleSPAsDelegatedAgent,\n  MsgUpdateBucketInfo,\n} from '@bnb-chain/greenfield-cosmos-types/greenfield/storage/tx';\nimport { PickVGFStrategy } from '@bnb-chain/greenfield-cosmos-types/greenfield/virtualgroup/common';\nimport { bytesFromBase64 } from '@bnb-chain/greenfield-cosmos-types/helpers';\nimport { Headers } from 'cross-fetch';\nimport Long from 'long';\nimport { container, delay, inject, injectable } from 'tsyringe';\nimport {\n  AuthType,\n  GRNToString,\n  MsgCancelMigrateBucketTypeUrl,\n  MsgCreateBucketTypeUrl,\n  MsgDeleteBucketTypeUrl,\n  MsgMigrateBucketTypeUrl,\n  MsgSetBucketFlowRateLimitTypeUrl,\n  MsgToggleSPAsDelegatedAgentTypeUrl,\n  MsgUpdateBucketInfoTypeUrl,\n  TxResponse,\n  newBucketGRN,\n} from '..';\nimport { RpcQueryClient } from '../clients/queryclient';\nimport { HTTPHeaderUserAddress } from '../clients/spclient/auth';\nimport { getApprovalMetaInfo } from '../clients/spclient/spApis/approval';\nimport {\n  getBucketMetaInfo,\n  parseGetBucketMetaResponse,\n} from '../clients/spclient/spApis/getBucketMeta';\nimport {\n  getUserBucketMetaInfo,\n  parseGetUserBucketsResponse,\n} from '../clients/spclient/spApis/getUserBuckets';\nimport {\n  getListBucketReadRecordMetaInfo,\n  parseListBucketReadRecordResponse,\n} from '../clients/spclient/spApis/listBucketReadRecords';\nimport {\n  getListBucketsByIDsMetaInfo,\n  parseListBucketsByIdsResponse,\n} from '../clients/spclient/spApis/listBucketsByIds';\nimport {\n  getListBucketByPaymentMetaInfo,\n  parseListBucketByPaymentResponse,\n} from '../clients/spclient/spApis/listBucketsByPayment';\nimport { parseError } from '../clients/spclient/spApis/parseError';\nimport {\n  getQueryBucketReadQuotaMetaInfo,\n  parseReadQuotaResponse,\n} from '../clients/spclient/spApis/queryBucketReadQuota';\nimport { SpClient } from '../clients/spclient/spClient';\nimport { TxClient } from '../clients/txClient';\nimport { METHOD_GET, NORMAL_ERROR_CODE } from '../constants/http';\nimport type {\n  GetBucketMetaRequest,\n  GetBucketMetaResponse,\n  GetUserBucketsRequest,\n  GetUserBucketsResponse,\n  IQuotaProps,\n  ListBucketReadRecordRequest,\n  ListBucketReadRecordResponse,\n  ListBucketsByIDsRequest,\n  ListBucketsByIDsResponse,\n  ListBucketsByPaymentAccountRequest,\n  ListBucketsByPaymentAccountResponse,\n  MigrateBucketApprovalRequest,\n  MigrateBucketApprovalResponse,\n  ReadQuotaRequest,\n  SpResponse,\n} from '../types/sp';\nimport { verifyAddress, verifyBucketName, verifyUrl } from '../utils/asserts/s3';\nimport { decodeObjectFromHexString } from '../utils/encoding';\nimport { Sp } from './sp';\nimport { Storage } from './storage';\nimport { VirtualGroup } from './virtualGroup';\nimport { MsgCancelMigrateBucketSDKTypeEIP712 } from '@/messages/greenfield/storage/MsgCancelMigrateBucket';\n\nexport interface IBucket {\n  /**\n   * send createBucket txn to greenfield chain\n   */\n  createBucket(msg: MsgCreateBucket): Promise<TxResponse>;\n\n  deleteBucket(msg: MsgDeleteBucket): Promise<TxResponse>;\n\n  deleteBucketPolicy(\n    operator: string,\n    bucketName: string,\n    principalAddr: string,\n    principalType: keyof typeof PrincipalType,\n  ): Promise<TxResponse>;\n\n  toggleSpAsDelegatedAgent(msg: MsgToggleSPAsDelegatedAgent): Promise<TxResponse>;\n\n  getBucketMeta(params: GetBucketMetaRequest): Promise<SpResponse<GetBucketMetaResponse>>;\n\n  getBucketPolicy(request: QueryPolicyForAccountRequest): Promise<QueryPolicyForAccountResponse>;\n\n  /**\n   * return quota info of bucket of current month, include chain quota, free quota and consumed quota\n   */\n  getBucketReadQuota(\n    configParam: ReadQuotaRequest,\n    authType: AuthType,\n  ): Promise<SpResponse<IQuotaProps>>;\n\n  getMigrateBucketApproval(\n    params: MigrateBucketApprovalRequest,\n    authType: AuthType,\n  ): Promise<SpResponse<string>>;\n\n  /**\n   * check if the permission of bucket is allowed to the user.\n   */\n  getVerifyPermission(\n    bucketName: string,\n    operator: string,\n    actionType: ActionType,\n  ): Promise<QueryVerifyPermissionResponse>;\n\n  /**\n   * query the bucketInfo on chain, return the bucket info if exists\n   */\n  headBucket(bucketName: string): Promise<QueryHeadBucketResponse>;\n\n  /**\n   * query the bucketInfo on chain by bucketId, return the bucket info if exists\n   */\n  headBucketById(bucketId: string): Promise<QueryHeadBucketResponse>;\n\n  headBucketExtra(bucketName: string): Promise<QueryHeadBucketExtraResponse>;\n\n  headBucketNFT(request: QueryNFTRequest): Promise<QueryBucketNFTResponse>;\n\n  listBucketReadRecords(\n    params: ListBucketReadRecordRequest,\n    authType: AuthType,\n  ): Promise<SpResponse<ListBucketReadRecordResponse>>;\n\n  listBuckets(\n    configParam: GetUserBucketsRequest,\n  ): Promise<SpResponse<GetUserBucketsResponse['GfSpGetUserBucketsResponse']['Buckets']>>;\n\n  listBucketsByIds(params: ListBucketsByIDsRequest): Promise<SpResponse<ListBucketsByIDsResponse>>;\n\n  /**\n   * ListBucketsByPaymentAccount list buckets by payment account\n   */\n  listBucketsByPaymentAccount(\n    params: ListBucketsByPaymentAccountRequest,\n  ): Promise<SpResponse<ListBucketsByPaymentAccountResponse>>;\n\n  migrateBucket(params: MigrateBucketApprovalRequest, authType: AuthType): Promise<TxResponse>;\n\n  cancelMigrateBucket(msg: MsgCancelMigrateBucket): Promise<TxResponse>;\n\n  putBucketPolicy(bucketName: string, srcMsg: Omit<MsgPutPolicy, 'resource'>): Promise<TxResponse>;\n\n  /**\n   * Update the bucket meta on chain, including read quota, payment address or visibility. It will send the MsgUpdateBucketInfo msg to greenfield to update the meta.\n   */\n  updateBucketInfo(\n    srcMsg: Omit<MsgUpdateBucketInfo, 'chargedReadQuota'> & { chargedReadQuota?: string },\n  ): Promise<TxResponse>;\n\n  /**\n   * Get the flow rate limit of the bucket.\n   */\n  setPaymentAccountFlowRateLimit(msg: MsgSetBucketFlowRateLimit): Promise<TxResponse>;\n}\n\n@injectable()\nexport class Bucket implements IBucket {\n  constructor(\n    @inject(delay(() => TxClient)) private txClient: TxClient,\n    @inject(delay(() => Sp)) private sp: Sp,\n    @inject(delay(() => Storage)) private storage: Storage,\n    @inject(delay(() => VirtualGroup)) private virtualGroup: VirtualGroup,\n  ) {}\n\n  private queryClient = container.resolve(RpcQueryClient);\n  private spClient = container.resolve(SpClient);\n\n  public async setPaymentAccountFlowRateLimit(msg: MsgSetBucketFlowRateLimit) {\n    return await this.txClient.tx(\n      MsgSetBucketFlowRateLimitTypeUrl,\n      msg.operator,\n      MsgSetBucketFlowRateLimitSDKTypeEIP712,\n      MsgSetBucketFlowRateLimit.toSDK(msg),\n      MsgSetBucketFlowRateLimit.encode(msg).finish(),\n    );\n  }\n\n  public async createBucket(msg: MsgCreateBucket) {\n    assertStringRequire(msg.primarySpAddress, 'Primary sp address is missing');\n    assertStringRequire(msg.creator, 'Empty creator address');\n    verifyBucketName(msg.bucketName);\n\n    const { storageProvider } = await this.sp.getStorageProviderByOperatorAddress({\n      operatorAddress: msg.primarySpAddress,\n    });\n\n    if (!storageProvider) {\n      throw new Error(`Storage provider ${msg.primarySpAddress} not found`);\n    }\n\n    const { globalVirtualGroupFamilyId } =\n      await this.virtualGroup.getSpOptimalGlobalVirtualGroupFamily({\n        spId: storageProvider.id,\n        pickVgfStrategy: PickVGFStrategy.Strategy_Oldest_Create_Time,\n      });\n\n    const createBucketMsg: MsgCreateBucket = {\n      ...msg,\n      primarySpApproval: {\n        globalVirtualGroupFamilyId: globalVirtualGroupFamilyId,\n        expiredHeight: Long.fromInt(0),\n        sig: Uint8Array.from([]),\n      },\n    };\n\n    return await this.txClient.tx(\n      MsgCreateBucketTypeUrl,\n      msg.creator,\n      MsgCreateBucketSDKTypeEIP712,\n      {\n        ...MsgCreateBucket.toSDK(createBucketMsg),\n        primary_sp_approval: {\n          expired_height: '0',\n          global_virtual_group_family_id: globalVirtualGroupFamilyId,\n        },\n        charged_read_quota: createBucketMsg.chargedReadQuota.toString(),\n      },\n      MsgCreateBucket.encode(createBucketMsg).finish(),\n    );\n  }\n\n  public async deleteBucket(msg: MsgDeleteBucket) {\n    return await this.txClient.tx(\n      MsgDeleteBucketTypeUrl,\n      msg.operator,\n      MsgDeleteBucketSDKTypeEIP712,\n      MsgDeleteBucket.toSDK(msg),\n      MsgDeleteBucket.encode(msg).finish(),\n    );\n  }\n\n  public async toggleSpAsDelegatedAgent(msg: MsgToggleSPAsDelegatedAgent) {\n    const { bucketInfo } = await this.headBucket(msg.bucketName);\n\n    if (!bucketInfo) {\n      throw new Error(`Bucket ${msg.bucketName} not found`);\n    }\n\n    return await this.txClient.tx(\n      MsgToggleSPAsDelegatedAgentTypeUrl,\n      msg.operator,\n      MsgToggleSPAsDelegatedAgentSDKTypeEIP712,\n      MsgToggleSPAsDelegatedAgent.toSDK(msg),\n      MsgToggleSPAsDelegatedAgent.encode(msg).finish(),\n    );\n  }\n\n  public async headBucket(bucketName: string) {\n    const rpc = await this.queryClient.getStorageQueryClient();\n    return await rpc.HeadBucket({\n      bucketName,\n    });\n  }\n\n  public async headBucketById(bucketId: string) {\n    const rpc = await this.queryClient.getStorageQueryClient();\n    return await rpc.HeadBucketById({\n      bucketId,\n    });\n  }\n\n  public async headBucketExtra(bucketName: string) {\n    const rpc = await this.queryClient.getStorageQueryClient();\n    return await rpc.HeadBucketExtra({\n      bucketName,\n    });\n  }\n\n  public async headBucketNFT(request: QueryNFTRequest) {\n    const rpc = await this.queryClient.getStorageQueryClient();\n    return await rpc.HeadBucketNFT(request);\n  }\n\n  public async getVerifyPermission(bucketName: string, operator: string, actionType: ActionType) {\n    const rpc = await this.queryClient.getStorageQueryClient();\n    return rpc.VerifyPermission({\n      bucketName,\n      operator,\n      objectName: '',\n      actionType,\n    });\n  }\n\n  public async listBuckets(configParam: GetUserBucketsRequest) {\n    try {\n      const { address, duration = 30000, endpoint } = configParam;\n      verifyAddress(address);\n      verifyUrl(endpoint);\n\n      const { url } = getUserBucketMetaInfo(endpoint);\n\n      const headers = new Headers({\n        [HTTPHeaderUserAddress]: address,\n      });\n      const result = await this.spClient.callApi(\n        url,\n        {\n          headers,\n          method: METHOD_GET,\n        },\n        duration,\n      );\n      const { status } = result;\n\n      if (!result.ok) {\n        const xmlError = await result.text();\n        const { code, message } = await parseError(xmlError);\n        throw {\n          code: code || -1,\n          message: message || 'Get bucket error.',\n          statusCode: status,\n        };\n      }\n\n      const xmlData = await result.text();\n      const res = await parseGetUserBucketsResponse(xmlData);\n\n      return {\n        code: 0,\n        message: 'Get bucket success.',\n        statusCode: status,\n        body: res.GfSpGetUserBucketsResponse.Buckets,\n      };\n    } catch (error: any) {\n      return {\n        code: -1,\n        message: error.message,\n        statusCode: error?.statusCode || NORMAL_ERROR_CODE,\n      };\n    }\n  }\n\n  public async getBucketReadQuota(\n    params: ReadQuotaRequest,\n    authType: AuthType,\n  ): Promise<SpResponse<IQuotaProps>> {\n    try {\n      const { bucketName, duration = 30000 } = params;\n\n      verifyBucketName(bucketName);\n      assertAuthType(authType);\n\n      let endpoint = params.endpoint;\n      if (!endpoint) {\n        endpoint = await this.sp.getSPUrlByBucket(bucketName);\n      }\n\n      const { url, optionsWithOutHeaders, reqMeta } = await getQueryBucketReadQuotaMetaInfo(\n        endpoint,\n        params,\n      );\n      const signHeaders = await this.spClient.signHeaders(reqMeta, authType);\n\n      const result = await this.spClient.callApi(\n        url,\n        {\n          ...optionsWithOutHeaders,\n          headers: signHeaders,\n        },\n        duration,\n        {\n          code: -1,\n          message: 'Get Bucket Quota error.',\n        },\n      );\n\n      const xmlData = await result.text();\n      const res = await parseReadQuotaResponse(xmlData);\n\n      return {\n        code: 0,\n        body: {\n          readQuota: Number(res.GetReadQuotaResult.ReadQuotaSize ?? '0'),\n          freeQuota: Number(res.GetReadQuotaResult.SPFreeReadQuotaSize ?? '0'),\n          consumedQuota: Number(res.GetReadQuotaResult.ReadConsumedSize ?? '0'),\n          freeConsumedSize: Number(res.GetReadQuotaResult.FreeConsumedSize ?? '0'),\n          monthlyFreeQuota: Number(res.GetReadQuotaResult.MonthlyFreeQuota ?? '0'),\n          monthlyQuotaConsumedSize: Number(res.GetReadQuotaResult.MonthlyQuotaConsumedSize ?? '0'),\n        },\n        message: 'Get bucket read quota.',\n        statusCode: result.status,\n      };\n    } catch (error: any) {\n      return {\n        code: -1,\n        message: error.message,\n        statusCode: error?.statusCode || NORMAL_ERROR_CODE,\n      };\n    }\n  }\n\n  public async updateBucketInfo(\n    srcMsg: Omit<MsgUpdateBucketInfo, 'chargedReadQuota'> & { chargedReadQuota: string },\n  ) {\n    const msg: MsgUpdateBucketInfo = {\n      ...srcMsg,\n      visibility: visibilityTypeFromJSON(srcMsg.visibility),\n      chargedReadQuota: UInt64Value.fromPartial({\n        value: Long.fromString(srcMsg.chargedReadQuota),\n      }),\n    };\n\n    return await this.txClient.tx(\n      MsgUpdateBucketInfoTypeUrl,\n      msg.operator,\n      MsgUpdateBucketInfoSDKTypeEIP712,\n      {\n        ...MsgUpdateBucketInfo.toSDK(msg),\n        charged_read_quota: {\n          value: srcMsg.chargedReadQuota,\n        },\n      },\n      MsgUpdateBucketInfo.encode(msg).finish(),\n    );\n  }\n\n  public async putBucketPolicy(bucketName: string, srcMsg: Omit<MsgPutPolicy, 'resource'>) {\n    const resource = GRNToString(newBucketGRN(bucketName));\n    const msg: MsgPutPolicy = {\n      ...srcMsg,\n      resource,\n    };\n\n    return this.storage.putPolicy(msg);\n  }\n\n  public async deleteBucketPolicy(\n    operator: string,\n    bucketName: string,\n    principalAddr: string,\n    principalType: keyof typeof PrincipalType,\n  ) {\n    const resource = GRNToString(newBucketGRN(bucketName));\n    const principal: Principal = {\n      type: principalTypeFromJSON(principalType),\n      value: principalAddr,\n    };\n\n    const msg: MsgDeletePolicy = {\n      resource,\n      principal,\n      operator: operator,\n    };\n    return await this.storage.deletePolicy(msg);\n  }\n\n  public async getBucketPolicy(request: QueryPolicyForAccountRequest) {\n    const rpc = await this.queryClient.getStorageQueryClient();\n    return rpc.QueryPolicyForAccount(request);\n  }\n\n  public async getMigrateBucketApproval(params: MigrateBucketApprovalRequest, authType: AuthType) {\n    assertAuthType(authType);\n    const { bucketName, operator, dstPrimarySpId } = params;\n\n    try {\n      let endpoint = params.endpoint;\n      if (!endpoint) {\n        endpoint = await this.sp.getSPUrlById(params.dstPrimarySpId);\n      }\n\n      const { reqMeta, optionsWithOutHeaders, url } =\n        getApprovalMetaInfo<MigrateBucketApprovalResponse>(endpoint, 'MigrateBucket', {\n          operator: operator,\n          bucket_name: bucketName,\n          dst_primary_sp_id: dstPrimarySpId,\n          dst_primary_sp_approval: {\n            expired_height: '0',\n            sig: '',\n            global_virtual_group_family_id: 0,\n          },\n        });\n\n      const signHeaders = await this.spClient.signHeaders(reqMeta, authType);\n\n      const result = await this.spClient.callApi(\n        url,\n        {\n          ...optionsWithOutHeaders,\n          headers: signHeaders,\n        },\n        30000,\n      );\n\n      const signedMsgString = result.headers.get('X-Gnfd-Signed-Msg') || '';\n      const signedMsg = decodeObjectFromHexString(signedMsgString) as MigrateBucketApprovalResponse;\n\n      return {\n        code: 0,\n        message: 'Get migrate bucket approval success.',\n        body: signedMsgString,\n        statusCode: result.status,\n        signedMsg: signedMsg,\n      };\n    } catch (error: any) {\n      throw {\n        code: -1,\n        message: error.message,\n        statusCode: error?.statusCode || NORMAL_ERROR_CODE,\n      };\n    }\n  }\n\n  public async migrateBucket(params: MigrateBucketApprovalRequest, authType: AuthType) {\n    assertAuthType(authType);\n\n    const { signedMsg } = await this.getMigrateBucketApproval(params, authType);\n    if (!signedMsg) {\n      throw new Error('Get migrate bucket approval error');\n    }\n\n    const msg: MsgMigrateBucket = {\n      bucketName: signedMsg.bucket_name,\n      operator: signedMsg.operator,\n      dstPrimarySpId: signedMsg.dst_primary_sp_id,\n      dstPrimarySpApproval: {\n        expiredHeight: Long.fromString(signedMsg.dst_primary_sp_approval.expired_height),\n        globalVirtualGroupFamilyId:\n          signedMsg.dst_primary_sp_approval.global_virtual_group_family_id,\n        sig: bytesFromBase64(signedMsg.dst_primary_sp_approval.sig),\n      },\n    };\n\n    return await this.migrateBucketTx(msg, signedMsg);\n  }\n\n  public async cancelMigrateBucket(msg: MsgCancelMigrateBucket): Promise<TxResponse> {\n    return await this.txClient.tx(\n      MsgCancelMigrateBucketTypeUrl,\n      msg.operator,\n      MsgCancelMigrateBucketSDKTypeEIP712,\n      MsgCancelMigrateBucket.toSDK(msg),\n      MsgCancelMigrateBucket.encode(msg).finish(),\n    );\n  }\n\n  private async migrateBucketTx(msg: MsgMigrateBucket, signedMsg: MigrateBucketApprovalResponse) {\n    return await this.txClient.tx(\n      MsgMigrateBucketTypeUrl,\n      msg.operator,\n      MsgMigrateBucketSDKTypeEIP712,\n      {\n        ...signedMsg,\n        type: MsgMigrateBucketTypeUrl,\n        primary_sp_approval: {\n          expired_height: signedMsg.dst_primary_sp_approval.expired_height,\n          global_virtual_group_family_id:\n            signedMsg.dst_primary_sp_approval.global_virtual_group_family_id,\n          sig: signedMsg.dst_primary_sp_approval.sig,\n        },\n      },\n      MsgMigrateBucket.encode(msg).finish(),\n    );\n  }\n\n  public async getBucketMeta(params: GetBucketMetaRequest) {\n    const { bucketName } = params;\n    verifyBucketName(bucketName);\n\n    let endpoint = params.endpoint;\n    if (!endpoint) {\n      endpoint = await this.sp.getSPUrlByBucket(bucketName);\n    }\n\n    const { url } = getBucketMetaInfo(endpoint, params);\n\n    const result = await this.spClient.callApi(url, {\n      method: METHOD_GET,\n    });\n\n    const xml = await result.text();\n    const res = await parseGetBucketMetaResponse(xml);\n\n    return {\n      code: 0,\n      message: 'get bucket meta success.',\n      statusCode: result.status,\n      body: res,\n    };\n  }\n\n  public async listBucketReadRecords(params: ListBucketReadRecordRequest, authType: AuthType) {\n    try {\n      assertAuthType(authType);\n\n      const { bucketName } = params;\n      let endpoint = params.endpoint;\n      if (!endpoint) {\n        endpoint = await this.sp.getSPUrlByBucket(bucketName);\n      }\n      verifyUrl(endpoint);\n\n      const { url, optionsWithOutHeaders, reqMeta } = getListBucketReadRecordMetaInfo(\n        endpoint,\n        params,\n      );\n      const signHeaders = await this.spClient.signHeaders(reqMeta, authType);\n\n      const result = await this.spClient.callApi(\n        url,\n        {\n          ...optionsWithOutHeaders,\n          headers: signHeaders,\n        },\n        3000,\n        {\n          code: -1,\n          message: 'Get Bucket Quota error.',\n        },\n      );\n\n      const xmlData = await result.text();\n      const res = await parseListBucketReadRecordResponse(xmlData);\n\n      return {\n        code: 0,\n        body: res,\n        message: 'success',\n        statusCode: result.status,\n      };\n    } catch (error: any) {\n      return {\n        code: -1,\n        message: error.message,\n        statusCode: error?.statusCode || NORMAL_ERROR_CODE,\n      };\n    }\n  }\n\n  public async listBucketsByIds(params: ListBucketsByIDsRequest) {\n    try {\n      const { ids } = params;\n      const sp = await this.sp.getInServiceSP();\n      const { url } = getListBucketsByIDsMetaInfo(sp.endpoint, { ids });\n\n      const result = await this.spClient.callApi(\n        url,\n        {\n          headers: {},\n          method: METHOD_GET,\n        },\n        3000,\n      );\n      const { status } = result;\n      if (!result.ok) {\n        const xmlError = await result.text();\n        const { code, message } = await parseError(xmlError);\n        throw {\n          code: code || -1,\n          message: message || 'error',\n          statusCode: status,\n        };\n      }\n\n      const xmlData = await result.text();\n      const res = await parseListBucketsByIdsResponse(xmlData);\n\n      return {\n        code: 0,\n        message: 'success',\n        statusCode: status,\n        body: res,\n      };\n    } catch (error: any) {\n      return {\n        code: -1,\n        message: error.message,\n        statusCode: error?.statusCode || NORMAL_ERROR_CODE,\n      };\n    }\n  }\n\n  public async listBucketsByPaymentAccount(params: ListBucketsByPaymentAccountRequest) {\n    try {\n      const sp = await this.sp.getInServiceSP();\n      const { url } = getListBucketByPaymentMetaInfo(sp.endpoint, params);\n\n      const result = await this.spClient.callApi(url, {\n        headers: {},\n        method: METHOD_GET,\n      });\n\n      const xmlData = await result.text();\n      const res = parseListBucketByPaymentResponse(xmlData);\n      return {\n        code: 0,\n        message: 'Get bucket success.',\n        statusCode: result.status,\n        body: res,\n      };\n    } catch (error: any) {\n      return {\n        code: -1,\n        message: error.message,\n        statusCode: error?.statusCode || NORMAL_ERROR_CODE,\n      };\n    }\n  }\n}\n","import {\n  QueryInturnAttestationSubmitterResponse,\n  QueryLatestAttestedChallengesResponse,\n  QueryParamsResponse,\n} from '@bnb-chain/greenfield-cosmos-types/greenfield/challenge/query';\nimport { MsgAttest, MsgSubmit } from '@bnb-chain/greenfield-cosmos-types/greenfield/challenge/tx';\nimport { container, delay, inject, injectable } from 'tsyringe';\nimport { MsgAttestTypeUrl, MsgSubmitTypeUrl, TxResponse } from '..';\nimport { RpcQueryClient } from '../clients/queryclient';\nimport { TxClient } from '../clients/txClient';\nimport { MsgAttestSDKTypeEIP712 } from '../messages/greenfield/chanenge/MsgAttest';\nimport { MsgSubmitSDKTypeEIP712 } from '../messages/greenfield/chanenge/MsgSubmit';\n\nexport interface IChallenge {\n  // TODO: getChallengeInfo();\n\n  /**\n   * challenges the service provider data integrity, used by off-chain service greenfield-challenger.\n   */\n  submitChallenge(address: string, msg: MsgSubmit): Promise<TxResponse>;\n\n  /**\n   * Attest handles user's request for attesting a challenge.\n     The attestation can include a valid challenge or is only for heartbeat purpose.\n     If the challenge is valid, the related storage provider will be slashed.\n     For heartbeat attestation, the challenge is invalid and the storage provider will not be slashed.\n   */\n  attestChallenge(address: string, msg: MsgAttest): Promise<TxResponse>;\n\n  latestAttestedChallenges(): Promise<QueryLatestAttestedChallengesResponse>;\n\n  inturnAttestationSubmitter(): Promise<QueryInturnAttestationSubmitterResponse>;\n\n  params(): Promise<QueryParamsResponse>;\n}\n\n@injectable()\nexport class Challenge implements IChallenge {\n  private queryClient = container.resolve(RpcQueryClient);\n  constructor(@inject(delay(() => TxClient)) private txClient: TxClient) {}\n\n  public async submitChallenge(address: string, msg: MsgSubmit) {\n    return await this.txClient.tx(\n      MsgSubmitTypeUrl,\n      address,\n      MsgSubmitSDKTypeEIP712,\n      MsgSubmit.toSDK(msg),\n      MsgSubmit.encode(msg).finish(),\n    );\n  }\n\n  public async attestChallenge(address: string, msg: MsgAttest) {\n    return await this.txClient.tx(\n      MsgAttestTypeUrl,\n      address,\n      MsgAttestSDKTypeEIP712,\n      MsgAttest.toSDK(msg),\n      MsgAttest.encode(msg).finish(),\n    );\n  }\n\n  public async latestAttestedChallenges() {\n    const rpc = await this.queryClient.getChallengeQueryClient();\n    return await rpc.LatestAttestedChallenges();\n  }\n\n  public async inturnAttestationSubmitter() {\n    const rpc = await this.queryClient.getChallengeQueryClient();\n    return await rpc.InturnAttestationSubmitter();\n  }\n\n  public async params() {\n    const rpc = await this.queryClient.getChallengeQueryClient();\n    return await rpc.Params();\n  }\n}\n","export const MsgClaimSDKTypeEIP712 = {\n  Msg1: [\n    {\n      name: 'type',\n      type: 'string',\n    },\n    {\n      name: 'from_address',\n      type: 'string',\n    },\n    {\n      name: 'src_chain_id',\n      type: 'uint32',\n    },\n    {\n      name: 'dest_chain_id',\n      type: 'uint32',\n    },\n    {\n      name: 'sequence',\n      type: 'uint64',\n    },\n    {\n      name: 'timestamp',\n      type: 'uint64',\n    },\n  ],\n};\n","import {\n  QueryCrossChainPackageRequest,\n  QueryCrossChainPackageResponse,\n  QueryReceiveSequenceRequest,\n  QueryReceiveSequenceResponse,\n  QuerySendSequenceRequest,\n  QuerySendSequenceResponse,\n} from '@bnb-chain/greenfield-cosmos-types/cosmos/crosschain/v1/query';\nimport {\n  QueryInturnRelayerRequest,\n  QueryInturnRelayerResponse,\n} from '@bnb-chain/greenfield-cosmos-types/cosmos/oracle/v1/query';\nimport { MsgClaim } from '@bnb-chain/greenfield-cosmos-types/cosmos/oracle/v1/tx';\nimport { QueryParamsResponse } from '@bnb-chain/greenfield-cosmos-types/greenfield/bridge/query';\nimport { MsgTransferOut } from '@bnb-chain/greenfield-cosmos-types/greenfield/bridge/tx';\nimport {\n  MsgMirrorBucket,\n  MsgMirrorGroup,\n  MsgMirrorObject,\n} from '@bnb-chain/greenfield-cosmos-types/greenfield/storage/tx';\nimport { container, delay, inject, injectable } from 'tsyringe';\nimport {\n  MsgClaimTypeUrl,\n  MsgMirrorBucketTypeUrl,\n  MsgMirrorGroupTypeUrl,\n  MsgMirrorObjectTypeUrl,\n  MsgTransferOutTypeUrl,\n  TxResponse,\n} from '..';\nimport { RpcQueryClient } from '../clients/queryclient';\nimport { TxClient } from '../clients/txClient';\nimport { MsgClaimSDKTypeEIP712 } from '../messages/cosmos/oracle/MsgClaim';\nimport { MsgTransferOutSDKTypeEIP712 } from '../messages/greenfield/bridge/MsgTransferOut';\nimport { MsgMirrorBucketSDKTypeEIP712 } from '../messages/greenfield/storage/MsgMirrorBucket';\nimport { MsgMirrorGroupSDKTypeEIP712 } from '../messages/greenfield/storage/MsgMirrorGroup';\nimport { MsgMirrorObjectSDKTypeEIP712 } from '../messages/greenfield/storage/MsgMirrorObject';\n\nexport interface ICrossChain {\n  /**\n   * makes a transfer from Greenfield to BSC\n   */\n  transferOut(msg: MsgTransferOut): Promise<TxResponse>;\n\n  /**\n   * cross-chain packages from BSC to Greenfield, used by relayers which run by validators\n   */\n  claims(msg: MsgClaim): Promise<TxResponse>;\n\n  /**\n   * gets the next send sequence for a channel\n   */\n  getChannelSendSequence(request: QuerySendSequenceRequest): Promise<QuerySendSequenceResponse>;\n\n  /**\n   * gets the next receive sequence for a channel\n   */\n  getChannelReceiveSequence(\n    request: QueryReceiveSequenceRequest,\n  ): Promise<QueryReceiveSequenceResponse>;\n\n  /**\n   * gets the in-turn relayer bls public key and its relay interval\n   */\n  getInturnRelayer(request: QueryInturnRelayerRequest): Promise<QueryInturnRelayerResponse>;\n\n  getCrosschainPackage(\n    request: QueryCrossChainPackageRequest,\n  ): Promise<QueryCrossChainPackageResponse>;\n\n  /**\n   * mirrors the group to BSC as NFT\n   */\n  mirrorGroup(msg: MsgMirrorGroup): Promise<TxResponse>;\n\n  /**\n   * mirrors the bucket to BSC as NFT\n   */\n  mirrorBucket(msg: MsgMirrorBucket): Promise<TxResponse>;\n\n  /**\n   * mirrors the object to BSC as NFT\n   */\n  mirrorObject(msg: MsgMirrorObject): Promise<TxResponse>;\n\n  getParams(): Promise<QueryParamsResponse>;\n}\n\n@injectable()\nexport class CrossChain implements ICrossChain {\n  constructor(@inject(delay(() => TxClient)) private txClient: TxClient) {}\n  private queryClient: RpcQueryClient = container.resolve(RpcQueryClient);\n\n  public async transferOut(msg: MsgTransferOut) {\n    return await this.txClient.tx(\n      MsgTransferOutTypeUrl,\n      msg.from,\n      MsgTransferOutSDKTypeEIP712,\n      MsgTransferOut.toSDK(msg),\n      MsgTransferOut.encode(msg).finish(),\n    );\n  }\n\n  public async claims(msg: MsgClaim) {\n    return await this.txClient.tx(\n      MsgClaimTypeUrl,\n      msg.fromAddress,\n      MsgClaimSDKTypeEIP712,\n      MsgClaim.toSDK(msg),\n      MsgClaim.encode(msg).finish(),\n    );\n  }\n\n  public async getChannelSendSequence(request: QuerySendSequenceRequest) {\n    const rpc = await this.queryClient.getCrosschainQueryClient();\n    return await rpc.SendSequence(request);\n  }\n\n  public async getChannelReceiveSequence(request: QueryReceiveSequenceRequest) {\n    const rpc = await this.queryClient.getCrosschainQueryClient();\n    return await rpc.ReceiveSequence(request);\n  }\n\n  public async getInturnRelayer(request: QueryInturnRelayerRequest) {\n    const rpc = await this.queryClient.getOracleQueryClient();\n    return await rpc.InturnRelayer(request);\n  }\n\n  public async getCrosschainPackage(request: QueryCrossChainPackageRequest) {\n    const rpc = await this.queryClient.getCrosschainQueryClient();\n    return await rpc.CrossChainPackage(request);\n  }\n\n  public async mirrorGroup(msg: MsgMirrorGroup) {\n    return await this.txClient.tx(\n      MsgMirrorGroupTypeUrl,\n      msg.operator,\n      MsgMirrorGroupSDKTypeEIP712,\n      MsgMirrorGroup.toSDK(msg),\n      MsgMirrorGroup.encode(msg).finish(),\n    );\n  }\n\n  public async mirrorBucket(msg: MsgMirrorBucket) {\n    return await this.txClient.tx(\n      MsgMirrorBucketTypeUrl,\n      msg.operator,\n      MsgMirrorBucketSDKTypeEIP712,\n      MsgMirrorBucket.toSDK(msg),\n      MsgMirrorBucket.encode(msg).finish(),\n    );\n  }\n\n  public async mirrorObject(msg: MsgMirrorObject) {\n    return await this.txClient.tx(\n      MsgMirrorObjectTypeUrl,\n      msg.operator,\n      MsgMirrorObjectSDKTypeEIP712,\n      MsgMirrorObject.toSDK(msg),\n      MsgMirrorObject.encode(msg).finish(),\n    );\n  }\n\n  async getParams() {\n    const rpc = await this.queryClient.getBridgeQueryClient();\n    return rpc.Params();\n  }\n}\n","export const MsgFundCommunityPoolTypeUrlSDKTypeEIP712 = {\n  Msg1: [\n    {\n      name: 'amount',\n      type: 'TypeMsg1Amount[]',\n    },\n    {\n      name: 'depositor',\n      type: 'string',\n    },\n    {\n      name: 'type',\n      type: 'string',\n    },\n  ],\n  TypeMsg1Amount: [\n    {\n      name: 'amount',\n      type: 'string',\n    },\n    {\n      name: 'denom',\n      type: 'string',\n    },\n  ],\n};\n","export const MsgSetWithdrawAddressSDKTypeEIP712 = {\n  Msg1: [\n    {\n      name: 'delegator_address',\n      type: 'string',\n    },\n    {\n      name: 'type',\n      type: 'string',\n    },\n    {\n      name: 'withdraw_address',\n      type: 'string',\n    },\n  ],\n};\n","export const MsgWithdrawDelegatorRewardSDKTypeEIP712 = {\n  Msg1: [\n    {\n      name: 'type',\n      type: 'string',\n    },\n    {\n      name: 'delegator_address',\n      type: 'string',\n    },\n    {\n      name: 'validator_address',\n      type: 'string',\n    },\n  ],\n};\n","export const MsgWithdrawValidatorCommissionSDKTypeEIP712 = {\n  Msg1: [\n    {\n      name: 'type',\n      type: 'string',\n    },\n    {\n      name: 'validator_address',\n      type: 'string',\n    },\n  ],\n};\n","import {\n  MsgFundCommunityPool,\n  MsgSetWithdrawAddress,\n  MsgWithdrawDelegatorReward,\n  MsgWithdrawValidatorCommission,\n} from '@bnb-chain/greenfield-cosmos-types/cosmos/distribution/v1beta1/tx';\nimport { delay, inject, injectable } from 'tsyringe';\nimport {\n  MsgFundCommunityPoolTypeUrl,\n  MsgSetWithdrawAddressTypeUrl,\n  MsgWithdrawDelegatorRewardTypeUrl,\n  MsgWithdrawValidatorCommissionTypeUrl,\n  TxResponse,\n} from '..';\nimport { TxClient } from '../clients/txClient';\nimport { MsgFundCommunityPoolTypeUrlSDKTypeEIP712 } from '../messages/cosmos/distribution/MsgFundCommunityPoolTypeUrl';\nimport { MsgSetWithdrawAddressSDKTypeEIP712 } from '../messages/cosmos/distribution/MsgSetWithdrawAddress';\nimport { MsgWithdrawDelegatorRewardSDKTypeEIP712 } from '../messages/cosmos/distribution/MsgWithdrawDelegatorReward';\nimport { MsgWithdrawValidatorCommissionSDKTypeEIP712 } from '../messages/cosmos/distribution/MsgWithdrawValidatorCommission';\nexport interface IDistribution {\n  /**\n   * sets the withdrawal address for a delegator address\n   */\n  setWithdrawAddress(msg: MsgSetWithdrawAddress): Promise<TxResponse>;\n\n  /**\n   * withdraw accumulated commission by validator\n   */\n  withdrawValidatorCommission(\n    address: string,\n    msg: MsgWithdrawValidatorCommission,\n  ): Promise<TxResponse>;\n\n  /**\n   * withdraw rewards by a delegator\n   */\n  withdrawDelegatorReward(msg: MsgWithdrawDelegatorReward): Promise<TxResponse>;\n\n  /**\n   * sends coins directly from the sender to the community pool.\n   */\n  fundCommunityPoolundComm(address: string, msg: MsgFundCommunityPool): Promise<TxResponse>;\n}\n\n@injectable()\nexport class Distribution implements IDistribution {\n  constructor(@inject(delay(() => TxClient)) private txClient: TxClient) {}\n\n  public async setWithdrawAddress(msg: MsgSetWithdrawAddress) {\n    return await this.txClient.tx(\n      MsgSetWithdrawAddressTypeUrl,\n      msg.delegatorAddress,\n      MsgSetWithdrawAddressSDKTypeEIP712,\n      MsgSetWithdrawAddress.toSDK(msg),\n      MsgSetWithdrawAddress.encode(msg).finish(),\n    );\n  }\n\n  public async withdrawValidatorCommission(address: string, msg: MsgWithdrawValidatorCommission) {\n    return await this.txClient.tx(\n      MsgWithdrawValidatorCommissionTypeUrl,\n      address,\n      MsgWithdrawValidatorCommissionSDKTypeEIP712,\n      MsgWithdrawValidatorCommission.toSDK(msg),\n      MsgWithdrawValidatorCommission.encode(msg).finish(),\n    );\n  }\n\n  public async withdrawDelegatorReward(msg: MsgWithdrawDelegatorReward) {\n    return await this.txClient.tx(\n      MsgWithdrawDelegatorRewardTypeUrl,\n      msg.delegatorAddress,\n      MsgWithdrawDelegatorRewardSDKTypeEIP712,\n      MsgWithdrawDelegatorReward.toSDK(msg),\n      MsgWithdrawDelegatorReward.encode(msg).finish(),\n    );\n  }\n\n  public async fundCommunityPoolundComm(address: string, msg: MsgFundCommunityPool) {\n    return await this.txClient.tx(\n      MsgFundCommunityPoolTypeUrl,\n      address,\n      MsgFundCommunityPoolTypeUrlSDKTypeEIP712,\n      MsgFundCommunityPool.toSDK(msg),\n      MsgFundCommunityPool.encode(msg).finish(),\n    );\n  }\n}\n","export const MsgGrantAllowanceSDKTypeEIP712 = {\n  Msg1: [\n    {\n      name: 'type',\n      type: 'string',\n    },\n    {\n      name: 'granter',\n      type: 'string',\n    },\n    {\n      name: 'grantee',\n      type: 'string',\n    },\n    {\n      name: 'allowance',\n      type: 'TypeAny',\n    },\n  ],\n  TypeAny: [\n    {\n      name: 'type',\n      type: 'string',\n    },\n    {\n      name: 'value',\n      type: 'bytes',\n    },\n  ],\n};\n","export const MsgRevokeAllowanceSDKTypeEIP712 = {\n  Msg1: [\n    {\n      name: 'type',\n      type: 'string',\n    },\n    {\n      name: 'granter',\n      type: 'string',\n    },\n    {\n      name: 'grantee',\n      type: 'string',\n    },\n  ],\n};\n","import { TxClient } from '../clients/txClient';\nimport { MsgGrantAllowanceSDKTypeEIP712 } from '../messages/feegrant/MsgGrantAllowance';\nimport { MsgRevokeAllowanceSDKTypeEIP712 } from '../messages/feegrant/MsgRevokeAllowance';\nimport {\n  QueryAllowanceRequest,\n  QueryAllowanceResponse,\n  QueryAllowancesRequest,\n  QueryAllowancesResponse,\n} from '@bnb-chain/greenfield-cosmos-types/cosmos/feegrant/v1beta1/query';\nimport {\n  MsgGrantAllowance,\n  MsgRevokeAllowance,\n} from '@bnb-chain/greenfield-cosmos-types/cosmos/feegrant/v1beta1/tx';\nimport { base64FromBytes } from '@bnb-chain/greenfield-cosmos-types/helpers';\nimport { arrayify } from '@ethersproject/bytes';\nimport { container, delay, inject, injectable } from 'tsyringe';\nimport {\n  encodeToHex,\n  IGrantAllowance,\n  MsgGrantAllowanceTypeUrl,\n  MsgRevokeAllowanceTypeUrl,\n  newAllowedMsgAllowance,\n  newBasicAllowance,\n  newMarshal,\n  newMsgGrantAllowance,\n  TxResponse,\n} from '..';\nimport { RpcQueryClient } from '../clients/queryclient';\n\nexport interface IFeeGrant {\n  grantAllowance(msg: IGrantAllowance): Promise<TxResponse>;\n\n  revokeAllowance(msg: MsgRevokeAllowance): Promise<TxResponse>;\n\n  getAllowence(request: QueryAllowanceRequest): Promise<QueryAllowanceResponse>;\n\n  getAllowences(request: QueryAllowancesRequest): Promise<QueryAllowancesResponse>;\n}\n\n@injectable()\nexport class FeeGrant implements IFeeGrant {\n  constructor(@inject(delay(() => TxClient)) private txClient: TxClient) {}\n  private queryClient: RpcQueryClient = container.resolve(RpcQueryClient);\n\n  public async grantAllowance(params: IGrantAllowance) {\n    const { amount, denom, allowedMessages, grantee, granter, expirationTime } = params;\n\n    const basicAllowance = newBasicAllowance(amount, denom, expirationTime);\n    const allowedMsgAllowance = newAllowedMsgAllowance(allowedMessages, basicAllowance);\n    const grantAllowance = newMsgGrantAllowance(grantee, granter, allowedMsgAllowance);\n    const marshal = newMarshal(amount, denom, allowedMessages, expirationTime);\n\n    return await this.txClient.tx(\n      MsgGrantAllowanceTypeUrl,\n      granter,\n      MsgGrantAllowanceSDKTypeEIP712,\n      {\n        ...MsgGrantAllowance.toSDK(grantAllowance),\n        allowance: {\n          // @ts-ignore\n          type: grantAllowance.allowance?.typeUrl,\n          value: base64FromBytes(arrayify('0x' + encodeToHex(JSON.stringify(marshal)))),\n          // TODO: @roshan next version should return hex string\n          // value: '0x' + encodeToHex(JSON.stringify(marshal)),\n        },\n      },\n      MsgGrantAllowance.encode(grantAllowance).finish(),\n    );\n  }\n\n  public async revokeAllowance(msg: MsgRevokeAllowance) {\n    return await this.txClient.tx(\n      MsgRevokeAllowanceTypeUrl,\n      msg.granter,\n      MsgRevokeAllowanceSDKTypeEIP712,\n      MsgRevokeAllowance.toSDK(msg),\n      MsgRevokeAllowance.encode(msg).finish(),\n    );\n  }\n\n  public async getAllowence(request: QueryAllowanceRequest) {\n    const rpc = await this.queryClient.getFeeGrantQueryClient();\n    return await rpc.Allowance(request);\n  }\n\n  public async getAllowences(request: QueryAllowancesRequest) {\n    const rpc = await this.queryClient.getFeeGrantQueryClient();\n    return await rpc.Allowances(request);\n  }\n}\n","import {\n  QueryMsgGasParamsRequest,\n  QueryMsgGasParamsResponse,\n  QueryParamsResponse,\n} from '@bnb-chain/greenfield-cosmos-types/cosmos/gashub/v1beta1/query';\nimport { container, injectable } from 'tsyringe';\nimport { RpcQueryClient } from '../clients/queryclient';\n\nexport interface IGashub {\n  getParams(): Promise<QueryParamsResponse>;\n\n  getMsgGasParams(request: QueryMsgGasParamsRequest): Promise<QueryMsgGasParamsResponse>;\n}\n\n@injectable()\nexport class Gashub implements IGashub {\n  private queryClient: RpcQueryClient = container.resolve(RpcQueryClient);\n\n  async getMsgGasParams(request: QueryMsgGasParamsRequest): Promise<QueryMsgGasParamsResponse> {\n    const rpc = await this.queryClient.getGashubClient();\n    return await rpc.MsgGasParams(request);\n  }\n\n  async getParams() {\n    const rpc = await this.queryClient.getGashubClient();\n    return await rpc.Params();\n  }\n}\n","import {\n  QueryGroupNFTResponse,\n  QueryHeadGroupMemberResponse,\n  QueryHeadGroupResponse,\n  QueryListGroupsRequest,\n  QueryListGroupsResponse,\n  QueryNFTRequest,\n  QueryPolicyForGroupRequest,\n  QueryPolicyForGroupResponse,\n} from '@bnb-chain/greenfield-cosmos-types/greenfield/storage/query';\nimport {\n  MsgCreateGroup,\n  MsgDeleteGroup,\n  MsgLeaveGroup,\n  MsgPutPolicy,\n  MsgUpdateGroupExtra,\n  MsgUpdateGroupMember,\n} from '@bnb-chain/greenfield-cosmos-types/greenfield/storage/tx';\nimport { container, delay, inject, injectable } from 'tsyringe';\nimport {\n  fromTimestamp,\n  MsgCreateGroupTypeUrl,\n  MsgDeleteGroupTypeUrl,\n  MsgLeaveGroupTypeUrl,\n  MsgUpdateGroupExtraTypeUrl,\n  MsgUpdateGroupMemberTypeUrl,\n  TxResponse,\n} from '..';\nimport { RpcQueryClient } from '../clients/queryclient';\nimport { TxClient } from '../clients/txClient';\nimport { MsgCreateGroupSDKTypeEIP712 } from '../messages/greenfield/storage/MsgCreateGroup';\nimport { MsgDeleteGroupSDKTypeEIP712 } from '../messages/greenfield/storage/MsgDeleteGroup';\nimport { MsgLeaveGroupSDKTypeEIP712 } from '../messages/greenfield/storage/MsgLeaveGroup';\nimport { MsgUpdateGroupExtraSDKTypeEIP712 } from '../messages/greenfield/storage/MsgUpdateGroupExtra';\nimport { getMsgUpdateGroupMemberSDKTypeEIP712 } from '../messages/greenfield/storage/MsgUpdateGroupMember';\nimport { GRNToString, newBucketGRN, newGroupGRN, newObjectGRN } from '../utils/grn';\nimport { Storage } from './storage';\n\nexport interface IGroup {\n  /**\n   * create a new group on greenfield chain the group members can be initialized  or not\n   */\n  createGroup(msg: MsgCreateGroup): Promise<TxResponse>;\n\n  /**\n   * send DeleteGroup txn to greenfield chain and return txn hash\n   */\n  deleteGroup(msg: MsgDeleteGroup): Promise<TxResponse>;\n\n  /**\n   * support adding or removing members from the group and return the txn hash\n   */\n  updateGroupMember(msg: MsgUpdateGroupMember): Promise<TxResponse>;\n\n  updateGroupExtra(msg: MsgUpdateGroupExtra): Promise<TxResponse>;\n\n  /**\n   * make the member leave the specific group\n   */\n  leaveGroup(address: string, msg: MsgLeaveGroup): Promise<TxResponse>;\n\n  /**\n   * query the groupInfo on chain, return the group info if exists\n   */\n  headGroup(groupName: string, groupOwner: string): Promise<QueryHeadGroupResponse>;\n\n  /**\n   * query the group member info on chain, return true if the member exists in group\n   */\n  headGroupMember(\n    groupName: string,\n    groupOwner: string,\n    member: string,\n  ): Promise<QueryHeadGroupMemberResponse>;\n\n  /**\n   * @deprecated\n   */\n  listGroup(request: QueryListGroupsRequest): Promise<QueryListGroupsResponse>;\n\n  headGroupNFT(request: QueryNFTRequest): Promise<QueryGroupNFTResponse>;\n\n  /**\n   * get the bucket policy info of the group specified by group id\n   * it queries a bucket policy that grants permission to a group\n   */\n  getPolicyOfGroup(request: QueryPolicyForGroupRequest): Promise<QueryPolicyForGroupResponse>;\n\n  getBucketPolicyOfGroup(bucketName: string, groupId: number): Promise<QueryPolicyForGroupResponse>;\n\n  getObjectPolicyOfGroup(\n    bucketName: string,\n    objectName: string,\n    groupId: number,\n  ): Promise<QueryPolicyForGroupResponse>;\n\n  putGroupPolicy(\n    owner: string,\n    groupName: string,\n    srcMsg: Omit<MsgPutPolicy, 'resource' | 'expirationTime'>,\n  ): Promise<TxResponse>;\n}\n\n@injectable()\nexport class Group implements IGroup {\n  constructor(\n    @inject(delay(() => TxClient)) private txClient: TxClient,\n    @inject(delay(() => Storage)) private storage: Storage,\n  ) {}\n\n  private queryClient: RpcQueryClient = container.resolve(RpcQueryClient);\n\n  public async createGroup(msg: MsgCreateGroup) {\n    return await this.txClient.tx(\n      MsgCreateGroupTypeUrl,\n      msg.creator,\n      MsgCreateGroupSDKTypeEIP712,\n      MsgCreateGroup.toSDK(msg),\n      MsgCreateGroup.encode(msg).finish(),\n    );\n  }\n\n  public async deleteGroup(msg: MsgDeleteGroup) {\n    return await this.txClient.tx(\n      MsgDeleteGroupTypeUrl,\n      msg.operator,\n      MsgDeleteGroupSDKTypeEIP712,\n      MsgDeleteGroup.toSDK(msg),\n      MsgDeleteGroup.encode(msg).finish(),\n    );\n  }\n\n  public async updateGroupMember(msg: MsgUpdateGroupMember) {\n    if (msg.groupName === '') {\n      throw new Error('group name is empty');\n    }\n\n    if (msg.membersToAdd.length === 0 && msg.membersToDelete.length === 0) {\n      throw new Error('no update member');\n    }\n\n    return await this.txClient.tx(\n      MsgUpdateGroupMemberTypeUrl,\n      msg.operator,\n      getMsgUpdateGroupMemberSDKTypeEIP712({\n        membersToAdd: msg.membersToAdd,\n        membersToDelete: msg.membersToDelete,\n      }),\n      {\n        ...MsgUpdateGroupMember.toSDK(msg),\n        members_to_add: msg.membersToAdd.map((x) => {\n          return {\n            member: x.member,\n            expiration_time: x.expirationTime && fromTimestamp(x.expirationTime),\n          };\n        }),\n      },\n      MsgUpdateGroupMember.encode(msg).finish(),\n    );\n  }\n\n  public async updateGroupExtra(msg: MsgUpdateGroupExtra) {\n    return await this.txClient.tx(\n      MsgUpdateGroupExtraTypeUrl,\n      msg.operator,\n      MsgUpdateGroupExtraSDKTypeEIP712,\n      MsgUpdateGroupExtra.toSDK(msg),\n      MsgUpdateGroupExtra.encode(msg).finish(),\n    );\n  }\n\n  public async leaveGroup(address: string, msg: MsgLeaveGroup) {\n    return await this.txClient.tx(\n      MsgLeaveGroupTypeUrl,\n      address,\n      MsgLeaveGroupSDKTypeEIP712,\n      MsgLeaveGroup.toSDK(msg),\n      MsgLeaveGroup.encode(msg).finish(),\n    );\n  }\n\n  public async headGroup(groupName: string, groupOwner: string) {\n    const rpc = await this.queryClient.getStorageQueryClient();\n    return await rpc.HeadGroup({\n      groupName,\n      groupOwner,\n    });\n  }\n\n  public async headGroupMember(groupName: string, groupOwner: string, member: string) {\n    const rpc = await this.queryClient.getStorageQueryClient();\n    return await rpc.HeadGroupMember({\n      groupName,\n      groupOwner,\n      member,\n    });\n  }\n\n  public async headGroupNFT(request: QueryNFTRequest) {\n    const rpc = await this.queryClient.getStorageQueryClient();\n    return await rpc.HeadGroupNFT(request);\n  }\n\n  public async listGroup(request: QueryListGroupsRequest) {\n    const rpc = await this.queryClient.getStorageQueryClient();\n    return await rpc.ListGroups(request);\n  }\n\n  public async getPolicyOfGroup(request: QueryPolicyForGroupRequest) {\n    return await this.storage.getPolicyForGroup(request);\n  }\n\n  public async getBucketPolicyOfGroup(bucketName: string, groupId: number) {\n    const resource = GRNToString(newBucketGRN(bucketName));\n    return await this.storage.getPolicyForGroup({\n      resource,\n      principalGroupId: groupId.toString(),\n    });\n  }\n\n  public async getObjectPolicyOfGroup(bucketName: string, objectName: string, groupId: number) {\n    const resource = GRNToString(newObjectGRN(bucketName, objectName));\n\n    return await this.storage.getPolicyForGroup({\n      resource,\n      principalGroupId: groupId.toString(),\n    });\n  }\n\n  public async putGroupPolicy(\n    owner: string,\n    groupName: string,\n    srcMsg: Omit<MsgPutPolicy, 'resource' | 'expirationTime'>,\n  ) {\n    const resource = GRNToString(newGroupGRN(owner, groupName));\n    const msg: MsgPutPolicy = {\n      ...srcMsg,\n      resource,\n    };\n    return this.storage.putPolicy(msg);\n  }\n}\n","import { EMPTY_STRING_SHA256, METHOD_POST } from '@/constants';\nimport { ReqMeta } from '@/types';\nimport { DelegatedOpts } from '@/types/sp/Common';\nimport { generateUrlByBucketName } from '@/utils/asserts/s3';\nimport { encodePath, getSortQueryParams } from '../auth';\n\n// https://github.com/bnb-chain/greenfield-storage-provider/blob/master/docs/storage-provider-rest-api/resumable_put_object.md\nexport const getResumablePutObjectMetaInfo = async (\n  endpoint: string,\n  params: {\n    objectName: string;\n    bucketName: string;\n    contentType: string;\n    body: File;\n    offset: number;\n    complete: boolean;\n    delegatedOpts?: DelegatedOpts;\n  },\n) => {\n  const { bucketName, objectName, contentType, body, offset, complete, delegatedOpts } = params;\n  const path = `/${encodePath(objectName)}`;\n  let queryMap: Record<string, string> = {\n    offset: String(offset),\n    complete: String(complete),\n  };\n\n  if (delegatedOpts) {\n    queryMap = {\n      ...queryMap,\n      delegate: '',\n      payload_size: String(body.size),\n      visibility: delegatedOpts.visibility.toString(),\n      is_update: String(delegatedOpts.isUpdate || false),\n    };\n  }\n\n  let url = new URL(path, generateUrlByBucketName(endpoint, bucketName));\n  url = getSortQueryParams(url, queryMap);\n\n  const reqMeta: Partial<ReqMeta> = {\n    contentSHA256: EMPTY_STRING_SHA256,\n    // txnHash: txnHash,\n    method: METHOD_POST,\n    url: {\n      hostname: url.hostname,\n      query: url.searchParams.toString(),\n      path,\n    },\n    contentType,\n  };\n\n  const optionsWithOutHeaders: Omit<RequestInit, 'headers'> = {\n    method: METHOD_POST,\n    body,\n  };\n\n  return {\n    url: url.href,\n    optionsWithOutHeaders,\n    reqMeta,\n  };\n};\n","import { EMPTY_STRING_SHA256, METHOD_POST } from '@/constants';\nimport { ReqMeta } from '@/types';\nimport { DelegateCreateFolderRepsonse } from '@/types/sp/DelegateCreateFolder';\nimport { generateUrlByBucketName } from '@/utils';\nimport { VisibilityType } from '@bnb-chain/greenfield-cosmos-types/greenfield/storage/common';\nimport { XMLParser } from 'fast-xml-parser';\nimport { encodePath, getSortQueryParams } from '../auth';\n\nexport const getDelegatedCreateFolderMetaInfo = async (\n  endpoint: string,\n  params: {\n    objectName: string;\n    bucketName: string;\n    delegatedOpts?: {\n      visibility: VisibilityType;\n    };\n  },\n) => {\n  const { bucketName, objectName, delegatedOpts } = params;\n  const path = `/${encodePath(objectName)}`;\n  let queryMap = {};\n\n  if (delegatedOpts) {\n    queryMap = {\n      'create-folder': '',\n      payload_size: '0',\n      visibility: delegatedOpts.visibility.toString(),\n    };\n  }\n\n  let url = new URL(path, generateUrlByBucketName(endpoint, bucketName));\n  url = getSortQueryParams(url, queryMap);\n\n  const reqMeta: Partial<ReqMeta> = {\n    contentSHA256: EMPTY_STRING_SHA256,\n    method: METHOD_POST,\n    url: {\n      hostname: url.hostname,\n      query: url.searchParams.toString(),\n      path,\n    },\n    contentType: '',\n  };\n\n  const optionsWithOutHeaders: Omit<RequestInit, 'headers'> = {\n    method: METHOD_POST,\n  };\n\n  return {\n    url: url.href,\n    optionsWithOutHeaders,\n    reqMeta,\n  };\n};\n\nexport const parseDelegatedCreateFolderResponse = (data: string) => {\n  const xmlParser = new XMLParser({\n    parseTagValue: false,\n  });\n\n  const res = xmlParser.parse(data) as DelegateCreateFolderRepsonse;\n  return res;\n};\n","import { convertStrToBool, formatObjectInfo } from '@/types/sp/Common';\nimport { GetObjectMetaRequest, GetObjectMetaResponse } from '@/types/sp/GetObjectMeta';\nimport { generateUrlByBucketName } from '@/utils/asserts/s3';\nimport { XMLParser } from 'fast-xml-parser';\nimport { encodePath, getSortQueryParams } from '../auth';\nimport type { SPMetaInfo } from './metaInfos';\n\n// https://github.com/bnb-chain/greenfield-storage-provider/blob/master/docs/storage-provider-rest-api/get_object_meta.md\nexport const getObjectMetaInfo = (\n  endpoint: string,\n  params: GetObjectMetaRequest,\n): Pick<SPMetaInfo, 'url'> => {\n  const { objectName, bucketName } = params;\n\n  const path = `${encodePath(objectName)}`;\n  const queryMap = {\n    'object-meta': '',\n  };\n\n  let url = new URL(path, generateUrlByBucketName(endpoint, bucketName));\n  url = getSortQueryParams(url, queryMap);\n\n  return {\n    url: url.href,\n  };\n};\n\nexport const parseGetObjectMetaResponse = async (data: string) => {\n  const xmlParser = new XMLParser({\n    parseTagValue: false,\n  });\n  const res = xmlParser.parse(data) as GetObjectMetaResponse;\n\n  const ObjectTmp = res.GfSpGetObjectMetaResponse.Object || {};\n  if (ObjectTmp) {\n    // @ts-ignore\n    ObjectTmp.Removed = convertStrToBool(ObjectTmp.Removed);\n    ObjectTmp.UpdateAt = Number(ObjectTmp.UpdateAt);\n    ObjectTmp.DeleteAt = Number(ObjectTmp.DeleteAt);\n\n    ObjectTmp.ObjectInfo = formatObjectInfo(ObjectTmp.ObjectInfo);\n  }\n\n  res.GfSpGetObjectMetaResponse = {\n    ...res.GfSpGetObjectMetaResponse,\n    Object: ObjectTmp,\n  };\n\n  return res;\n};\n","import { EMPTY_STRING_SHA256, METHOD_GET } from '@/constants';\nimport { ReqMeta, UploadOffsetResponse } from '@/types';\nimport { generateUrlByBucketName } from '@/utils/asserts/s3';\nimport { XMLParser } from 'fast-xml-parser';\nimport { encodePath, getSortQueryParams } from '../auth';\n\n// Uploading object's offset\nexport const getObjectOffsetInfo = async (\n  endpoint: string,\n  params: {\n    objectName: string;\n    bucketName: string;\n  },\n) => {\n  const { bucketName, objectName } = params;\n  const path = `/${encodePath(objectName)}`;\n  const queryMap = {\n    'upload-context': '',\n  };\n\n  let url = new URL(path, generateUrlByBucketName(endpoint, bucketName));\n  url = getSortQueryParams(url, queryMap);\n\n  const reqMeta: Partial<ReqMeta> = {\n    contentSHA256: EMPTY_STRING_SHA256,\n    method: METHOD_GET,\n    url: {\n      hostname: new URL(url).hostname,\n      query: url.searchParams.toString(),\n      path,\n    },\n    contentType: 'application/octet-stream',\n  };\n\n  const optionsWithOutHeaders: Omit<RequestInit, 'headers'> = {\n    method: METHOD_GET,\n  };\n\n  return {\n    url: url.href,\n    optionsWithOutHeaders,\n    reqMeta,\n  };\n};\n\nexport const parseObjectOffsetResponse = (data: string) => {\n  const xmlParser = new XMLParser({\n    parseTagValue: false,\n  });\n\n  const res = xmlParser.parse(data) as UploadOffsetResponse;\n\n  res.QueryResumeOffset.Offset = Number(res.QueryResumeOffset.Offset);\n\n  return res;\n};\n","import { EMPTY_STRING_SHA256, METHOD_GET } from '@/constants';\nimport { ReqMeta } from '@/types';\nimport { UploadProgressResponse } from '@/types/sp/UploadProgress';\nimport { generateUrlByBucketName } from '@/utils/asserts/s3';\nimport { XMLParser } from 'fast-xml-parser';\nimport { encodePath, getSortQueryParams } from '../auth';\n\n// Object's upload-progress\nexport const getObjectStatusInfo = async (\n  endpoint: string,\n  params: {\n    objectName: string;\n    bucketName: string;\n  },\n) => {\n  const { bucketName, objectName } = params;\n  const path = `/${encodePath(objectName)}`;\n  const queryMap = {\n    'upload-progress': '',\n  };\n\n  let url = new URL(path, generateUrlByBucketName(endpoint, bucketName));\n  url = getSortQueryParams(url, queryMap);\n\n  const reqMeta: Partial<ReqMeta> = {\n    contentSHA256: EMPTY_STRING_SHA256,\n    method: METHOD_GET,\n    url: {\n      hostname: new URL(url).hostname,\n      query: url.searchParams.toString(),\n      path,\n    },\n    // contentType: 'application/octet-stream',\n  };\n\n  const optionsWithOutHeaders: Omit<RequestInit, 'headers'> = {\n    method: METHOD_GET,\n  };\n\n  return {\n    url: url.href,\n    optionsWithOutHeaders,\n    reqMeta,\n  };\n};\n\nexport const parseObjectStatusResponse = (data: string) => {\n  const xmlParser = new XMLParser({\n    parseTagValue: false,\n  });\n\n  const res = xmlParser.parse(data) as UploadProgressResponse;\n\n  return res;\n};\n","import { convertStrToBool, formatObjectInfo } from '@/types/sp/Common';\nimport {\n  GetListObjectPoliciesRequest,\n  GetListObjectPoliciesResponse,\n} from '@/types/sp/ListObjectPolicies';\nimport { generateUrlByBucketName } from '@/utils';\nimport { actionTypeFromJSON } from '@bnb-chain/greenfield-cosmos-types/greenfield/permission/common';\nimport { XMLParser } from 'fast-xml-parser';\nimport { encodePath, getSortQueryParams } from '../auth';\n\nexport const getListObjectPoliciesMetaInfo = (\n  endpoint: string,\n  params: GetListObjectPoliciesRequest,\n) => {\n  const { actionType, bucketName, objectName, limit = '10', startAfter = '' } = params;\n  const path = `/${encodePath(objectName)}`;\n  const queryMap = {\n    'object-policies': 'null',\n    'start-after': startAfter,\n    limit: String(limit),\n    'action-type': String(actionTypeFromJSON(actionType)),\n  };\n\n  let url = new URL(path, generateUrlByBucketName(endpoint, bucketName));\n  url = getSortQueryParams(url, queryMap);\n\n  return {\n    url: url.href,\n  };\n};\n\nexport const parseGetListObjectPoliciesResponse = (data: string) => {\n  const xmlParser = new XMLParser({\n    parseTagValue: false,\n  });\n  const res = xmlParser.parse(data) as GetListObjectPoliciesResponse;\n\n  let Policies = res.GfSpListObjectPoliciesResponse.Policies || [];\n\n  if (Policies) {\n    if (!Array.isArray(Policies)) {\n      Policies = [Policies];\n    }\n\n    Policies = Policies.map((item) => {\n      return {\n        ...item,\n        PrincipalType: Number(item.ResourceType),\n        ResourceType: Number(item.ResourceType),\n        CreateTimestamp: Number(item.CreateTimestamp),\n        UpdateTimestamp: Number(item.UpdateTimestamp),\n        ExpirationTime: Number(item.ExpirationTime),\n      };\n    });\n  }\n\n  res.GfSpListObjectPoliciesResponse = {\n    Policies,\n  };\n\n  return res;\n};\n","import { convertStrToBool, formatObjectInfo } from '@/types/sp/Common';\nimport { ListObjectsByBucketNameResponse } from '@/types/sp/ListObjectsByBucketName';\nimport { XMLParser } from 'fast-xml-parser';\n\n// https://github.com/bnb-chain/greenfield-storage-provider/blob/master/docs/storage-provider-rest-api/list_objects_by_bucket.md\nexport const parseListObjectsByBucketNameResponse = async (data: string) => {\n  const xmlParser = new XMLParser({\n    parseTagValue: false,\n  });\n  const res = xmlParser.parse(data) as ListObjectsByBucketNameResponse;\n\n  let Objects = res.GfSpListObjectsByBucketNameResponse.Objects || [];\n  if (Objects) {\n    if (!Array.isArray(Objects)) {\n      Objects = [Objects];\n    }\n\n    Objects = Objects.map((item) => {\n      return {\n        ...item,\n        // @ts-ignore\n        Removed: convertStrToBool(item.Removed),\n        UpdateAt: Number(item.UpdateAt),\n        DeleteAt: Number(item.DeleteAt),\n        ObjectInfo: formatObjectInfo(item.ObjectInfo),\n      };\n    });\n  }\n\n  let CommonPrefixes = res.GfSpListObjectsByBucketNameResponse.CommonPrefixes || [];\n  if (CommonPrefixes) {\n    if (!Array.isArray(CommonPrefixes)) {\n      CommonPrefixes = [CommonPrefixes];\n    }\n  }\n\n  res.GfSpListObjectsByBucketNameResponse = {\n    ...res.GfSpListObjectsByBucketNameResponse,\n    Objects,\n    CommonPrefixes,\n    // @ts-ignore\n    IsTruncated: convertStrToBool(res.GfSpListObjectsByBucketNameResponse.IsTruncated),\n  };\n\n  return res;\n};\n","import { ListObjectsByIDsRequest, ListObjectsByIDsResponse } from '@/types';\nimport { formatObjectInfo, convertStrToBool } from '@/types/sp/Common';\nimport { XMLParser } from 'fast-xml-parser';\nimport { getSortQueryParams } from '../auth';\n\n// https://github.com/bnb-chain/greenfield-storage-provider/blob/master/docs/storage-provider-rest-api/list_objects_by_ids.md\nexport const getListObjectsByIDsMetaInfo = (endpoint: string, params: ListObjectsByIDsRequest) => {\n  const path = '';\n  const queryMap = {\n    ids: params.ids.join(','),\n    'objects-query': 'null',\n  };\n\n  let url = new URL(path, endpoint);\n  url = getSortQueryParams(url, queryMap);\n\n  return {\n    url: url.href,\n  };\n};\n\nexport const parseListObjectsByIdsResponse = async (data: string) => {\n  const xmlParser = new XMLParser({\n    parseTagValue: false,\n  });\n  const res = xmlParser.parse(data) as ListObjectsByIDsResponse;\n\n  let ObjectEntry = res.GfSpListObjectsByIDsResponse.ObjectEntry;\n\n  if (ObjectEntry) {\n    if (!Array.isArray(ObjectEntry)) {\n      ObjectEntry = [ObjectEntry];\n    }\n\n    ObjectEntry = ObjectEntry.map((item) => {\n      let Value = item.Value;\n      if (Value) {\n        Value = {\n          ...item.Value,\n          ObjectInfo: formatObjectInfo(item.Value.ObjectInfo),\n          // @ts-ignore\n          Removed: convertStrToBool(item.Value.Removed),\n          UpdateAt: Number(item.Value.UpdateAt),\n          DeleteAt: Number(item.Value.DeleteAt),\n        };\n      }\n\n      return {\n        ...item,\n        Id: Number(item.Id),\n        Value,\n      };\n    });\n  }\n\n  res.GfSpListObjectsByIDsResponse = {\n    ...res.GfSpListObjectsByIDsResponse,\n    ObjectEntry,\n  };\n\n  return res;\n};\n","import { getResumablePutObjectMetaInfo } from '@/clients/spclient/spApis/resumablePutObject';\nimport { DelegatedOpts, UploadFile } from '@/types/sp/Common';\nimport {\n  ActionType,\n  Principal,\n  PrincipalType,\n  principalTypeFromJSON,\n} from '@bnb-chain/greenfield-cosmos-types/greenfield/permission/common';\nimport {\n  QueryHeadObjectResponse,\n  QueryNFTRequest,\n  QueryObjectNFTResponse,\n  QueryPolicyForAccountResponse,\n  QueryVerifyPermissionResponse,\n} from '@bnb-chain/greenfield-cosmos-types/greenfield/storage/query';\nimport {\n  MsgCancelCreateObject,\n  MsgCreateObject,\n  MsgDeleteObject,\n  MsgDeletePolicy,\n  MsgPutPolicy,\n  MsgUpdateObjectInfo,\n} from '@bnb-chain/greenfield-cosmos-types/greenfield/storage/tx';\nimport { base64FromBytes, bytesFromBase64 } from '@bnb-chain/greenfield-cosmos-types/helpers';\nimport { hexlify } from '@ethersproject/bytes';\nimport { ed25519 } from '@noble/curves/ed25519';\nimport { Headers } from 'cross-fetch';\nimport { container, delay, inject, injectable } from 'tsyringe';\nimport {\n  DEFAULT_PART_SIZE,\n  GRNToString,\n  MsgCancelCreateObjectTypeUrl,\n  MsgCreateObjectTypeUrl,\n  MsgDeleteObjectTypeUrl,\n  MsgUpdateObjectInfoTypeUrl,\n  newObjectGRN,\n} from '..';\nimport { RpcQueryClient } from '../clients/queryclient';\nimport {\n  HTTPHeaderRegPubKey,\n  encodePath,\n  getAuthorization,\n  getSortQuery,\n} from '../clients/spclient/auth';\nimport {\n  getDelegatedCreateFolderMetaInfo,\n  parseDelegatedCreateFolderResponse,\n} from '../clients/spclient/spApis/delegatedCreateFolder';\nimport { getGetObjectMetaInfo } from '../clients/spclient/spApis/getObject';\nimport {\n  getObjectMetaInfo,\n  parseGetObjectMetaResponse,\n} from '../clients/spclient/spApis/getObjectMeta';\nimport {\n  getObjectOffsetInfo,\n  parseObjectOffsetResponse,\n} from '../clients/spclient/spApis/getObjectOffset';\nimport {\n  getObjectStatusInfo,\n  parseObjectStatusResponse,\n} from '../clients/spclient/spApis/getObjectStatus';\nimport {\n  getListObjectPoliciesMetaInfo,\n  parseGetListObjectPoliciesResponse,\n} from '../clients/spclient/spApis/listObjectPolicies';\nimport { parseListObjectsByBucketNameResponse } from '../clients/spclient/spApis/listObjectsByBucket';\nimport {\n  getListObjectsByIDsMetaInfo,\n  parseListObjectsByIdsResponse,\n} from '../clients/spclient/spApis/listObjectsByIds';\nimport { parseError } from '../clients/spclient/spApis/parseError';\nimport { getPutObjectMetaInfo } from '../clients/spclient/spApis/putObject';\nimport { SpClient } from '../clients/spclient/spClient';\nimport { TxClient } from '../clients/txClient';\nimport { METHOD_GET, NORMAL_ERROR_CODE } from '../constants/http';\nimport { MsgCancelCreateObjectSDKTypeEIP712 } from '../messages/greenfield/storage/MsgCancelCreateObject';\nimport { MsgCreateObjectSDKTypeEIP712 } from '../messages/greenfield/storage/MsgCreateObject';\nimport { MsgDeleteObjectSDKTypeEIP712 } from '../messages/greenfield/storage/MsgDeleteObject';\nimport { MsgUpdateObjectInfoSDKTypeEIP712 } from '../messages/greenfield/storage/MsgUpdateObjectInfo';\nimport {\n  AuthType,\n  GetListObjectPoliciesRequest,\n  GetListObjectPoliciesResponse,\n  GetPrivewObject,\n  ListObjectsByBucketNameRequest,\n  ListObjectsByIDsRequest,\n  ListObjectsByIDsResponse,\n  Long,\n  ObjectStatus,\n  OnProgress,\n  SpResponse,\n  TxResponse,\n  UploadOffsetResponse,\n} from '../types';\nimport {\n  DelegateCreateFolderRepsonse,\n  DelegatedCreateFolderRequest,\n} from '../types/sp/DelegateCreateFolder';\nimport { DelegatedPubObjectRequest } from '../types/sp/DelegatedPubObject';\nimport { GetObjectRequest } from '../types/sp/GetObject';\nimport { GetObjectMetaRequest, GetObjectMetaResponse } from '../types/sp/GetObjectMeta';\nimport { ListObjectsByBucketNameResponse } from '../types/sp/ListObjectsByBucketName';\nimport { PutObjectRequest } from '../types/sp/PutObject';\nimport { UploadProgressResponse } from '../types/sp/UploadProgress';\nimport { assertAuthType, assertFileType, assertStringRequire } from '../utils/asserts/params';\nimport {\n  checkObjectName,\n  generateUrlByBucketName,\n  verifyBucketName,\n  verifyObjectName,\n  verifyUrl,\n} from '../utils/asserts/s3';\nimport { Sp } from './sp';\nimport { Storage } from './storage';\n\nexport interface IObject {\n  createObject(msg: MsgCreateObject): Promise<TxResponse>;\n\n  uploadObject(configParam: PutObjectRequest, authType: AuthType): Promise<SpResponse<null>>;\n\n  delegateUploadObject(\n    params: DelegatedPubObjectRequest,\n    authType: AuthType,\n  ): Promise<SpResponse<null>>;\n\n  cancelCreateObject(msg: MsgCancelCreateObject): Promise<TxResponse>;\n\n  updateObjectInfo(msg: MsgUpdateObjectInfo): Promise<TxResponse>;\n\n  deleteObject(msg: MsgDeleteObject): Promise<TxResponse>;\n\n  headObject(bucketName: string, objectName: string): Promise<QueryHeadObjectResponse>;\n\n  headObjectById(objectId: string): Promise<QueryHeadObjectResponse>;\n\n  headObjectNFT(request: QueryNFTRequest): Promise<QueryObjectNFTResponse>;\n\n  /**\n   * get s3 object's blob\n   */\n  getObject(configParam: GetObjectRequest, authType: AuthType): Promise<SpResponse<Blob>>;\n\n  getObjectPreviewUrl(configParam: GetPrivewObject, authType: AuthType): Promise<string>;\n\n  /**\n   * download s3 object\n   */\n  downloadFile(configParam: GetObjectRequest, authType: AuthType): Promise<void>;\n\n  listObjects(\n    configParam: ListObjectsByBucketNameRequest,\n  ): Promise<SpResponse<ListObjectsByBucketNameResponse>>;\n\n  createFolder(\n    msg: Omit<MsgCreateObject, 'payloadSize' | 'contentType' | 'expectChecksums'>,\n  ): Promise<TxResponse>;\n\n  delegateCreateFolder(\n    params: DelegatedCreateFolderRequest,\n    authType: AuthType,\n  ): Promise<SpResponse<DelegateCreateFolderRepsonse>>;\n\n  putObjectPolicy(\n    bucketName: string,\n    objectName: string,\n    // expirationTime: Date,\n    srcMsg: Omit<MsgPutPolicy, 'resource'>,\n  ): Promise<TxResponse>;\n\n  deleteObjectPolicy(\n    operator: string,\n    bucketName: string,\n    objectName: string,\n    principalAddr: string,\n    principalType: keyof typeof PrincipalType,\n  ): Promise<TxResponse>;\n\n  isObjectPermissionAllowed(\n    bucketName: string,\n    objectName: string,\n    actionType: ActionType,\n    operator: string,\n  ): Promise<QueryVerifyPermissionResponse>;\n\n  getObjectPolicy(\n    bucketName: string,\n    objectName: string,\n    principalAddr: string,\n  ): Promise<QueryPolicyForAccountResponse>;\n\n  getObjectMeta(params: GetObjectMetaRequest): Promise<SpResponse<GetObjectMetaResponse>>;\n\n  listObjectsByIds(params: ListObjectsByIDsRequest): Promise<SpResponse<ListObjectsByIDsResponse>>;\n\n  listObjectPolicies(\n    params: GetListObjectPoliciesRequest,\n  ): Promise<SpResponse<GetListObjectPoliciesResponse>>;\n\n  /**\n   * return the status of object including the uploading progress\n   */\n  getObjectUploadProgress(\n    bucketName: string,\n    objectName: string,\n    authType: AuthType,\n  ): Promise<string>;\n}\n\n@injectable()\nexport class Objects implements IObject {\n  constructor(\n    @inject(delay(() => TxClient)) private txClient: TxClient,\n    @inject(delay(() => Storage)) private storage: Storage,\n    @inject(delay(() => Sp)) private sp: Sp,\n  ) {}\n\n  private queryClient: RpcQueryClient = container.resolve(RpcQueryClient);\n  private spClient = container.resolve(SpClient);\n\n  public async createObject(msg: MsgCreateObject) {\n    verifyBucketName(msg.bucketName);\n    verifyObjectName(msg.objectName);\n    checkObjectName(msg.objectName);\n    assertStringRequire(msg.creator, 'empty creator address');\n\n    const createObjMsg: MsgCreateObject = {\n      ...msg,\n      primarySpApproval: {\n        globalVirtualGroupFamilyId: 0,\n        expiredHeight: Long.fromInt(0),\n        sig: Uint8Array.from([]),\n      },\n    };\n\n    return await this.txClient.tx(\n      MsgCreateObjectTypeUrl,\n      msg.creator,\n      MsgCreateObjectSDKTypeEIP712,\n      {\n        ...MsgCreateObject.toSDK(createObjMsg),\n        primary_sp_approval: {\n          expired_height: '0',\n          global_virtual_group_family_id: 0,\n        },\n        expect_checksums: createObjMsg.expectChecksums.map((e) => base64FromBytes(e)),\n        payload_size: createObjMsg.payloadSize.toNumber(),\n      },\n      MsgCreateObject.encode(createObjMsg).finish(),\n    );\n  }\n\n  public async delegateUploadObject(params: DelegatedPubObjectRequest, authType: AuthType) {\n    const {\n      bucketName,\n      objectName,\n      body,\n      resumableOpts,\n      timeout = 30000,\n      delegatedOpts,\n      onProgress,\n    } = params;\n\n    assertAuthType(authType);\n    verifyBucketName(bucketName);\n    verifyObjectName(objectName);\n\n    const disableResumable = resumableOpts?.disableResumable ?? true;\n    const partSize = resumableOpts?.partSize ?? DEFAULT_PART_SIZE;\n\n    let endpoint = params.endpoint;\n    if (!endpoint) {\n      endpoint = await this.sp.getSPUrlByBucket(bucketName);\n    }\n\n    const { params: storageParams } = await this.storage.params();\n    const maxSegmentSize = storageParams.versionedParams.maxSegmentSize.toNumber();\n\n    if (partSize % maxSegmentSize !== 0) {\n      throw new Error(\n        'partSize should be an integer multiple of the segment size: ' + maxSegmentSize,\n      );\n    }\n\n    if (body.size <= partSize || disableResumable) {\n      return this.putObject({\n        endpoint,\n        bucketName,\n        objectName,\n        body,\n        authType,\n        delegatedOpts,\n        duration: timeout,\n        txnHash: '',\n        onProgress,\n      });\n    }\n\n    return await this.putResumableObject(\n      endpoint,\n      bucketName,\n      objectName,\n      body,\n      partSize,\n      authType,\n      timeout,\n      delegatedOpts,\n    );\n  }\n\n  public async uploadObject(\n    params: PutObjectRequest,\n    authType: AuthType,\n  ): Promise<SpResponse<null>> {\n    const { bucketName, objectName, body, duration = 30000, resumableOpts, onProgress } = params;\n    assertAuthType(authType);\n    verifyBucketName(bucketName);\n    verifyObjectName(objectName);\n\n    let endpoint = params.endpoint;\n    if (!endpoint) {\n      endpoint = await this.sp.getSPUrlByBucket(bucketName);\n    }\n\n    let txnHash = params.txnHash;\n    if (!txnHash) {\n      const { body } = await this.getObjectMeta({\n        bucketName,\n        objectName,\n        endpoint,\n      });\n      txnHash = body.GfSpGetObjectMetaResponse.Object.CreateTxHash;\n    }\n\n    const { params: storageParams } = await this.storage.params();\n\n    const maxSegmentSize = storageParams.versionedParams.maxSegmentSize.toNumber();\n\n    const disableResumable = resumableOpts?.disableResumable ?? true;\n    const partSize = resumableOpts?.partSize ?? DEFAULT_PART_SIZE;\n\n    if (partSize % maxSegmentSize !== 0) {\n      throw new Error(\n        'partSize should be an integer multiple of the segment size: ' + maxSegmentSize,\n      );\n    }\n\n    if (body.size <= partSize || disableResumable) {\n      return this.putObject({\n        endpoint,\n        bucketName,\n        objectName,\n        body,\n        txnHash,\n        authType,\n        duration,\n        onProgress,\n      });\n    }\n\n    return await this.putResumableObject(\n      endpoint,\n      bucketName,\n      objectName,\n      body,\n      partSize,\n      authType,\n      duration,\n    );\n  }\n\n  private async putObject(params: {\n    endpoint: string;\n    bucketName: string;\n    objectName: string;\n    body: UploadFile;\n    txnHash: string;\n    authType: AuthType;\n    delegatedOpts?: DelegatedOpts;\n    duration: number;\n    onProgress?: OnProgress;\n  }): Promise<SpResponse<null>> {\n    const {\n      authType,\n      body,\n      bucketName,\n      delegatedOpts,\n      duration,\n      endpoint,\n      objectName,\n      txnHash,\n      onProgress,\n    } = params;\n\n    const { reqMeta, optionsWithOutHeaders, url, file } = await getPutObjectMetaInfo(endpoint, {\n      bucketName,\n      objectName,\n      contentType: body.type,\n      txnHash,\n      body,\n      delegatedOpts,\n    });\n    const signHeaders = await this.spClient.signHeaders(reqMeta, authType);\n\n    try {\n      const result = await this.spClient.upload(\n        url,\n        {\n          ...optionsWithOutHeaders,\n          headers: signHeaders,\n        },\n        duration,\n        file,\n        {\n          onProgress,\n        },\n      );\n\n      const { status } = result;\n\n      return { code: 0, message: 'Put object success.', statusCode: status };\n    } catch (error: any) {\n      return {\n        code: error.code || -1,\n        message: error.message,\n        statusCode: error?.statusCode || NORMAL_ERROR_CODE,\n      };\n    }\n  }\n\n  private splitPartInfo(objectSize: number, configuredPartSize: number) {\n    const partSizeFlt = configuredPartSize;\n    // Total parts count.\n    const totalPartsCount = Math.ceil(objectSize / partSizeFlt);\n    // Part size.\n    const partSize = partSizeFlt;\n    // Last part size.\n    const lastPartSize = objectSize - (totalPartsCount - 1) * partSize;\n    return {\n      totalPartsCount,\n      partSize,\n      lastPartSize,\n    };\n  }\n\n  private async putResumableObject(\n    endpoint: string,\n    bucketName: string,\n    objectName: string,\n    body: UploadFile,\n    partSize: number,\n    authType: AuthType,\n    timeout: number,\n    delegatedOpts?: DelegatedOpts,\n  ) {\n    let offset = 0;\n    if (!delegatedOpts) {\n      const isObjectExist = await this.headSPObjectInfo(bucketName, objectName, authType);\n      if (!isObjectExist) {\n        throw new Error('Object does not exist');\n      }\n\n      offset = await this.getObjectResumableUploadOffset(bucketName, objectName, authType);\n    }\n\n    const { totalPartsCount } = this.splitPartInfo(body.size, partSize);\n\n    // split file\n    const file = assertFileType(body) ? body.content : body;\n    const chunks = [];\n    for (let i = 0; i < totalPartsCount; i++) {\n      const start = i * partSize;\n      const end = Math.min(start + partSize, body.size);\n      const chunk = file.slice(start, end);\n      chunks.push(chunk);\n    }\n\n    let startPartNumber = offset / partSize;\n    while (startPartNumber < totalPartsCount) {\n      const chunkFile = new File([chunks[startPartNumber]], '');\n\n      const { reqMeta, optionsWithOutHeaders, url } = await getResumablePutObjectMetaInfo(\n        endpoint,\n        {\n          bucketName,\n          objectName,\n          contentType: body.type,\n          body: chunkFile,\n          offset: startPartNumber * partSize,\n          complete: startPartNumber === totalPartsCount - 1,\n          delegatedOpts,\n        },\n      );\n\n      const signHeaders = await this.spClient.signHeaders(reqMeta, authType);\n\n      try {\n        await this.spClient.callApi(\n          url,\n          {\n            ...optionsWithOutHeaders,\n            headers: signHeaders,\n          },\n          timeout,\n        );\n      } catch (error: any) {\n        return {\n          code: -1,\n          message: error.message,\n          statusCode: error?.statusCode || NORMAL_ERROR_CODE,\n        };\n      } finally {\n        startPartNumber++;\n      }\n    }\n\n    return { code: 0, message: 'Put all object parts success.', statusCode: 200 };\n  }\n\n  private async headSPObjectInfo(bucketName: string, objectName: string, authType: AuthType) {\n    const { code } = await this.getObjectStatusFromSp(bucketName, objectName, authType);\n\n    if (code === 0) {\n      return true;\n    }\n\n    return false;\n  }\n\n  private async getObjectResumableUploadOffset(\n    bucketName: string,\n    objectName: string,\n    authType: AuthType,\n  ) {\n    const { objectInfo } = await this.headObject(bucketName, objectName);\n    if (!objectInfo) {\n      throw new Error('Object not found');\n    }\n\n    if (objectInfo.objectStatus == ObjectStatus.OBJECT_STATUS_CREATED) {\n      const { code, body } = await this.getObjectOffsetFromSP(bucketName, objectName, authType);\n\n      if (body) {\n        return body.QueryResumeOffset.Offset;\n      }\n    }\n\n    return 0;\n  }\n\n  private async getObjectOffsetFromSP(\n    bucketName: string,\n    objectName: string,\n    authType: AuthType,\n  ): Promise<SpResponse<UploadOffsetResponse>> {\n    const endpoint = await this.sp.getSPUrlByBucket(bucketName);\n\n    const { url, optionsWithOutHeaders, reqMeta } = await getObjectOffsetInfo(endpoint, {\n      bucketName,\n      objectName,\n    });\n\n    const signHeaders = await this.spClient.signHeaders(reqMeta, authType);\n\n    try {\n      const result = await this.spClient.callApi(\n        url,\n        {\n          ...optionsWithOutHeaders,\n          headers: signHeaders,\n        },\n        5000,\n      );\n      // console.log('upload-context result', result);\n      const { status } = result;\n\n      if (!result.ok) {\n        const xmlError = await result.text();\n        const { code, message } = await parseError(xmlError);\n        return {\n          code: code || -1,\n          message: message || 'error',\n          statusCode: status,\n          body: {\n            QueryResumeOffset: {\n              Offset: 0,\n            },\n          },\n        };\n      }\n\n      const xmlData = await result.text();\n      const res = parseObjectOffsetResponse(xmlData);\n\n      return { code: 0, message: 'get upload offset success', statusCode: status, body: res };\n    } catch (error: any) {\n      // console.log('err', error);\n      const message = error.message;\n\n      if (message.includes('no uploading record')) {\n        return {\n          code: -1,\n          message: message,\n          statusCode: error.code,\n          body: {\n            QueryResumeOffset: {\n              Offset: 0,\n            },\n          },\n        };\n      }\n      return {\n        code: -1,\n        message: error.message,\n        statusCode: error?.statusCode || NORMAL_ERROR_CODE,\n      };\n    }\n  }\n\n  private async getObjectStatusFromSp(\n    bucketName: string,\n    objectName: string,\n    authType: AuthType,\n  ): Promise<SpResponse<UploadProgressResponse>> {\n    const endpoint = await this.sp.getSPUrlByBucket(bucketName);\n\n    const { url, optionsWithOutHeaders, reqMeta } = await getObjectStatusInfo(endpoint, {\n      bucketName,\n      objectName,\n    });\n\n    const signHeaders = await this.spClient.signHeaders(reqMeta, authType);\n\n    try {\n      const result = await this.spClient.callApi(\n        url,\n        {\n          ...optionsWithOutHeaders,\n          headers: signHeaders,\n        },\n        5000,\n      );\n      // console.log('upload-progress result', result);\n      const { status } = result;\n\n      if (!result.ok) {\n        const xmlError = await result.text();\n        const { code, message } = await parseError(xmlError);\n        throw {\n          code: code || -1,\n          message: message || 'error',\n          statusCode: status,\n        };\n      }\n\n      const xmlData = await result.text();\n      const res = parseObjectStatusResponse(xmlData);\n\n      return { code: 0, message: 'success', statusCode: status, body: res };\n    } catch (error: any) {\n      return {\n        code: -1,\n        message: error.message,\n        statusCode: error?.statusCode || NORMAL_ERROR_CODE,\n      };\n    }\n  }\n\n  public async cancelCreateObject(msg: MsgCancelCreateObject) {\n    return await this.txClient.tx(\n      MsgCancelCreateObjectTypeUrl,\n      msg.operator,\n      MsgCancelCreateObjectSDKTypeEIP712,\n      MsgCancelCreateObject.toSDK(msg),\n      MsgCancelCreateObject.encode(msg).finish(),\n    );\n  }\n\n  public async deleteObject(msg: MsgDeleteObject) {\n    return await this.txClient.tx(\n      MsgDeleteObjectTypeUrl,\n      msg.operator,\n      MsgDeleteObjectSDKTypeEIP712,\n      MsgDeleteObject.toSDK(msg),\n      MsgDeleteObject.encode(msg).finish(),\n    );\n  }\n\n  public async updateObjectInfo(msg: MsgUpdateObjectInfo) {\n    return await this.txClient.tx(\n      MsgUpdateObjectInfoTypeUrl,\n      msg.operator,\n      MsgUpdateObjectInfoSDKTypeEIP712,\n      MsgUpdateObjectInfo.toSDK(msg),\n      MsgUpdateObjectInfo.encode(msg).finish(),\n    );\n  }\n\n  public async headObject(bucketName: string, objectName: string) {\n    const rpc = await this.queryClient.getStorageQueryClient();\n\n    return rpc.HeadObject({\n      bucketName,\n      objectName,\n    });\n  }\n\n  public async headObjectById(objectId: string) {\n    const rpc = await this.queryClient.getStorageQueryClient();\n\n    return rpc.HeadObjectById({\n      objectId,\n    });\n  }\n\n  public async headObjectNFT(request: QueryNFTRequest) {\n    const rpc = await this.queryClient.getStorageQueryClient();\n    return await rpc.HeadObjectNFT(request);\n  }\n\n  public async getObject(params: GetObjectRequest, authType: AuthType) {\n    try {\n      assertAuthType(authType);\n      const { bucketName, objectName, duration = 30000 } = params;\n      verifyBucketName(bucketName);\n      verifyObjectName(objectName);\n\n      let endpoint = params.endpoint;\n      if (!endpoint) {\n        endpoint = await this.sp.getSPUrlByBucket(bucketName);\n      }\n\n      const { reqMeta, optionsWithOutHeaders, url } = await getGetObjectMetaInfo(endpoint, {\n        bucketName,\n        objectName,\n      });\n\n      const headers = await this.spClient.signHeaders(reqMeta, authType);\n\n      const result = await this.spClient.callApi(\n        url,\n        {\n          ...optionsWithOutHeaders,\n          headers,\n        },\n        duration,\n      );\n      const { status } = result;\n      if (!result.ok) {\n        const xmlError = await result.text();\n        const { code, message } = await parseError(xmlError);\n\n        return {\n          code: code || -1,\n          message: message || 'Get object error.',\n          statusCode: status,\n        };\n      }\n\n      const fileBlob = await result.blob();\n      return {\n        code: 0,\n        body: fileBlob,\n        message: 'Get object success.',\n        statusCode: status,\n      };\n    } catch (error: any) {\n      return {\n        code: -1,\n        message: error.message,\n        statusCode: error?.statusCode || NORMAL_ERROR_CODE,\n      };\n    }\n  }\n\n  public async getObjectPreviewUrl(params: GetPrivewObject, authType: AuthType) {\n    assertAuthType(authType);\n    if (authType.type === 'ECDSA') {\n      throw new Error('Get object preview url only support EDDSA');\n    }\n    const { bucketName, objectName, queryMap } = params;\n    verifyBucketName(bucketName);\n    verifyObjectName(objectName);\n    let endpoint = params.endpoint;\n    if (!endpoint) {\n      endpoint = await this.sp.getSPUrlByBucket(bucketName);\n    }\n\n    const path = '/' + encodePath(objectName);\n    const url = generateUrlByBucketName(endpoint, bucketName) + path;\n\n    let pubKey = '';\n    if (authType.type === 'EDDSA') {\n      pubKey = hexlify(ed25519.getPublicKey(authType.seed.slice(2)));\n    }\n\n    const queryRaw = getSortQuery({\n      ...queryMap,\n      [HTTPHeaderRegPubKey]: pubKey.slice(2),\n    });\n\n    const canonicalRequest = [\n      METHOD_GET,\n      `/${encodePath(objectName)}`,\n      queryRaw,\n      new URL(url).host,\n      '\\n',\n    ].join('\\n');\n\n    const auth = getAuthorization(canonicalRequest, authType);\n\n    return `${url}?Authorization=${encodeURIComponent(auth)}&${queryRaw}`;\n  }\n\n  public async downloadFile(configParam: GetObjectRequest, authType: AuthType): Promise<void> {\n    try {\n      const { objectName } = configParam;\n      const getObjectResult = await this.getObject(configParam, authType);\n\n      if (getObjectResult.code !== 0) {\n        throw new Error(getObjectResult.message);\n      }\n\n      const file = getObjectResult?.body;\n      if (file) {\n        // const {file} = getObjectResult;\n        const fileURL = URL.createObjectURL(file);\n        // create <a> tag dynamically\n        const fileLink = document.createElement('a');\n        fileLink.href = fileURL;\n        // it forces the name of the downloaded file\n        fileLink.download = objectName as string;\n        // triggers the click event\n        fileLink.click();\n      }\n      return;\n    } catch (error: any) {\n      throw new Error(error);\n    }\n  }\n\n  public async listObjects(configParam: ListObjectsByBucketNameRequest) {\n    try {\n      const { bucketName, endpoint, duration = 30000, query = new URLSearchParams() } = configParam;\n\n      verifyBucketName(bucketName);\n      verifyUrl(endpoint);\n\n      const url = `${generateUrlByBucketName(endpoint, bucketName)}?${query?.toString()}`;\n      const headers = new Headers();\n\n      const result = await this.spClient.callApi(\n        url,\n        {\n          headers,\n          method: METHOD_GET,\n        },\n        duration,\n      );\n      const { status } = result;\n      if (!result.ok) {\n        const xmlError = await result.text();\n        const { code, message } = await parseError(xmlError);\n        return {\n          code: code || -1,\n          message: message || 'List object error.',\n          statusCode: status,\n        };\n      }\n\n      const xmlData = await result.text();\n      const res = await parseListObjectsByBucketNameResponse(xmlData);\n\n      return {\n        code: 0,\n        message: 'List object success.',\n        statusCode: status,\n        body: res,\n      };\n    } catch (error: any) {\n      return {\n        code: -1,\n        message: error.message,\n        statusCode: error?.statusCode || NORMAL_ERROR_CODE,\n      };\n    }\n  }\n\n  public async createFolder(\n    msg: Omit<MsgCreateObject, 'payloadSize' | 'contentType' | 'expectChecksums'>,\n  ) {\n    if (!msg.objectName.endsWith('/')) {\n      throw new Error(\n        'failed to create folder. Folder names must end with a forward slash (/) character',\n      );\n    }\n\n    /**\n     * const file = new File([], 'scc', { type: 'text/plain' });\n      const fileBytes = await file.arrayBuffer();\n      console.log('fileBytes', fileBytes);\n      const rs = new ReedSolomon();\n      const fileBytes = await file.arrayBuffer();\n      const expectCheckSums = rs.encode(new Uint8Array(fileBytes));\n     */\n\n    const newMsg: MsgCreateObject = {\n      ...msg,\n      payloadSize: Long.fromInt(0),\n      contentType: 'text/plain',\n      expectChecksums: [\n        '47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=',\n        '47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=',\n        '47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=',\n        '47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=',\n        '47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=',\n        '47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=',\n        '47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=',\n      ].map((x) => bytesFromBase64(x)),\n    };\n\n    return this.createObject(newMsg);\n  }\n\n  public async delegateCreateFolder(params: DelegatedCreateFolderRequest, authType: AuthType) {\n    const { bucketName, objectName, delegatedOpts, timeout = 10000 } = params;\n\n    let endpoint = params.endpoint;\n    if (!endpoint) {\n      endpoint = await this.sp.getSPUrlByBucket(bucketName);\n    }\n    const { reqMeta, optionsWithOutHeaders, url } = await getDelegatedCreateFolderMetaInfo(\n      endpoint,\n      {\n        bucketName: bucketName,\n        objectName: objectName,\n        // contentType: '',\n        delegatedOpts,\n      },\n    );\n    const signHeaders = await this.spClient.signHeaders(reqMeta, authType);\n\n    try {\n      const result = await this.spClient.callApiV2(\n        url,\n        {\n          ...optionsWithOutHeaders,\n          headers: signHeaders,\n        },\n        timeout,\n      );\n      const { status } = result;\n\n      //@ts-ignore\n      const xmlData = result.text;\n      const res = parseDelegatedCreateFolderResponse(xmlData);\n\n      return { code: 0, message: 'Create folder success.', statusCode: status, body: res };\n    } catch (error: any) {\n      return {\n        code: error.code || -1,\n        message: error.message,\n        statusCode: error?.statusCode || NORMAL_ERROR_CODE,\n      };\n    }\n  }\n\n  public async putObjectPolicy(\n    bucketName: string,\n    objectName: string,\n    // expirationTime: Date,\n    srcMsg: Omit<MsgPutPolicy, 'resource'>,\n  ) {\n    const resource = GRNToString(newObjectGRN(bucketName, objectName));\n    const msg: MsgPutPolicy = {\n      ...srcMsg,\n      resource,\n      // expirationTime: fromJsonTimestamp(expirationTime),\n    };\n    return await this.storage.putPolicy(msg);\n  }\n\n  public async isObjectPermissionAllowed(\n    bucketName: string,\n    objectName: string,\n    actionType: ActionType,\n    operator: string,\n  ) {\n    const rpc = await this.queryClient.getStorageQueryClient();\n    return await rpc.VerifyPermission({\n      bucketName,\n      objectName,\n      actionType,\n      operator,\n    });\n  }\n\n  public async getObjectPolicy(bucketName: string, objectName: string, principalAddr: string) {\n    const rpc = await this.queryClient.getStorageQueryClient();\n\n    const resource = GRNToString(newObjectGRN(bucketName, objectName));\n\n    return await rpc.QueryPolicyForAccount({\n      resource,\n      principalAddress: principalAddr,\n    });\n  }\n\n  public async deleteObjectPolicy(\n    operator: string,\n    bucketName: string,\n    objectName: string,\n    principalAddr: string,\n    principalType: keyof typeof PrincipalType,\n  ) {\n    const resource = GRNToString(newObjectGRN(bucketName, objectName));\n    const principal: Principal = {\n      type: principalTypeFromJSON(principalType),\n      value: principalAddr,\n    };\n\n    const msg: MsgDeletePolicy = {\n      resource,\n      principal,\n      operator: operator,\n    };\n    return await this.storage.deletePolicy(msg);\n  }\n\n  public async getObjectMeta(params: GetObjectMetaRequest) {\n    const { bucketName, objectName, endpoint } = params;\n    verifyBucketName(bucketName);\n    verifyObjectName(objectName);\n\n    const { url } = getObjectMetaInfo(endpoint, params);\n\n    const result = await this.spClient.callApi(url, {\n      method: METHOD_GET,\n    });\n\n    const xml = await result.text();\n    const res = await parseGetObjectMetaResponse(xml);\n\n    return {\n      code: 0,\n      message: 'get object meta success.',\n      statusCode: result.status,\n      body: res,\n    };\n  }\n\n  public async listObjectsByIds(params: ListObjectsByIDsRequest) {\n    try {\n      const sp = await this.sp.getInServiceSP();\n      const { url } = getListObjectsByIDsMetaInfo(sp.endpoint, params);\n\n      const result = await this.spClient.callApi(\n        url,\n        {\n          headers: {},\n          method: METHOD_GET,\n        },\n        3000,\n      );\n      const { status } = result;\n      if (!result.ok) {\n        const xmlError = await result.text();\n        const { code, message } = await parseError(xmlError);\n        throw {\n          code: code || -1,\n          message: message || 'error',\n          statusCode: status,\n        };\n      }\n\n      const xmlData = await result.text();\n      const res = await parseListObjectsByIdsResponse(xmlData);\n\n      return {\n        code: 0,\n        message: 'success',\n        statusCode: status,\n        body: res,\n      };\n    } catch (error: any) {\n      return {\n        code: -1,\n        message: error.message,\n        statusCode: error?.statusCode || NORMAL_ERROR_CODE,\n      };\n    }\n  }\n\n  public async listObjectPolicies(params: GetListObjectPoliciesRequest) {\n    let endpoint = params.endpoint;\n    if (!endpoint) {\n      endpoint = await this.sp.getSPUrlByBucket(params.bucketName);\n    }\n    const { url } = getListObjectPoliciesMetaInfo(endpoint, params);\n\n    const result = await this.spClient.callApi(url, {\n      headers: {},\n      method: METHOD_GET,\n    });\n\n    const xml = await result.text();\n    const res = parseGetListObjectPoliciesResponse(xml);\n\n    return {\n      code: 0,\n      message: 'success',\n      statusCode: result.status,\n      body: res,\n    };\n  }\n\n  public async getObjectUploadProgress(bucketName: string, objectName: string, authType: AuthType) {\n    const { objectInfo } = await this.headObject(bucketName, objectName);\n\n    if (!objectInfo) {\n      throw new Error('object not exist');\n    }\n\n    if (objectInfo.objectStatus == ObjectStatus.OBJECT_STATUS_CREATED) {\n      const { body, message } = await this.getObjectStatusFromSp(bucketName, objectName, authType);\n\n      if (!body) {\n        throw new Error('fail to fetch object uploading progress from sp ' + message);\n      }\n\n      return body.QueryUploadProgress.ProgressDescription;\n    }\n\n    return objectInfo.objectStatus.toString();\n  }\n}\n","import { IUpdateOneSpPubKeyParams } from '@/types';\nimport { fetchWithTimeout } from '@/utils/http';\nimport { Headers } from 'cross-fetch';\n\nexport const updateUserAccountKey = async ({\n  address,\n  domain,\n  sp,\n  pubKey,\n  expireDate,\n  authorization,\n}: IUpdateOneSpPubKeyParams) => {\n  let result;\n  const url = `${sp.endpoint}/auth/update_key_v2`;\n  const headers = new Headers({\n    'X-Gnfd-User-Address': address,\n    'X-Gnfd-App-Domain': domain,\n    'X-Gnfd-App-Reg-Public-Key': pubKey,\n    'X-Gnfd-Expiry-Timestamp': expireDate,\n    Authorization: authorization,\n  });\n\n  try {\n    result = await fetchWithTimeout(url, {\n      headers,\n      method: 'POST',\n    });\n    if (!result.ok) {\n      return { code: -1, data: { address }, message: 'upload sp pubKey error.' };\n    }\n  } catch (error) {\n    return { code: -1, data: { address }, message: 'upload sp pubKey error.' };\n  }\n\n  return {\n    code: 0,\n    data: {\n      ...sp,\n    },\n  };\n};\n","import {\n  IFetchNonces,\n  TGenSecondSignMsgParams,\n  IPersonalSignParams,\n  ISp,\n  IUpdateSpsPubKeyParams,\n} from '../types/storage';\nimport { getNonce } from '@/clients/spclient/spApis/getNonce';\nimport { updateUserAccountKey } from '@/clients/spclient/spApis/updateUserAccountKey';\n\nconst delay = <T>(ms: number, value: T) =>\n  new Promise((resolve) => setTimeout(() => resolve(value), ms));\n\nexport const promiseRaceAll = async (\n  promises: Promise<unknown>[],\n  timeout = 3000,\n  timeoutValue: any = { code: -1 },\n) => {\n  return Promise.all(\n    promises.map((p: Promise<unknown>) => {\n      return Promise.race([p, delay(timeout, timeoutValue)]);\n    }),\n  );\n};\n\nexport const genLocalSignMsg = (sps: ISp[], domain: string) => {\n  const spMsg = sps\n    .map((sp: ISp) => {\n      return `- SP ${sp.endpoint} (name:${sp.name || ''}) with nonce:${sp.nonce}`;\n    })\n    .join('\\n');\n  const firstSign = `Sign this message to let dapp ${domain} access the following SPs:\n    ${spMsg}`;\n\n  return firstSign;\n};\n\nexport const fetchNonces = async ({ sps, address, domain }: IFetchNonces): Promise<any> => {\n  const promises = sps.map((sp: ISp) =>\n    getNonce({\n      spEndpoint: sp.endpoint,\n      spAddress: sp.address,\n      spName: sp.name,\n      address,\n      domain,\n    }),\n  );\n  const res = await promiseRaceAll(promises, 3000, { code: -1, nonce: null });\n\n  return res;\n};\n\nexport const updateSpsPubKey = async ({\n  address,\n  sps,\n  domain,\n  pubKey,\n  expireDate,\n  authorization,\n}: IUpdateSpsPubKeyParams) => {\n  return Promise.all(\n    sps.map((sp: ISp) =>\n      Promise.race([\n        updateUserAccountKey({\n          address,\n          domain,\n          sp,\n          pubKey,\n          expireDate,\n          authorization,\n        }),\n        delay(3000, { code: -1, data: { address } }),\n      ]),\n    ),\n  );\n};\n\nexport const getSpsEndpoint = (sps: ISp[]) => {\n  const spsEndpoint = sps.map((sp) => sp.endpoint);\n\n  return spsEndpoint;\n};\n\nexport const genSecondSignMsg = ({\n  domain,\n  address,\n  pubKey,\n  chainId,\n  issuedDate,\n  expireDate,\n}: TGenSecondSignMsgParams): string => {\n  // NOTICE: DO NOT CHANGE THE TEMPLATE FORMAT\n  return `${domain} wants you to sign in with your BNB Greenfield account:${address}\nRegister your identity public key ${pubKey}\nURI: ${domain}\nVersion: 1\nChain ID: ${chainId}\nIssued At: ${issuedDate}\nExpiration Time: ${expireDate}\n`;\n};\n\nexport const personalSign = async ({ message, address, provider }: IPersonalSignParams) => {\n  const sign = await provider.request({\n    method: 'personal_sign',\n    params: [message, address],\n  });\n\n  return sign;\n};\n","import { hexlify } from '@ethersproject/bytes';\nimport { ed25519 } from '@noble/curves/ed25519';\nimport { injectable } from 'tsyringe';\nimport { convertTimeStampToDate, getUtcZeroTimestamp, SpResponse } from '..';\nimport { NORMAL_ERROR_CODE } from '../constants/http';\nimport { genSecondSignMsg, personalSign, updateSpsPubKey } from '../offchainauth';\nimport {\n  IGenOffChainAuthKeyPairAndUpload,\n  IReturnOffChainAuthKeyPairAndUpload,\n} from '../types/storage';\n\nexport interface IOffChainAuth {\n  /**\n   * generate off-chain auth key pair and upload the public key to meta service, return the seedString for signing message when user need to get approval from sp.\n   */\n  genOffChainAuthKeyPairAndUpload(\n    params: IGenOffChainAuthKeyPairAndUpload,\n    provider: any,\n  ): Promise<SpResponse<IReturnOffChainAuthKeyPairAndUpload>>;\n}\n\n@injectable()\nexport class OffChainAuth implements IOffChainAuth {\n  public async genOffChainAuthKeyPairAndUpload(\n    { sps, address, domain, expirationMs, chainId }: IGenOffChainAuthKeyPairAndUpload,\n    provider: any,\n  ) {\n    try {\n      const { privateKey, publicKey } = this.generateKeys();\n\n      const curUtcZeroTimestamp = getUtcZeroTimestamp();\n      const expirationTime = curUtcZeroTimestamp + expirationMs;\n      const issuedDate = convertTimeStampToDate(curUtcZeroTimestamp);\n      const expireDate = convertTimeStampToDate(expirationTime);\n      const signMsg = genSecondSignMsg({\n        domain,\n        address,\n        pubKey: hexlify(publicKey).slice(2),\n        chainId,\n        issuedDate,\n        expireDate,\n      });\n      const signRes = await personalSign({ message: signMsg, address, provider });\n      const jsonSignMsg = JSON.stringify(signMsg).replace(/\\\"/g, '');\n      const authorization = `GNFD1-ETH-PERSONAL_SIGN,SignedMsg=${jsonSignMsg},Signature=${signRes}`;\n\n      const res = await updateSpsPubKey({\n        address,\n        sps,\n        domain,\n        pubKey: hexlify(publicKey).slice(2),\n        expireDate,\n        authorization,\n      });\n\n      const uploadSpsPubkeyFailed = res\n        .filter((item: any) => item.code !== 0)\n        .map((item: any) => item.data.address);\n      if (uploadSpsPubkeyFailed.length === sps.length) {\n        throw new Error(`No SP service is available. Please try again later.`);\n      }\n      const successSps: string[] = [];\n      res.forEach((item: any) => {\n        if (item.code === 0) {\n          successSps.push(item.data.address);\n        }\n      });\n\n      return {\n        code: 0,\n        body: {\n          seedString: hexlify(privateKey),\n          keypairs: {\n            privateKey: hexlify(privateKey).slice(2),\n            publicKey: hexlify(publicKey).slice(2),\n          },\n          expirationTime,\n          spAddresses: successSps,\n          failedSpAddresses: uploadSpsPubkeyFailed,\n        },\n        message: 'Sign and upload public key success',\n      };\n    } catch (error: any) {\n      return { code: -1, message: error.message, statusCode: error?.status || NORMAL_ERROR_CODE };\n    }\n  }\n\n  private generateKeys() {\n    const privateKey = ed25519.utils.randomPrivateKey();\n    const publicKey = ed25519.getPublicKey(privateKey);\n\n    return {\n      privateKey,\n      publicKey,\n    };\n  }\n}\n","import { EMPTY_STRING_SHA256, METHOD_GET } from '@/constants';\nimport { ReqMeta } from '@/types';\nimport { convertStrToBool } from '@/types/sp/Common';\nimport {\n  ListUserPaymentAccountsResponse,\n  ListUserPaymentAccountsResquest,\n} from '@/types/sp/ListUserPaymentAccounts';\nimport { XMLParser } from 'fast-xml-parser';\nimport { getSortQuery, getSortQueryParams } from '../auth';\n\n// https://github.com/bnb-chain/greenfield-storage-provider/blob/master/docs/storage-provider-rest-api/list_user_payment_accounts.md\nexport const getListUserPaymentAccountMetaInfo = (\n  endpoint: string,\n  params: ListUserPaymentAccountsResquest,\n) => {\n  const path = '/';\n  const queryMap = {\n    'user-payments': 'null',\n  };\n  const query = getSortQuery(queryMap);\n  let url = new URL(path, endpoint);\n  url = getSortQueryParams(url, queryMap);\n\n  const reqMeta: Partial<ReqMeta> = {\n    contentSHA256: EMPTY_STRING_SHA256,\n    method: METHOD_GET,\n    url: {\n      hostname: new URL(url).hostname,\n      query,\n      path,\n    },\n    userAddress: params.account,\n  };\n\n  const optionsWithOutHeaders: Omit<RequestInit, 'headers'> = {\n    method: METHOD_GET,\n  };\n\n  return {\n    url: url.href,\n    optionsWithOutHeaders,\n    reqMeta,\n  };\n};\n\nexport const parseListUserPaymentAccountResponse = (data: string) => {\n  const xmlParser = new XMLParser({\n    parseTagValue: false,\n  });\n  const res = xmlParser.parse(data) as ListUserPaymentAccountsResponse;\n\n  let PaymentAccounts = res.GfSpListUserPaymentAccountsResponse.PaymentAccounts || [];\n\n  if (PaymentAccounts) {\n    if (!Array.isArray(PaymentAccounts)) {\n      PaymentAccounts = [PaymentAccounts];\n    }\n\n    PaymentAccounts = PaymentAccounts.map((item) => {\n      item.PaymentAccount = {\n        ...item.PaymentAccount,\n        // @ts-ignore\n        Refundable: convertStrToBool(item.PaymentAccount.Refundable),\n        UpdateAt: Number(item.PaymentAccount.UpdateAt),\n        UpdateTime: Number(item.PaymentAccount.UpdateTime),\n      };\n\n      return item;\n    });\n  }\n\n  res.GfSpListUserPaymentAccountsResponse.PaymentAccounts = PaymentAccounts;\n\n  return res;\n};\n","import { assertAuthType } from '@/utils/asserts/params';\nimport {\n  QueryAutoSettleRecordsRequest,\n  QueryAutoSettleRecordsResponse,\n  QueryDynamicBalanceRequest,\n  QueryDynamicBalanceResponse,\n  QueryGetStreamRecordResponse,\n  QueryOutFlowsRequest,\n  QueryOutFlowsResponse,\n  QueryParamsByTimestampRequest,\n  QueryParamsByTimestampResponse,\n  QueryParamsResponse,\n  QueryPaymentAccountCountRequest,\n  QueryPaymentAccountCountResponse,\n  QueryPaymentAccountCountsRequest,\n  QueryPaymentAccountCountsResponse,\n  QueryPaymentAccountRequest,\n  QueryPaymentAccountResponse,\n  QueryPaymentAccountsByOwnerRequest,\n  QueryPaymentAccountsByOwnerResponse,\n  QueryPaymentAccountsRequest,\n  QueryPaymentAccountsResponse,\n  QueryStreamRecordsRequest,\n  QueryStreamRecordsResponse,\n} from '@bnb-chain/greenfield-cosmos-types/greenfield/payment/query';\nimport {\n  MsgDeposit,\n  MsgDisableRefund,\n  MsgWithdraw,\n} from '@bnb-chain/greenfield-cosmos-types/greenfield/payment/tx';\nimport { container, delay, inject, injectable } from 'tsyringe';\nimport {\n  AuthType,\n  MsgDepositTypeUrl,\n  MsgDisableRefundTypeUrl,\n  MsgWithdrawTypeUrl,\n  NORMAL_ERROR_CODE,\n  SpResponse,\n  TxResponse,\n} from '..';\nimport { RpcQueryClient } from '../clients/queryclient';\nimport {\n  getListUserPaymentAccountMetaInfo,\n  parseListUserPaymentAccountResponse,\n} from '../clients/spclient/spApis/listUserPaymentAccounts';\nimport { SpClient } from '../clients/spclient/spClient';\nimport { TxClient } from '../clients/txClient';\nimport { MsgDepositSDKTypeEIP712 } from '../messages/greenfield/payment/MsgDeposit';\nimport { MsgDisableRefundSDKTypeEIP712 } from '../messages/greenfield/payment/MsgDisableRefund';\nimport { MsgWithdrawSDKTypeEIP712 } from '../messages/greenfield/payment/MsgWithdraw';\nimport {\n  ListUserPaymentAccountsResponse,\n  ListUserPaymentAccountsResquest,\n} from '../types/sp/ListUserPaymentAccounts';\nimport { SpConfig } from './config';\nimport { Sp } from './sp';\n\nexport interface IPayment {\n  /**\n   * retrieves stream record information for a given stream address.\n   * the account must actions: deposit, withdraw\n   */\n  getStreamRecord(account: string): Promise<QueryGetStreamRecordResponse>;\n\n  getStreamRecordAll(request: QueryStreamRecordsRequest): Promise<QueryStreamRecordsResponse>;\n\n  /**\n   * deposits BNB to a stream account.\n   */\n  deposit(msg: MsgDeposit): Promise<TxResponse>;\n\n  /**\n   * withdraws BNB from a stream account.\n   */\n  withdraw(msg: MsgWithdraw): Promise<TxResponse>;\n\n  /**\n   * disables refund for a stream account.\n   */\n  disableRefund(msg: MsgDisableRefund): Promise<TxResponse>;\n\n  params(): Promise<QueryParamsResponse>;\n\n  paramsByTimestamp(\n    request: QueryParamsByTimestampRequest,\n  ): Promise<QueryParamsByTimestampResponse>;\n\n  paymentAccount(request: QueryPaymentAccountRequest): Promise<QueryPaymentAccountResponse>;\n\n  paymentAccountAll(request: QueryPaymentAccountsRequest): Promise<QueryPaymentAccountsResponse>;\n\n  /** Queries a PaymentAccountCount by index. */\n  getPaymentAccountCount(\n    request: QueryPaymentAccountCountRequest,\n  ): Promise<QueryPaymentAccountCountResponse>;\n\n  /** Queries a list of PaymentAccountCount items. */\n  getPaymentAccountCounts(\n    request: QueryPaymentAccountCountsRequest,\n  ): Promise<QueryPaymentAccountCountsResponse>;\n\n  /** Queries a list of DynamicBalance items. */\n  dynamicBalance(request: QueryDynamicBalanceRequest): Promise<QueryDynamicBalanceResponse>;\n\n  /** Queries a list of GetPaymentAccountsByOwner items. */\n  getPaymentAccountsByOwner(\n    request: QueryPaymentAccountsByOwnerRequest,\n  ): Promise<QueryPaymentAccountsByOwnerResponse>;\n\n  getAutoSettleRecords(\n    request: QueryAutoSettleRecordsRequest,\n  ): Promise<QueryAutoSettleRecordsResponse>;\n\n  getOutFlows(request: QueryOutFlowsRequest): Promise<QueryOutFlowsResponse>;\n\n  listUserPaymentAccounts(\n    params: ListUserPaymentAccountsResquest,\n    authType: AuthType,\n    config?: SpConfig,\n  ): Promise<SpResponse<ListUserPaymentAccountsResponse>>;\n}\n\n@injectable()\nexport class Payment implements IPayment {\n  constructor(\n    @inject(delay(() => TxClient)) private txClient: TxClient,\n    @inject(delay(() => Sp)) private sp: Sp,\n  ) {}\n  private spClient = container.resolve(SpClient);\n  private queryClient: RpcQueryClient = container.resolve(RpcQueryClient);\n\n  public async getStreamRecord(account: string) {\n    const rpc = await this.queryClient.getPaymentQueryClient();\n    return await rpc.StreamRecord({\n      account,\n    });\n  }\n\n  public async getStreamRecordAll(request: QueryStreamRecordsRequest) {\n    const rpc = await this.queryClient.getPaymentQueryClient();\n    return await rpc.StreamRecords(request);\n  }\n\n  public async params() {\n    const rpc = await this.queryClient.getPaymentQueryClient();\n    return await rpc.Params();\n  }\n\n  public async paramsByTimestamp(request: QueryParamsByTimestampRequest) {\n    const rpc = await this.queryClient.getPaymentQueryClient();\n    return await rpc.ParamsByTimestamp(request);\n  }\n\n  public async getPaymentAccountCount(request: QueryPaymentAccountCountRequest) {\n    const rpc = await this.queryClient.getPaymentQueryClient();\n    return await rpc.PaymentAccountCount(request);\n  }\n\n  public async getPaymentAccountCounts(request: QueryPaymentAccountCountsRequest) {\n    const rpc = await this.queryClient.getPaymentQueryClient();\n    return await rpc.PaymentAccountCounts(request);\n  }\n\n  public async paymentAccount(request: QueryPaymentAccountRequest) {\n    const rpc = await this.queryClient.getPaymentQueryClient();\n    return await rpc.PaymentAccount(request);\n  }\n\n  public async paymentAccountAll(request: QueryPaymentAccountsRequest) {\n    const rpc = await this.queryClient.getPaymentQueryClient();\n    return await rpc.PaymentAccounts(request);\n  }\n\n  public async dynamicBalance(request: QueryDynamicBalanceRequest) {\n    const rpc = await this.queryClient.getPaymentQueryClient();\n    return await rpc.DynamicBalance(request);\n  }\n\n  public async getPaymentAccountsByOwner(request: QueryPaymentAccountsByOwnerRequest) {\n    const rpc = await this.queryClient.getPaymentQueryClient();\n    return await rpc.PaymentAccountsByOwner(request);\n  }\n\n  public async getAutoSettleRecords(request: QueryAutoSettleRecordsRequest) {\n    const rpc = await this.queryClient.getPaymentQueryClient();\n    return await rpc.AutoSettleRecords(request);\n  }\n\n  public async getOutFlows(request: QueryOutFlowsRequest) {\n    const rpc = await this.queryClient.getPaymentQueryClient();\n    return await rpc.OutFlows(request);\n  }\n\n  public async deposit(msg: MsgDeposit) {\n    return await this.txClient.tx(\n      MsgDepositTypeUrl,\n      msg.creator,\n      MsgDepositSDKTypeEIP712,\n      MsgDeposit.toSDK(msg),\n      MsgDeposit.encode(msg).finish(),\n    );\n  }\n\n  public async withdraw(msg: MsgWithdraw) {\n    return await this.txClient.tx(\n      MsgWithdrawTypeUrl,\n      msg.creator,\n      MsgWithdrawSDKTypeEIP712,\n      MsgWithdraw.toSDK(msg),\n      MsgWithdraw.encode(msg).finish(),\n    );\n  }\n\n  public async disableRefund(msg: MsgDisableRefund) {\n    return await this.txClient.tx(\n      MsgDisableRefundTypeUrl,\n      msg.owner,\n      MsgDisableRefundSDKTypeEIP712,\n      MsgDisableRefund.toSDK(msg),\n      MsgDisableRefund.encode(msg).finish(),\n    );\n  }\n\n  public async listUserPaymentAccounts(\n    params: ListUserPaymentAccountsResquest,\n    authType: AuthType,\n    config?: SpConfig,\n  ) {\n    try {\n      assertAuthType(authType);\n      let endpoint = '';\n      if (config && config.endpoint) {\n        endpoint = config.endpoint;\n      } else {\n        const sp = await this.sp.getInServiceSP();\n        endpoint = sp.endpoint;\n      }\n\n      const { url, optionsWithOutHeaders, reqMeta } = getListUserPaymentAccountMetaInfo(\n        endpoint,\n        params,\n      );\n\n      const signHeaders = await this.spClient.signHeaders(reqMeta, authType);\n\n      const result = await this.spClient.callApi(url, {\n        ...optionsWithOutHeaders,\n        headers: signHeaders,\n      });\n\n      const xml = await result.text();\n      const res = parseListUserPaymentAccountResponse(xml);\n\n      return {\n        code: 0,\n        message: 'Get bucket success.',\n        statusCode: result.status,\n        body: res,\n      };\n    } catch (error: any) {\n      return {\n        code: -1,\n        message: error.message,\n        statusCode: error?.statusCode || NORMAL_ERROR_CODE,\n      };\n    }\n  }\n}\n","export const MsgSubmitProposalSDKTypeEIP712 = {\n  Msg1: [\n    {\n      name: 'initial_deposit',\n      type: 'TypeMsg1InitialDeposit[]',\n    },\n    {\n      name: 'messages',\n      type: 'TypeAny[]',\n    },\n    {\n      name: 'metadata',\n      type: 'string',\n    },\n    {\n      name: 'proposer',\n      type: 'string',\n    },\n    {\n      name: 'summary',\n      type: 'string',\n    },\n    {\n      name: 'title',\n      type: 'string',\n    },\n    {\n      name: 'type',\n      type: 'string',\n    },\n  ],\n  TypeMsg1InitialDeposit: [\n    {\n      name: 'amount',\n      type: 'string',\n    },\n    {\n      name: 'denom',\n      type: 'string',\n    },\n  ],\n  TypeAny: [\n    {\n      name: 'type',\n      type: 'string',\n    },\n    {\n      name: 'value',\n      type: 'bytes',\n    },\n  ],\n};\n","export const MsgVoteSDKTypeEIP712 = {\n  Msg1: [\n    {\n      name: 'metadata',\n      type: 'string',\n    },\n    {\n      name: 'option',\n      type: 'string',\n    },\n    {\n      name: 'proposal_id',\n      type: 'uint64',\n    },\n    {\n      name: 'type',\n      type: 'string',\n    },\n    {\n      name: 'voter',\n      type: 'string',\n    },\n  ],\n};\n","import { voteOptionToJSON } from '@bnb-chain/greenfield-cosmos-types/cosmos/gov/v1/gov';\nimport { MsgSubmitProposal, MsgVote } from '@bnb-chain/greenfield-cosmos-types/cosmos/gov/v1/tx';\nimport { MsgCreateValidator } from '@bnb-chain/greenfield-cosmos-types/cosmos/staking/v1beta1/tx';\nimport { delay, inject, injectable } from 'tsyringe';\nimport { encodeToHex, MsgSubmitProposalTypeUrl, MsgVoteTypeUrl, TxResponse } from '..';\nimport { TxClient } from '../clients/txClient';\nimport { MsgSubmitProposalSDKTypeEIP712 } from '../messages/cosmos/gov/MsgSubmitProposal';\nimport { MsgVoteSDKTypeEIP712 } from '../messages/cosmos/gov/MsgVote';\n\nexport interface IProposal {\n  /**\n   * NOTICE: only validator can use this api\n   */\n  submitProposal(createValidatorTx: object, srcMsg: MsgSubmitProposal): Promise<TxResponse>;\n\n  /**\n   * NOTICE: only validator can use this api\n   */\n  voteProposal(msg: MsgVote): Promise<TxResponse>;\n}\n\n@injectable()\nexport class Proposal implements IProposal {\n  constructor(@inject(delay(() => TxClient)) private txClient: TxClient) {}\n\n  public async voteProposal(msg: MsgVote) {\n    return await this.txClient.tx(\n      MsgVoteTypeUrl,\n      msg.voter,\n      MsgVoteSDKTypeEIP712,\n      {\n        ...MsgVote.toSDK(msg),\n        option: voteOptionToJSON(msg.option),\n        proposal_id: msg.proposalId.toNumber(),\n      },\n      MsgVote.encode(msg).finish(),\n    );\n  }\n\n  public async submitProposal(createMsg: MsgCreateValidator, submitMsg: MsgSubmitProposal) {\n    return await this.txClient.tx(\n      MsgSubmitProposalTypeUrl,\n      submitMsg.proposer,\n      MsgSubmitProposalSDKTypeEIP712,\n      {\n        ...MsgSubmitProposal.toSDK(submitMsg),\n        messages: [\n          {\n            type: '/cosmos.staking.v1beta1.MsgCreateValidator',\n            value: encodeToHex(JSON.stringify(createMsg)),\n            // base64FromBytes(arrayify('0x' + encodeToHex(JSON.stringify(createMsg)))),\n          },\n        ],\n      },\n      MsgSubmitProposal.encode(submitMsg).finish(),\n    );\n  }\n}\n","export const MsgCreateValidatorSDKTypeEIP712 = {\n  Msg1: [\n    {\n      name: 'bls_key',\n      type: 'string',\n    },\n    {\n      name: 'bls_proof',\n      type: 'string',\n    },\n    {\n      name: 'challenger_address',\n      type: 'string',\n    },\n    {\n      name: 'commission',\n      type: 'TypeMsg1Commission',\n    },\n    {\n      name: 'delegator_address',\n      type: 'string',\n    },\n    {\n      name: 'description',\n      type: 'TypeMsg1Description',\n    },\n    {\n      name: 'from',\n      type: 'string',\n    },\n    {\n      name: 'min_self_delegation',\n      type: 'string',\n    },\n    {\n      name: 'pubkey',\n      type: 'TypeAny',\n    },\n    {\n      name: 'relayer_address',\n      type: 'string',\n    },\n    {\n      name: 'type',\n      type: 'string',\n    },\n    {\n      name: 'validator_address',\n      type: 'string',\n    },\n    {\n      name: 'value',\n      type: 'TypeMsg1Value',\n    },\n  ],\n  TypeMsg1Commission: [\n    {\n      name: 'max_change_rate',\n      type: 'string',\n    },\n    {\n      name: 'max_rate',\n      type: 'string',\n    },\n    {\n      name: 'rate',\n      type: 'string',\n    },\n  ],\n  TypeMsg1Description: [\n    {\n      name: 'details',\n      type: 'string',\n    },\n    {\n      name: 'identity',\n      type: 'string',\n    },\n    {\n      name: 'moniker',\n      type: 'string',\n    },\n    {\n      name: 'security_contact',\n      type: 'string',\n    },\n    {\n      name: 'website',\n      type: 'string',\n    },\n  ],\n  TypeMsg1Value: [\n    {\n      name: 'amount',\n      type: 'string',\n    },\n    {\n      name: 'denom',\n      type: 'string',\n    },\n  ],\n  TypeAny: [\n    {\n      name: 'type',\n      type: 'string',\n    },\n    {\n      name: 'value',\n      type: 'bytes',\n    },\n  ],\n};\n","export const MsgEditValidatorSDKTypeEIP712 = {\n  Msg1: [\n    {\n      name: 'bls_key',\n      type: 'string',\n    },\n    {\n      name: 'bls_proof',\n      type: 'string',\n    },\n    {\n      name: 'challenger_address',\n      type: 'string',\n    },\n    {\n      name: 'commission_rate',\n      type: 'string',\n    },\n    {\n      name: 'description',\n      type: 'TypeMsg1Description',\n    },\n    {\n      name: 'min_self_delegation',\n      type: 'string',\n    },\n    {\n      name: 'relayer_address',\n      type: 'string',\n    },\n    {\n      name: 'type',\n      type: 'string',\n    },\n    {\n      name: 'validator_address',\n      type: 'string',\n    },\n  ],\n  TypeMsg1Description: [\n    {\n      name: 'details',\n      type: 'string',\n    },\n    {\n      name: 'identity',\n      type: 'string',\n    },\n    {\n      name: 'moniker',\n      type: 'string',\n    },\n    {\n      name: 'security_contact',\n      type: 'string',\n    },\n    {\n      name: 'website',\n      type: 'string',\n    },\n  ],\n};\n","import {\n  QueryValidatorsRequest,\n  QueryValidatorsResponse,\n} from '@bnb-chain/greenfield-cosmos-types/cosmos/staking/v1beta1/query';\nimport {\n  MsgCreateValidator,\n  MsgEditValidator,\n} from '@bnb-chain/greenfield-cosmos-types/cosmos/staking/v1beta1/tx';\nimport { container, delay, inject, injectable } from 'tsyringe';\nimport { MsgCreateValidatorTypeUrl, MsgEditValidatorTypeUrl, TxResponse } from '..';\nimport { RpcQueryClient } from '../clients/queryclient';\nimport { TxClient } from '../clients/txClient';\nimport { MsgCreateValidatorSDKTypeEIP712 } from '../messages/cosmos/staking/MsgCreateValidator';\nimport { MsgEditValidatorSDKTypeEIP712 } from '../messages/cosmos/staking/MsgEditValidator';\nimport { Proposal } from './proposal';\n\nexport interface IValidator {\n  /**\n   * lists all validators (if status is empty string) or validators filtered by status.\n   * STATUS:\n   * \"BOND_STATUS_UNBONDED\",\n   * \"BOND_STATUS_UNBONDING\",\n   * \"BOND_STATUS_BONDED\",\n   */\n  listValidators(request: QueryValidatorsRequest): Promise<QueryValidatorsResponse>;\n\n  /**\n   * NOTICE: only validator can use this api\n   */\n  createValidator(address: string, createValidatorSrcMsg: MsgCreateValidator): Promise<TxResponse>;\n\n  /**\n   * NOTICE: only validator can use this api\n   */\n  editValidator(address: string, msg: MsgEditValidator): Promise<TxResponse>;\n}\n\n@injectable()\nexport class Validator implements IValidator {\n  constructor(@inject(delay(() => TxClient)) private txClient: TxClient) {}\n  private queryClient: RpcQueryClient = container.resolve(RpcQueryClient);\n\n  private proposal: Proposal = container.resolve(Proposal);\n\n  public async listValidators(request: QueryValidatorsRequest) {\n    const client = await this.queryClient.getStakingClient();\n    return client.Validators(request);\n  }\n\n  public async createValidator(address: string, msg: MsgCreateValidator) {\n    return await this.txClient.tx(\n      MsgCreateValidatorTypeUrl,\n      address,\n      MsgCreateValidatorSDKTypeEIP712,\n      MsgCreateValidator.toSDK(msg),\n      MsgCreateValidator.encode(msg).finish(),\n    );\n  }\n\n  public async editValidator(address: string, msg: MsgEditValidator) {\n    return await this.txClient.tx(\n      MsgEditValidatorTypeUrl,\n      address,\n      MsgEditValidatorSDKTypeEIP712,\n      MsgEditValidator.toSDK(msg),\n      MsgEditValidator.encode(msg).finish(),\n    );\n  }\n}\n","import 'reflect-metadata';\nimport { container } from 'tsyringe';\nimport { Account, IAccount } from './api/account';\nimport { Basic, IBasic } from './api/basic';\nimport { Bucket, IBucket } from './api/bucket';\nimport { Challenge, IChallenge } from './api/challenge';\nimport { CrossChain, ICrossChain } from './api/crosschain';\nimport { Distribution, IDistribution } from './api/distribution';\nimport { FeeGrant, IFeeGrant } from './api/feegrant';\nimport { Gashub, IGashub } from './api/gashub';\nimport { Group, IGroup } from './api/group';\nimport { IObject, Objects } from './api/objects';\nimport { IOffChainAuth, OffChainAuth } from './api/offchainauth';\nimport { IPayment, Payment } from './api/payment';\nimport { IProposal, Proposal } from './api/proposal';\nimport { ISp, Sp } from './api/sp';\nimport { IStorage, Storage } from './api/storage';\nimport { Validator } from './api/validator';\nimport { IVirtualGroup, VirtualGroup } from './api/virtualGroup';\nimport { RpcQueryClient } from './clients/queryclient';\nimport { ISpClient, SpClient } from './clients/spclient/spClient';\nimport { ITxClient, TxClient } from './clients/txClient';\n\nexport class Client {\n  /**\n   * @rpcUrl string\n   * @chaidId string\n   * @wasmURL optional, need setting only used for browser\n   */\n  static create(rpcUrl: string, chainId: string): Client {\n    container.register('RPC_URL', { useValue: rpcUrl });\n    container.register('CHAIN_ID', { useValue: chainId });\n\n    const account = container.resolve<Account>(Account);\n    const basic = container.resolve<Basic>(Basic);\n    const bucket = container.resolve<Bucket>(Bucket);\n    const challenge = container.resolve<Challenge>(Challenge);\n    const crosschain = container.resolve<CrossChain>(CrossChain);\n    const distribution = container.resolve<Distribution>(Distribution);\n    const feegrant = container.resolve<FeeGrant>(FeeGrant);\n    const gashub = container.resolve<Gashub>(Gashub);\n    const group = container.resolve<Group>(Group);\n    const objects = container.resolve<Objects>(Objects);\n    const payment = container.resolve<Payment>(Payment);\n    const proposal = container.resolve<Proposal>(Proposal);\n    const queryClient = container.resolve<RpcQueryClient>(RpcQueryClient);\n    const sp = container.resolve<Sp>(Sp);\n    const spClient = container.resolve(SpClient);\n    const storage = container.resolve<Storage>(Storage);\n    const txClient = container.resolve<TxClient>(TxClient);\n    const offchainauth = container.resolve<OffChainAuth>(OffChainAuth);\n    const validator = container.resolve<Validator>(Validator);\n    const virtualGroup = container.resolve<VirtualGroup>(VirtualGroup);\n\n    return new Client(\n      account,\n      basic,\n      bucket,\n      challenge,\n      crosschain,\n      distribution,\n      feegrant,\n      gashub,\n      group,\n      objects,\n      payment,\n      proposal,\n      queryClient,\n      sp,\n      spClient,\n      storage,\n      txClient,\n      offchainauth,\n      validator,\n      virtualGroup,\n    );\n  }\n\n  constructor(\n    public account: IAccount,\n    public basic: IBasic,\n    public bucket: IBucket,\n    public challenge: IChallenge,\n    public crosschain: ICrossChain,\n    public distribution: IDistribution,\n    public feegrant: IFeeGrant,\n    public gashub: IGashub,\n    public group: IGroup,\n    public object: IObject,\n    public payment: IPayment,\n    public proposal: IProposal,\n    public queryClient: RpcQueryClient,\n    public sp: ISp,\n    public spClient: ISpClient,\n    public storage: IStorage,\n    public txClient: ITxClient,\n    public offchainauth: IOffChainAuth,\n    public validator: Validator,\n    public virtualGroup: IVirtualGroup,\n  ) {}\n}\n","import type { ReqMeta } from '@/types';\nimport { getGetObjectMetaInfo } from './getObject';\nimport { getPutObjectMetaInfo } from './putObject';\nimport { getQueryBucketReadQuotaMetaInfo } from './queryBucketReadQuota';\n\nexport type SPMetaInfo = {\n  url: string;\n  optionsWithOutHeaders: Omit<RequestInit, 'headers'>;\n  reqMeta: Partial<ReqMeta>;\n};\n\nexport const SpMetaInfo = {\n  getGetObjectMetaInfo,\n  getPutObjectMetaInfo,\n  getQueryBucketReadQuotaMetaInfo,\n};\n"],"names":["isBytes","output","crypto","createView","hexes","bytesToHex","bytes","abytes","utf8ToBytes","toBytes","concatBytes","Hash","wrapConstructor","randomBytes","setBigUint64","HashMD","_0n","_1n","_2n","hexToNumber","asciis","asciiToBase16","hexToBytes","bytesToNumberBE","bytesToNumberLE","numberToBytesBE","numberToBytesLE","ensureBytes","bitLen","bitMask","validatorFns","validateObject","_3n","_4n","_5n","_8n","mod","pow","pow2","invert","tonelliShanks","FpSqrt","FIELD_FIELDS","validateField","FpPow","FpInvertBatch","nLength","Field","hash","assertHash","assertExists","assertBytes","wNAF","validateBasic","ut.validateObject","ut.abytes","ut.concatBytes","ut.isBytes","ut.bytesToHex","ut.bytesToNumberBE","mod.mod","validateOpts","mod.invert","ut.numberToBytesBE","ut.hexToBytes","mod.getMinHashLength","mod.mapHashToField","ut.bitMask","ut.createHmacDrbg","Fp","AuthQueryClientImpl","BankQueryClientImpl","PaymentQueryClientImpl","SpQueryClientImpl","ChallengeQueryClientImpl","CrosschainQueryClientImpl","OracleQueryClientImpl","BridgeQueryClientImpl","FeeGrantQueryClientImpl","StorageQueryClientImpl","GashubClientImpl","VirtualGroupClientImpl","StakingQueryClientImpl","delay","tdServiceClientImpl","U32_MASK64","_32n","fromBig","split","rotlSH","rotlSL","rotlBH","rotlBL","ut.aInRange","ut.bytesToNumberLE","ut.numberToBytesLE","Headers","toHex"],"mappings":"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AE,EAAE,CAAC,CAAC;AAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;AAC/B,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;AAC/B,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AAChC,YAAY,OAAO,IAAI,KAAK,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;AACzC,SAAS;AACT;AACA;AACA;AACA;AACA,QAAQ,GAAG,CAAC,KAAK,EAAE;AACnB,YAAY,cAAc,CAAC,KAAK,CAAC,CAAC;AAClC,YAAY,MAAM,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,IAAI,CAAC;AACpD,YAAY,MAAM,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,KAAK,CAAC;AACrD,YAAY,IAAI,EAAE,GAAG,EAAE,CAAC,IAAI,EAAE,EAAE,GAAG,EAAE,CAAC,IAAI,EAAE,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC;AACzD,YAAY,MAAM,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;AAC9B,YAAY,MAAM,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAEA,KAAG,CAAC,CAAC;AAC5C,YAAY,IAAI,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AACpC,YAAY,IAAI,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AACpC,YAAY,IAAI,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AACpC,YAAY,IAAI,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AACpC,YAAY,IAAI,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AACpC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AAChC,YAAY,IAAI,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AACpC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;AAC/B,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,CAA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"}